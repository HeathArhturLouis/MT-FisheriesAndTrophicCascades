(* Content-type: application/vnd.wolfram.player *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       153,          7]
NotebookDataLength[    394222,       8285]
NotebookOptionsPosition[    384262,       8108]
NotebookOutlinePosition[    385116,       8138]
CellTagsIndexPosition[    385073,       8135]
WindowTitle->Predator-Prey Ecosystem: A Real-Time Agent-Based Simulation - \
Source
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["Predator-Prey Ecosystem: A Real-Time Agent-Based Simulation", "Section",
 CellFrame->{{0, 0}, {0, 0}},
 ShowCellBracket->False,
 FontColor->RGBColor[
  0.597406, 0, 
   0.0527047],ExpressionUUID->"8e21f89b-a20a-4716-b126-7254b94ec7d6"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
FP/69esnAAAAAAAAAAAAwM74B4thROM=
   "], {{0, 0}, {1800, 25}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->{1800, 25},
  PlotRange->{{0, 1800}, {0, 25}}]], "Section",
 CellFrame->{{0, 0}, {0, 0}},
 ShowCellBracket->
  False,ExpressionUUID->"0234164f-36a2-441c-b2a5-019692ee3694"],

Cell[CellGroupData[{

Cell["Initialisation Parameters", "Section",
 CellChangeTimes->{{3.8288925766475067`*^9, 
  3.828892605890847*^9}},ExpressionUUID->"42dcad2d-3e92-4bc1-8be6-\
842c5a1d5631"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Enum", " ", "for", " ", "agent", " ", "types"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Shark", "=", "1."}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Sardine", "=", "2."}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Algae", " ", "=", " ", "3."}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Trawler", " ", "=", " ", "4."}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
      "Size", " ", "of", " ", "initial", " ", "population", " ", "of", " ", 
       "Algae"}], " ", "&"}], " ", "algae", " ", "endurance"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"initialAlgae", " ", "=", " ", "100."}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"algaeEndurance", " ", "=", " ", "20"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sharkSight", " ", "=", " ", "0.25"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sardineSight", " ", "=", " ", "0.15"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Cap", " ", "population", " ", "members"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxSardines", "=", "500."}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxSharks", "=", "500."}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxAlgae", " ", "=", " ", "1500."}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dummyPoint", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1."}], ",", 
       RowBox[{"-", "1."}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Seed", " ", "random", " ", "for", " ", "reproducability"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
   "SeedRandom", "[", 
    "\"\<A trout is a moment of beauty known only to those who seek it - \
fisherman's saying\>\"", "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "VECTOR", " ", "GEOMETRY", " ", "HELPER", " ", "FUNCTIONS", " ", "FOR", 
     " ", "EASY", " ", "MODIFICATION"}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"getTrawlerRect", "[", 
     RowBox[{"centroid_", ",", " ", "tSize_"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "Helper", " ", "function", " ", "returns", " ", "rectangle", " ", 
      "around", " ", "specified", " ", "centroid"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Rectangle", "[", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"centroid", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", "-", " ", 
         RowBox[{"(", 
          RowBox[{"0.1", " ", "*", " ", "tSize"}], " ", ")"}]}], " ", ",", 
        " ", 
        RowBox[{
         RowBox[{"centroid", "[", 
          RowBox[{"[", "2", "]"}], "]"}], " ", "-", " ", 
         RowBox[{"(", 
          RowBox[{"0.1", " ", "*", " ", "tSize"}], " ", ")"}]}]}], "}"}], ",",
       "\[IndentingNewLine]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"centroid", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", 
         RowBox[{"(", 
          RowBox[{"0.1", " ", "*", " ", "tSize"}], " ", ")"}]}], " ", ",", 
        " ", 
        RowBox[{
         RowBox[{"centroid", "[", 
          RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", 
         RowBox[{"(", 
          RowBox[{"0.1", " ", "*", " ", "tSize"}], " ", ")"}]}]}], "}"}]}], 
     "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"trawlerCollision", "[", 
     RowBox[{"point_", ",", " ", "trawler_", ",", " ", "tSize_"}], "]"}], ":=",
     "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "return", " ", "weather", " ", "point", " ", "contained", " ", "in", 
       " ", 
       RowBox[{"trawler", ".", " ", "\[IndentingNewLine]", 
        RowBox[{"-", " ", "Faster"}]}], " ", "than", " ", "wolfram", " ", 
       "built"}], "-", 
      RowBox[{"in", " ", "collision", " ", "function"}], " ", 
      "\[IndentingNewLine]", "  ", "-", " ", 
      RowBox[{
      "Assumes", " ", "circular", " ", "trawlers", " ", "for", " ", 
       "speed"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Norm", "[", " ", 
       RowBox[{"point", " ", "-", " ", 
        RowBox[{"trawler", "[", 
         RowBox[{"[", 
          RowBox[{"{", 
           RowBox[{"1", ",", " ", "2"}], "}"}], "]"}], "]"}]}], " ", "]"}], 
      " ", "<", 
      RowBox[{"0.1", " ", "*", " ", "tSize"}]}], " ", ")"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FromPolar", "[", 
     RowBox[{"r_", ",", " ", "theta_"}], "]"}], ":=", " ", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"r", " ", 
       RowBox[{"Cos", "[", "theta", "]"}]}], ",", " ", 
      RowBox[{"r", " ", 
       RowBox[{"Sin", "[", "theta", "]"}]}]}], "}"}]}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "Oof", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ToPolar", "[", "xy_", "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"xy", "[", 
         RowBox[{"[", "1", "]"}], "]"}], " ", "\[Equal]", " ", "0."}], "&&", 
       " ", 
       RowBox[{
        RowBox[{"xy", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", " ", "0."}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ToPolarCoordinates", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"xy", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", "0.001"}], ",", " ", 
         RowBox[{
          RowBox[{"xy", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "+", "0.001"}]}], "}"}], "]"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"ToPolarCoordinates", "[", "xy", "]"}]}], "\[IndentingNewLine]",
      "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.403283674203125*^9, 3.403283698984375*^9}, {
   3.413062283015625*^9, 3.413062284125*^9}, {3.4130623660625*^9, 
   3.413062376828125*^9}, {3.4131001863125*^9, 3.413100190609375*^9}, {
   3.413221055828125*^9, 3.413221057203125*^9}, {3.413222851015625*^9, 
   3.4132228525*^9}, {3.413223074015625*^9, 3.413223081828125*^9}, {
   3.413223315171875*^9, 3.41322331828125*^9}, {3.828881300236216*^9, 
   3.828881320081012*^9}, {3.828881371261776*^9, 3.828881377752822*^9}, {
   3.828881722625901*^9, 3.828881738662821*^9}, {3.828881952089052*^9, 
   3.828881952728867*^9}, {3.828882439393483*^9, 3.82888249621236*^9}, {
   3.828884178402141*^9, 3.828884187959153*^9}, 3.828884991312924*^9, {
   3.828885193487949*^9, 3.8288852091446047`*^9}, {3.828885258039917*^9, 
   3.828885259396818*^9}, {3.8288921868544703`*^9, 3.828892214482831*^9}, {
   3.828892354645565*^9, 3.828892354646421*^9}, {3.8289082147987328`*^9, 
   3.828908249993476*^9}, {3.828908299360671*^9, 3.828908305396152*^9}, {
   3.8289569818066807`*^9, 3.8289569872313747`*^9}, {3.8289582960122223`*^9, 
   3.828958323038608*^9}, {3.828959975714184*^9, 3.8289599939314623`*^9}, {
   3.82896003804877*^9, 3.828960065208353*^9}, {3.82896071821483*^9, 
   3.828960718509314*^9}, {3.828961335210437*^9, 3.82896133556352*^9}, {
   3.8289627780171947`*^9, 3.828962781639876*^9}, {3.828964255646266*^9, 
   3.828964255943893*^9}, {3.829033466573584*^9, 3.8290334667321243`*^9}, 
   3.8290341063255987`*^9, {3.829036341066853*^9, 3.829036387164816*^9}, {
   3.829036422885857*^9, 3.829036424828957*^9}, {3.829036555405594*^9, 
   3.8290365587592793`*^9}, {3.829036610011589*^9, 3.829036621266096*^9}, {
   3.829036916651366*^9, 3.8290370982984953`*^9}, {3.8290371283890667`*^9, 
   3.829037130430539*^9}, {3.8291157462089367`*^9, 3.8291157539557533`*^9}, {
   3.829115898823317*^9, 3.829115911079715*^9}, {3.829116223379241*^9, 
   3.829116251720725*^9}, {3.829116333161398*^9, 3.829116346423525*^9}, {
   3.829116451549115*^9, 3.829116481755405*^9}, {3.829116513818924*^9, 
   3.829116514083044*^9}, {3.82911731949467*^9, 3.8291173204114532`*^9}, {
   3.8291189833408737`*^9, 3.829119001927492*^9}, {3.829128499563169*^9, 
   3.829128501712387*^9}, {3.829128593597687*^9, 3.829128593745617*^9}, {
   3.829134410068446*^9, 3.829134410383576*^9}, {3.8291349309435*^9, 
   3.829134931838999*^9}, {3.829294040725986*^9, 3.829294077121078*^9}, {
   3.829294184729291*^9, 3.829294193649671*^9}, {3.829294659908609*^9, 
   3.829294660295293*^9}, {3.8293298453208933`*^9, 3.829329861564436*^9}, {
   3.829330617512182*^9, 3.829330648789249*^9}, {3.8293310577910967`*^9, 
   3.829331072765668*^9}, {3.829331532316338*^9, 3.8293315533181887`*^9}, {
   3.8294116337523193`*^9, 3.829411747202083*^9}, {3.829411824116743*^9, 
   3.8294118483744926`*^9}, {3.829411895793747*^9, 3.829411909686509*^9}, {
   3.829412169495055*^9, 3.829412170193925*^9}, {3.829412331754273*^9, 
   3.829412333006502*^9}, {3.8294127364398212`*^9, 3.8294127401166286`*^9}},
 Magnification->1.,
 CellLabel->"In[13]:=",
 CellID->12186613,ExpressionUUID->"15ace6c3-205f-4ecf-af72-e5511b9c3e56"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["RandomGeneratorState",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ExtendedCA\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"State hash: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["8462015761406875619", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ExtendedCA\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"State hash: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["8462015761406875619", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  RandomGeneratorState[{
   "ExtendedCA", {80, 4, 0}}, {{
    RawArray["UnsignedInteger64",{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0}], 0, 20, 20}, {CompressedData["
1:eJw9lcsKXEUQhoO4cGvMC/gAgbp2VS1dBlxIxAeImIRsIiQB8e39erpHBoaZ
06erq/5b//zn328/fPfixYuvP/D19t0/v3z58u7f33/kzx+fv376+Pn9X28+
f3v/8f2XFR9+2+99z9evn75+e/OKH69TLGOZSC3XaInxszAm2d62+LSM5eqz
sLJsxmZ19Hj3ZJ2FWOpiYu3eyyblWcqli/KyzNV6arHwkgXVdNGepmS1qfmb
n3i8NJYv7VWslUyGnTpWrbOEdp12O0rtbOjUlNxTUFqXx2213WxFDnNwUHFy
PjakqlhQSHRPqXqfv04dnjSFWB5hzlNIJ8w6I1yZpFU6Hhs8TEvWYls2H7c5
HTG7xWo6lNXg0me07t1QZw5bBnBdT0PVkTblDmorx+zUz5AN9FqZNKq1VC4J
usqSLzdligVOjw3AHzMOA2DuMpzzgJp2aGTUB9Jg80lNhNATw8l+35zzDhI9
kOXQgkDEHbQvl1YMPxAKejClfcnJBBWaTVTUxczSj0qb+ALvPVRKQewZGTpc
RBW+KmtQ1CVttwGhIyt8SgsxPTaEFq3LFikyGOg+rUYW0E0IiIs5r5z3u+h8
YkEaJ60lfnWqCIc2KgYBKjqfp74gOBt1i++iHF1XLqgc3igv4JXet9KG2JAS
Ch4Dirajow4pzogH5I2K9bATTuEVvIwiIioyL53O60gpGEymrOyAVLkSbuFF
47Egc5wzirjQtcjG6OkcANaECN+UYZKJq1+HNCYDOGFr1LbUy4fLQQ3PVNmS
THR2OUBdy5DKstqqm4rnxDY0XoCvDFGQdwQPOHvTNI6w2UFwNwA2fq4dE1ma
o3PZzJ0TLq4ckM2fM4KrLNkmkeX4RPoqVQGlK3unkUo0KN6FxmSeW74JFqjs
mUet+MnaYNrob+L26sQKPgsYikk6Oy1hsS3nxE/N2dSzZ7AF5s/wVcgoUf+6
ve60IbgUYrcw+4kqDwgvi80pcXSEunWAqhYGpRBW8Gvm2gBs66NwRaZ+LfIa
FQq5w9kEpJAxR0ZVj2QcKnsGGWr1jObhsEghDGV3fBtdnFBOdOrOnIDNJ6j8
LZChWzIwl+a6bl5D5Ow0QuDozupUQhmyqLu1btvWeistVNTb4bFFSQrYsT+c
rc29MIHifbvuJKJqW9PAbbdEAj7t7xhTem3LAXDfHNnpCxI7ExbM0ZhehTWJ
j764oriPLD2v/42UA6XakUWccPoBYz9DQ0TDg5v8f2a4JHnoFZ9sw8jzKhSO
661pzMBN4De1Y3FPgTExCyyE07Uh4HPDkC1BvjXxkPdiO0mNOLhltMmgIzyq
gjJJyEGOQ7i//gPILGgD
     "], 4, 0}}, RawArray["UnsignedInteger64",{8462015761406875619, 0}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8291165144978733`*^9, 3.829117101807932*^9, 3.8291173213871927`*^9, 
   3.829117525269659*^9, 3.829118034099805*^9, 3.829118756451798*^9, 
   3.829119002594565*^9, 3.829123263854862*^9, 3.8291280576290827`*^9, 
   3.82912850338126*^9, 3.8291285946873093`*^9, {3.829134932458332*^9, 
   3.829134942231773*^9}, 3.829294080357903*^9, 3.829294194387568*^9, 
   3.829294549079301*^9, {3.829294641864159*^9, 3.829294661052186*^9}, 
   3.829295749904228*^9, 3.82930343205079*^9, 3.829303654551128*^9, 
   3.8293038937763147`*^9, 3.829306282835417*^9, 3.8293063138836308`*^9, 
   3.829308848674429*^9, 3.829309052318943*^9, 3.829310594547497*^9, 
   3.8293127982968493`*^9, 3.829317558852521*^9, 3.8293290299178123`*^9, 
   3.829329110507947*^9, {3.829329858519135*^9, 3.829329862022182*^9}, {
   3.829330622660104*^9, 3.829330649421383*^9}, 3.829330960328988*^9, {
   3.829331043303866*^9, 3.829331073248691*^9}, 3.8293315538260527`*^9, 
   3.829401961519579*^9, 3.829411710978471*^9, 3.829411747833784*^9, 
   3.8294118489236107`*^9, {3.829411906896019*^9, 3.829411910652012*^9}, {
   3.8294121709518633`*^9, 3.829412174828759*^9}, 3.8294122347087603`*^9, 
   3.829412743797736*^9, 3.829412775315177*^9, {3.829412849404415*^9, 
   3.829412855943956*^9}, 3.8294137995989122`*^9, 3.829414392154086*^9, 
   3.829421944581895*^9, 3.829422001493993*^9, 3.8295965273010807`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"49f58ad1-56fc-4320-be25-dc984d94838b"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8294123396219*^9, 3.829412353918044*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"c263055b-22dc-43a7-96fe-28c695a0c2ce"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CheckAbort", "[", 
   RowBox[{
    RowBox[{"ArcTan", "[", 
     RowBox[{"0", ",", " ", "0"}], "]"}], ",", "False"}], "]"}], " ", 
  "\[Equal]", " ", "False"}]], "Input",
 CellChangeTimes->{{3.829412439052243*^9, 3.829412469727249*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"5162efa2-433c-48c4-8f7a-4666aeaa3363"],

Cell[BoxData[
 TemplateBox[{
  "ArcTan", "indet", 
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"ArcTan\\\", \\\"[\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\"}], \\\"]\\\"}]\\) encountered.\"", 2, 
   31, 2, 23920348399946448916, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.829412457543098*^9, 3.82941247007458*^9}, 
   3.829412748888788*^9, 3.8294128560864267`*^9, 3.829413799812603*^9, 
   3.829414392366358*^9, 3.829421945027223*^9, 3.829422001723856*^9, 
   3.8295965273699083`*^9},
 CellLabel->
  "During evaluation of \
In[31]:=",ExpressionUUID->"6bb3deb9-210b-4d13-a3ad-58ac4101d44d"],

Cell[BoxData[
 RowBox[{"Indeterminate", "\[Equal]", "False"}]], "Output",
 CellChangeTimes->{{3.8294124575553102`*^9, 3.829412470084674*^9}, 
   3.829412748902117*^9, 3.8294128560946493`*^9, 3.829413799830985*^9, 
   3.8294143923861027`*^9, 3.829421945065413*^9, 3.829422001743195*^9, 
   3.8295965273799677`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"826256ce-aee9-4367-ad02-b1de479a3637"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Construct Initial Populations", "Section",
 CellChangeTimes->{{3.828892594456612*^9, 
  3.828892600408875*^9}},ExpressionUUID->"de8f6474-47fd-49b2-b9d5-\
dc298ed14ee6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"initialAgents", "[", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Join", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Table", "[", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Proportion", " ", "of", " ", "fish", " ", "population", " ", "made", 
       " ", "up", " ", "of", " ", "guppies", " ", "and", " ", "sharks"}], " ",
       "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Join", "[", 
       StyleBox["\[IndentingNewLine]",
        FontColor->GrayLevel[0]], 
       RowBox[{
        RowBox[{"RandomReal", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", "2"}], "]"}], ",", 
        RowBox[{"(*", " ", "Location", " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"0.", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"RandomReal", "[", "]"}], "<", "0.1"}], ",", "Shark", 
            ",", "Sardine"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", "]"}], 
      "\[IndentingNewLine]", 
      StyleBox[",",
       FontColor->GrayLevel[0]], 
      StyleBox[
       RowBox[{"{", "100", "}"}],
       FontColor->GrayLevel[0]]}], 
     StyleBox["\[IndentingNewLine]",
      FontColor->GrayLevel[0]], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"Initial", " ", "population", " ", "of", " ", "Algae"}], " ", 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Join", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"RandomReal", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", "2"}], "]"}], ",", 
        RowBox[{"(*", " ", "Location", " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"0.", ",", "Algae"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
      ",", " ", 
      RowBox[{"{", "initialAlgae", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.403283674203125*^9, 3.403283698984375*^9}, {
   3.413062283015625*^9, 3.413062284125*^9}, {3.4130623660625*^9, 
   3.413062369828125*^9}, {3.413099385046875*^9, 3.413099400484375*^9}, {
   3.413099431953125*^9, 3.413099435640625*^9}, {3.413221069765625*^9, 
   3.413221103875*^9}, {3.4132212468125*^9, 3.41322126115625*^9}, {
   3.413222073734375*^9, 3.413222074203125*^9}, 3.413227762890625*^9, {
   3.82888161474658*^9, 3.828881656341386*^9}, {3.828881746853858*^9, 
   3.828881797344968*^9}, {3.828882056194037*^9, 3.828882085698819*^9}, {
   3.828882121400462*^9, 3.828882123461493*^9}, {3.828882284423015*^9, 
   3.828882288968658*^9}, 3.828892214645246*^9, 3.828892354647901*^9, {
   3.8289570025103197`*^9, 3.828957027739711*^9}, {3.829035378704314*^9, 
   3.8290353794821043`*^9}, {3.829295590422472*^9, 3.829295593136047*^9}},
 Magnification->1.,
 CellLabel->"In[32]:=",
 CellID->179304614,ExpressionUUID->"b717d418-0b9e-4482-bf06-fae1005ea559"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Display Environment ", "Section",
 CellChangeTimes->{{3.828892652524889*^9, 3.828892666039628*^9}, {
   3.828893526248118*^9, 3.828893539491987*^9}, 
   3.828990215650461*^9},ExpressionUUID->"cae4598f-4ffd-434f-92b5-\
cddff5873856"],

Cell[BoxData[
 RowBox[{
  RowBox[{"visualizeEnvironment", "[", 
   RowBox[{"agents_", ",", " ", "prettyPrint_", ",", " ", "tSize_"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sharks", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"#", ",", "2"}], "]"}], "&"}], "/@", 
        RowBox[{"Select", "[", 
         RowBox[{"agents", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "Shark"}], ")"}], 
           "&"}]}], "]"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"sardines", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"#", ",", "2"}], "]"}], "&"}], "/@", 
        RowBox[{"Select", "[", 
         RowBox[{"agents", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "Sardine"}], ")"}], 
           "&"}]}], "]"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"algae", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"#", ",", "2"}], "]"}], "&"}], "/@", 
        RowBox[{"Select", "[", 
         RowBox[{"agents", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "Algae"}], ")"}], 
           "&"}]}], "]"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"trawlers", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"#", ",", "3"}], "]"}], "&"}], "/@", 
        RowBox[{"Select", "[", 
         RowBox[{"agents", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "Trawler"}], ")"}], 
           "&"}]}], "]"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"duddTrawlers", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"#", ",", "2"}], "]"}], "&"}], "/@", 
        RowBox[{"Select", "[", 
         RowBox[{"agents", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "Trawler"}], ")"}], 
           "&"}]}], "]"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"dummyList", "=", 
       RowBox[{"{", "dummyPoint", "}"}]}]}], "\[IndentingNewLine]", "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Draw", " ", "Algae"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AbsolutePointSize", "[", "5", "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{".11", ",", ".60", ",", ".11"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Point", "@", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"algae", "\[Equal]", 
             RowBox[{"{", "}"}]}], ",", "dummyList", ",", "algae"}], 
           "]"}]}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Draw", " ", "Sardines"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"prettyPrint", ",", "\[IndentingNewLine]", 
        RowBox[{"Graphics", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"Text", "[", 
               RowBox[{"\"\<\|01f420\>\"", ",", " ", "#"}], "]"}], ",", 
              RowBox[{"RGBColor", "[", 
               RowBox[{".0", ",", ".25", ",", ".5"}], "]"}], ",", " ", "Bold",
               ",", " ", 
              RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}], 
            ")"}], "&"}], "/@", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"sardines", "\[Equal]", 
             RowBox[{"{", "}"}]}], ",", "dummyList", ",", "sardines"}], 
           "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AbsolutePointSize", "[", "10", "]"}], ",", 
           RowBox[{"RGBColor", "[", 
            RowBox[{".0", ",", ".25", ",", ".5"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Point", "@", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"sardines", "\[Equal]", 
               RowBox[{"{", "}"}]}], ",", "dummyList", ",", "sardines"}], 
             "]"}]}]}], "\[IndentingNewLine]", "}"}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Draw", " ", "Sharks"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"prettyPrint", ",", "\[IndentingNewLine]", 
        RowBox[{"Graphics", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Triangle", "[", 
            RowBox[{"{", 
             RowBox[{"#", ",", " ", 
              RowBox[{"#", "+", 
               RowBox[{"{", 
                RowBox[{"0.015", ",", " ", "0"}], "}"}]}], ",", " ", 
              RowBox[{"#", " ", "+", " ", 
               RowBox[{"{", 
                RowBox[{"0.02", " ", ",", "0.02"}], "}"}]}]}], "}"}], "]"}], 
           "&"}], "/@", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"sharks", "\[Equal]", 
             RowBox[{"{", "}"}]}], ",", "dummyList", ",", "sharks"}], "]"}]}],
          "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AbsolutePointSize", "[", "15", "]"}], ",", 
           RowBox[{"RGBColor", "[", 
            RowBox[{".0", ",", ".1", ",", ".3"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Point", "@", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"sharks", "\[Equal]", 
               RowBox[{"{", "}"}]}], ",", "dummyList", ",", "sharks"}], 
             "]"}]}]}], "\[IndentingNewLine]", "}"}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Draw", " ", "Trawlers"}], " ", "*)"}], " ", 
      "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Opacity", "[", "0.2", "]"}], ",", "  ", "Pink", " ", ",",
             " ", 
            RowBox[{"EdgeForm", "[", "Dashed", "]"}], ",", " ", 
            RowBox[{"getTrawlerRect", "[", " ", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"{", 
                 RowBox[{"1", ",", " ", "2"}], "}"}], "]"}], "]"}], ",", " ", 
              "tSize"}], "]"}]}], "}"}], ")"}], "&"}], "/@", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"trawlers", "\[Equal]", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", " ", 
             RowBox[{"-", "1"}], ",", " ", "0"}], "}"}], "}"}], ",", 
          "trawlers"}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "Display", " ", "Trawler", " ", "Centroids", "\[IndentingNewLine]", 
         RowBox[{"Graphics", "[", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"AbsolutePointSize", "[", "30", "]"}], ",", 
            RowBox[{"RGBColor", "[", 
             RowBox[{".9", ",", ".25", ",", ".5"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Point", "@", 
             RowBox[{"If", "[", "  ", 
              RowBox[{
               RowBox[{"duddTrawlers", "==", " ", 
                RowBox[{"{", "}"}]}], ",", " ", "dummyList", ",", 
               "duddTrawlers"}], "]"}]}]}], "\[IndentingNewLine]", "}"}], 
          "]"}]}], ","}], "\[IndentingNewLine]", "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"600", ",", "600"}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Frame", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Axes", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.", ",", "1."}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.", ",", "1."}], "}"}]}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.40328370721875*^9, 3.4032837329375*^9}, {
   3.40353796284375*^9, 3.40353801059375*^9}, {3.40353804496875*^9, 
   3.403538066390625*^9}, {3.4130644830625*^9, 3.413064552640625*^9}, {
   3.4130999793125*^9, 3.41309998003125*^9}, {3.4131000239375*^9, 
   3.413100025046875*^9}, {3.413118589519039*^9, 3.4131186158157454`*^9}, {
   3.413221163671875*^9, 3.413221202890625*^9}, {3.4132212821875*^9, 
   3.4132213226875*^9}, {3.41322135325*^9, 3.413221386125*^9}, {
   3.413221483109375*^9, 3.41322148471875*^9}, {3.413223089171875*^9, 
   3.413223090890625*^9}, 3.413227759421875*^9, {3.413228403471799*^9, 
   3.4132284198001328`*^9}, {3.413228467503868*^9, 3.4132284798790264`*^9}, {
   3.82888183227929*^9, 3.8288819480304737`*^9}, {3.828882023125931*^9, 
   3.828882024729768*^9}, 3.828882135183269*^9, {3.828882319944762*^9, 
   3.828882362826123*^9}, {3.828883882497016*^9, 3.8288839184937267`*^9}, {
   3.828886802118903*^9, 3.828886807786152*^9}, 3.828892214793694*^9, {
   3.828892338105295*^9, 3.8288923546500587`*^9}, {3.828892518735708*^9, 
   3.8288925188613167`*^9}, {3.8288935528557*^9, 3.828893579899539*^9}, {
   3.8288936850429363`*^9, 3.828893717945629*^9}, {3.828893796659355*^9, 
   3.8288938217419147`*^9}, {3.8288938573835793`*^9, 
   3.8288938642172728`*^9}, {3.828893899161355*^9, 3.828893975386832*^9}, {
   3.8288950878192987`*^9, 3.8288950883040657`*^9}, {3.828895167411243*^9, 
   3.8288951679893923`*^9}, {3.828908906634611*^9, 3.82890892955509*^9}, {
   3.828940396172182*^9, 3.828940430197708*^9}, {3.828940678097085*^9, 
   3.828940680888782*^9}, {3.8289412288609533`*^9, 3.828941232585432*^9}, {
   3.828941435705208*^9, 3.828941515559701*^9}, 3.828943869521461*^9, {
   3.8289439818204813`*^9, 3.828943983490438*^9}, {3.8289440563560677`*^9, 
   3.828944126772005*^9}, {3.828944189870119*^9, 3.8289442043283587`*^9}, 
   3.828944349661283*^9, 3.8289444981288843`*^9, {3.828944563548828*^9, 
   3.828944576191943*^9}, {3.828944618678265*^9, 3.828944709243287*^9}, {
   3.828944753471223*^9, 3.828944860679851*^9}, {3.828957059376532*^9, 
   3.828957165090028*^9}, {3.828957229242537*^9, 3.828957315626709*^9}, 
   3.828957356229334*^9, 3.828958434115828*^9, {3.8289593745923433`*^9, 
   3.828959502098242*^9}, {3.828959643101418*^9, 3.8289596435240107`*^9}, {
   3.828965208872733*^9, 3.828965215674075*^9}, {3.828965466004724*^9, 
   3.8289655298200827`*^9}, {3.82896557216085*^9, 3.828965574395042*^9}, {
   3.828977649989047*^9, 3.828977654968006*^9}, {3.8289778875483513`*^9, 
   3.828977891734119*^9}, {3.8289789900479593`*^9, 3.828978990181171*^9}, {
   3.828985030203776*^9, 3.828985034805585*^9}, {3.828985335662291*^9, 
   3.828985342808557*^9}, {3.828985407202443*^9, 3.828985409637044*^9}, {
   3.828985650028854*^9, 3.8289856892392063`*^9}, {3.828990232530201*^9, 
   3.82899024088649*^9}, {3.829034151896138*^9, 3.8290341674879627`*^9}, {
   3.829034434387236*^9, 3.829034448269424*^9}, {3.829034551317809*^9, 
   3.829034566617539*^9}, {3.8290347265123873`*^9, 3.829034752157051*^9}, {
   3.829034842193948*^9, 3.82903485993559*^9}, {3.829034936955163*^9, 
   3.829034940032823*^9}, {3.829035290029768*^9, 3.829035294449799*^9}, {
   3.829035444485532*^9, 3.82903545183148*^9}, {3.829035493911255*^9, 
   3.8290356875332813`*^9}, {3.829035783581134*^9, 3.829035815264577*^9}, {
   3.8290358741092587`*^9, 3.82903587990659*^9}, {3.829036500896101*^9, 
   3.8290365142031107`*^9}, {3.829036633975129*^9, 3.829036639229464*^9}, {
   3.829036688826262*^9, 3.829036692938261*^9}, {3.82906947227075*^9, 
   3.829069474473446*^9}, {3.8291157248628883`*^9, 3.829115733506782*^9}, {
   3.829115763887815*^9, 3.82911579392274*^9}, {3.829115865526484*^9, 
   3.829115886238566*^9}},
 CellLabel->"In[33]:=",
 CellID->581179032,ExpressionUUID->"94fb4a4c-2de3-41f0-9779-58b1a0ad9bde"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Agent Behaviour", "Section",
 CellChangeTimes->{{3.8289579261199417`*^9, 
  3.8289579313204803`*^9}},ExpressionUUID->"8c4e5bb6-94de-42d4-8caf-\
2a2d427afeb8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Trawler", " ", "Behaviour"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"updateTrawler", "[", 
     RowBox[{"trawler_", ",", " ", "tSpeed_"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "Delete", " ", "Trawler", " ", "when", " ", "out", " ", "of", " ", 
      "bounds"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{"trawler", "[", 
          RowBox[{"[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], " ", "-", " ", 
         RowBox[{"{", 
          RowBox[{"0.5", ",", " ", "0.5"}], "}"}]}], "]"}], " ", "<", " ", 
       "1"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Move", " ", "trawler", " ", "at", " ", "constant", " ", "speed", " ", 
        "in", " ", "desired", " ", "direction"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Join", "[", " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"trawler", "[", 
           RowBox[{"[", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], " ", "+", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"tSpeed", " ", "*", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"trawler", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "]"}]}], ",", " ", 
            RowBox[{"tSpeed", " ", "*", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"trawler", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "]"}]}]}], "}"}]}], 
         "\[IndentingNewLine]", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"trawler", "[", 
            RowBox[{"[", "3", "]"}], "]"}], ",", " ", "Trawler"}], "}"}]}], 
        "\[IndentingNewLine]", "]"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"newTrawler", "[", "]"}], ":=", " ", 
    RowBox[{"Module", "[", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"origin", ",", " ", "terminus"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Switch", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"RandomInteger", "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", " ", "4"}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"L", " ", "\[Rule]", " ", "R"}], " ", "*)"}], 
        "\[IndentingNewLine]", "1", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"origin", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{"0.", ",", " ", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{"0.", ",", " ", "1."}], "}"}], "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"terminus", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{"1.", ",", " ", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{"0.", ",", " ", "1."}], "}"}], "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Join", "[", 
          RowBox[{"origin", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"ToPolar", "[", 
               RowBox[{"terminus", " ", "-", " ", "origin"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", " ", "Trawler"}], "}"}]}], 
          "]"}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"R", " ", "\[Rule]", " ", "L"}], " ", "*)"}], 
        "\[IndentingNewLine]", "2", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"origin", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{"1.", ",", " ", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{"0.", ",", " ", "1."}], "}"}], "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"terminus", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{"0.", ",", " ", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{"0.", ",", " ", "1."}], "}"}], "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Join", "[", 
          RowBox[{"origin", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"ToPolar", "[", 
               RowBox[{"terminus", " ", "-", " ", "origin"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", " ", "Trawler"}], "}"}]}], 
          "]"}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"T", " ", "\[Rule]", " ", "B"}], " ", "*)"}], 
        "\[IndentingNewLine]", "3", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"origin", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{"0.", ",", " ", "1."}], "}"}], "]"}], ",", " ", "0."}], 
           "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"terminus", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{"0.", ",", " ", "1."}], "}"}], "]"}], ",", " ", "1."}], 
           "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Join", "[", 
          RowBox[{"origin", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"ToPolar", "[", 
               RowBox[{"terminus", " ", "-", " ", "origin"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", " ", "Trawler"}], "}"}]}], 
          "]"}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"B", " ", "\[Rule]", " ", "T"}], " ", "*)"}], 
        "\[IndentingNewLine]", "4", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"origin", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{"0.", ",", " ", "1."}], "}"}], "]"}], ",", " ", "1."}], 
           "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"terminus", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{"0.", ",", " ", "1."}], "}"}], "]"}], ",", " ", "0."}], 
           "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Join", "[", 
          RowBox[{"origin", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"ToPolar", "[", 
               RowBox[{"terminus", " ", "-", " ", "origin"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", " ", "Trawler"}], "}"}]}], 
          "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
     "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8289579415206547`*^9, 3.828957964313993*^9}, {
   3.828957996033836*^9, 3.828958001614406*^9}, {3.828958046556801*^9, 
   3.828958073091104*^9}, {3.828958332314028*^9, 3.8289583744379063`*^9}, {
   3.828958444342761*^9, 3.828958490204133*^9}, {3.8289585921351748`*^9, 
   3.828958705882066*^9}, {3.828958801671813*^9, 3.828958818520256*^9}, {
   3.828958874777749*^9, 3.828958927219762*^9}, {3.828958990367704*^9, 
   3.828959010767564*^9}, {3.828959095576536*^9, 3.828959102001905*^9}, {
   3.828959151405943*^9, 3.828959245024783*^9}, {3.828959294526046*^9, 
   3.828959296450659*^9}, {3.8289593321014023`*^9, 3.828959332431457*^9}, {
   3.82896286149483*^9, 3.828963057364471*^9}, {3.828963526720963*^9, 
   3.828963661094904*^9}, {3.828963915962487*^9, 3.82896392796544*^9}, {
   3.828963959184647*^9, 3.828964073041172*^9}, {3.828964128821308*^9, 
   3.8289641675551023`*^9}, 3.828964234264257*^9, {3.828964340247176*^9, 
   3.828964343896596*^9}, {3.828965014435185*^9, 3.828965017907497*^9}, {
   3.8289653947879*^9, 3.8289653995554132`*^9}, {3.828965739597509*^9, 
   3.8289657772357607`*^9}, {3.828966013897303*^9, 3.828966017658765*^9}, {
   3.8289660823881397`*^9, 3.828966130323552*^9}, {3.828966256480372*^9, 
   3.828966292730217*^9}, {3.828966328057433*^9, 3.828966330451354*^9}, {
   3.82896664031238*^9, 3.82896664043038*^9}, {3.828966811140369*^9, 
   3.828966822544004*^9}, {3.828966866740645*^9, 3.8289668785747557`*^9}, {
   3.8289669245216827`*^9, 3.8289669251738453`*^9}, {3.828966978825343*^9, 
   3.8289670026600037`*^9}, {3.82896704829701*^9, 3.828967048424569*^9}, {
   3.8289670927051897`*^9, 3.828967098159137*^9}, {3.828967179262586*^9, 
   3.8289671876100807`*^9}, {3.828967224068726*^9, 3.828967224678513*^9}, {
   3.828967271536471*^9, 3.828967289056649*^9}, {3.82896735517234*^9, 
   3.8289673849277363`*^9}, {3.828967483099052*^9, 3.828967491842401*^9}, {
   3.8289675253746357`*^9, 3.82896752975214*^9}, {3.828967601290824*^9, 
   3.828967626478801*^9}, {3.8289676600132647`*^9, 3.828967674720686*^9}, {
   3.828967718484434*^9, 3.828967825946745*^9}, {3.8289788614411707`*^9, 
   3.828978877097309*^9}, {3.8289847347078447`*^9, 3.8289849641317263`*^9}, {
   3.8289881254422207`*^9, 3.828988153239315*^9}, {3.828988281964415*^9, 
   3.828988309386993*^9}, {3.8289883603040733`*^9, 3.8289883632585497`*^9}, {
   3.828988395107964*^9, 3.828988398812107*^9}, {3.828988662364102*^9, 
   3.82898866367063*^9}, {3.828988737957465*^9, 3.828988779336503*^9}, {
   3.828988850820202*^9, 3.828988897630065*^9}, {3.8289889652063913`*^9, 
   3.8289889829577913`*^9}, {3.828989039116238*^9, 3.828989107337563*^9}, {
   3.8289891676334476`*^9, 3.828989174516749*^9}, {3.828989252538795*^9, 
   3.828989333979775*^9}, {3.828989446384266*^9, 3.8289894609253473`*^9}, {
   3.828989728147318*^9, 3.8289897363933363`*^9}, 3.828989845028208*^9, {
   3.828989879217965*^9, 3.828989910304311*^9}, {3.828989942019347*^9, 
   3.828989952025427*^9}, {3.8290338877670918`*^9, 3.829033888329194*^9}, 
   3.829033932820013*^9, {3.829033975695169*^9, 3.829034008103586*^9}, {
   3.829034049432105*^9, 3.829034051101163*^9}, {3.829035041392701*^9, 
   3.829035043228929*^9}, {3.829117215112225*^9, 3.829117229406703*^9}, 
   3.829117448632085*^9, {3.8294117912485456`*^9, 3.829411809856723*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"052fd585-afce-467d-ba95-51e37a546043"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Update Population", "Section",
 CellChangeTimes->{{3.828892674498601*^9, 3.828892693342852*^9}, {
  3.828988109518539*^9, 
  3.828988109920145*^9}},ExpressionUUID->"8b0c757c-ca58-499f-8de4-\
113eb5b5646e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"updateAgents", "[", 
   RowBox[{
   "agents_", ",", "\[IndentingNewLine]", "sardineGrowthRate_", ",", 
    "\[IndentingNewLine]", "sardineMobility_", ",", "\[IndentingNewLine]", 
    "sharkGrowthRate_", ",", "\[IndentingNewLine]", "sharkMobility_", ",", 
    "\[IndentingNewLine]", "sharkEndurance_", ",", " ", "\[IndentingNewLine]",
     "sardineEndurance_", ",", "\[IndentingNewLine]", "algaeGrowthRate_", ",",
     "\[IndentingNewLine]", "tSize_", ",", "\[IndentingNewLine]", "tSpeed_", 
    ",", "\[IndentingNewLine]", "tSpawnRate_", ",", "\[IndentingNewLine]", 
    "smartSharks_", ",", "\[IndentingNewLine]", "smartSardines_", ",", 
    "\[IndentingNewLine]", "targetAlgae_", ",", "\[IndentingNewLine]", 
    "targetSardines_", ",", "\[IndentingNewLine]", "targetSharks_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sharkPop", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"Select", "[", 
         RowBox[{"agents", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "Shark"}], ")"}], 
           "&"}]}], "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"algaePop", " ", "=", " ", 
       RowBox[{"Length", "[", 
        RowBox[{"Select", "[", 
         RowBox[{"agents", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "Algae"}], ")"}], 
           "&"}]}], "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"sardinePop", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"Select", "[", 
         RowBox[{"agents", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "Sardine"}], ")"}], 
           "&"}]}], "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"nearestSharks", "=", 
       RowBox[{"Nearest", "[", 
        RowBox[{"Append", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Take", "[", 
             RowBox[{"#", ",", "2"}], "]"}], "&"}], "/@", 
           RowBox[{"Select", "[", 
            RowBox[{"agents", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "Shark"}], ")"}],
               "&"}]}], "]"}]}], ",", "dummyPoint"}], "]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"nearestSardines", "=", 
       RowBox[{"Nearest", "[", 
        RowBox[{"Append", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Take", "[", 
             RowBox[{"#", ",", "2"}], "]"}], "&"}], "/@", 
           RowBox[{"Select", "[", 
            RowBox[{"agents", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "Sardine"}], 
               ")"}], "&"}]}], "]"}]}], ",", "dummyPoint"}], "]"}], "]"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"nearestAlgae", " ", "=", " ", 
       RowBox[{"Nearest", "[", 
        RowBox[{"Append", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Take", "[", 
             RowBox[{"#", ",", "2"}], "]"}], "&"}], "/@", 
           RowBox[{"Select", "[", 
            RowBox[{"agents", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "Sardine"}], 
               ")"}], "&"}]}], "]"}]}], ",", "dummyPoint"}], "]"}], "]"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"nearestTrawler", " ", "=", " ", 
       RowBox[{"Nearest", "[", 
        RowBox[{"Append", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Take", "[", 
             RowBox[{"#", ",", "2"}], "]"}], "&"}], "/@", 
           RowBox[{"Select", "[", 
            RowBox[{"agents", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "Trawler"}], 
               ")"}], "&"}]}], "]"}]}], ",", "dummyPoint"}], "]"}], "]"}]}], 
      ",", "\[IndentingNewLine]", "i", ",", "nextLocation", ",", " ", 
      "currentLocation", ",", " ", "ag", ",", " ", "survivors", ",", " ", 
      RowBox[{"data", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}]}], " ", 
     RowBox[{"(*", " ", 
      RowBox[{"data", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"fishBorn", ",", " ", "fishCaught", ",", " ", "fishDead"}], 
        "}"}]}], " ", "*)"}], "\[IndentingNewLine]", "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ag", " ", "=", " ", 
      RowBox[{
       RowBox[{"Join", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"survivors", "=", 
              RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"currentLocation", " ", "=", " ", 
              RowBox[{"agents", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"nextLocation", " ", "=", 
              RowBox[{
               RowBox[{"agents", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], "+", " ", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"agents", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", " ", "4"}], "]"}], "]"}], " ", 
                  "\[Equal]", " ", "Sardine"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"(*", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"FromPolar", "[", 
                    RowBox[{
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "sardineMobility"}], "}"}], "]"}], 
                    ",", " ", 
                    RowBox[{
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "1"}], "}"}], "]"}], " ", "*", " ",
                     "2", "Pi"}]}], " ", "]"}], ","}], "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"!", " ", "smartSardines"}], " ", "||", "  ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"nearestSharks", "[", "currentLocation", "]"}], 
                    "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "\[Equal]", " ", 
                    "dummyPoint"}], " ", "||", " ", 
                    RowBox[{
                    RowBox[{"Norm", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"nearestSharks", "[", "currentLocation", "]"}], 
                    "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "-", " ", 
                    "currentLocation"}], "]"}], " ", ">", " ", 
                    "sardineSight"}]}], ",", "\[IndentingNewLine]", 
                   "\[IndentingNewLine]", 
                   RowBox[{"FromPolar", "[", 
                    RowBox[{
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "sardineMobility"}], "}"}], "]"}], 
                    ",", " ", 
                    RowBox[{
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "1"}], "}"}], "]"}], " ", "*", " ",
                     "2", "Pi"}]}], " ", "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"FromPolar", "[", 
                    RowBox[{
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "sardineMobility"}], "}"}], "]"}], ",", 
                    " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToPolar", "[", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"nearestSharks", "[", "currentLocation", "]"}], 
                    "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", " ", 
                    "currentLocation"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", "Pi"}]}], 
                    "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
                  "]"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", "\[IndentingNewLine]", 
                  RowBox[{"(*", " ", 
                   RowBox[{
                    RowBox[{
                    "If", " ", "smart", " ", "sharks", " ", "arent", " ", 
                    "enabled", " ", "or", " ", "the", " ", "nearest", " ", 
                    "fish", " ", "is", " ", "the", " ", "dummy", " ", 
                    "point"}], ",", " ", 
                    RowBox[{"move", " ", "randomly"}]}], " ", "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"!", " ", "smartSharks"}], "||", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"nearestSardines", "[", "currentLocation", "]"}], 
                    "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "\[Equal]", " ", 
                    "dummyPoint"}], " ", "||", " ", 
                    RowBox[{
                    RowBox[{"Norm", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"nearestSardines", "[", "currentLocation", "]"}], 
                    "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "-", " ", 
                    "currentLocation"}], "]"}], " ", ">", " ", 
                    "sharkSight"}]}], ")"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"FromPolar", "[", 
                    RowBox[{
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "sharkMobility"}], "}"}], "]"}], 
                    ",", " ", 
                    RowBox[{
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "1"}], "}"}], "]"}], " ", "*", " ",
                     "2", "Pi"}]}], " ", "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"FromPolar", "[", 
                    RowBox[{
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "sharkMobility"}], "}"}], "]"}], 
                    ",", " ", 
                    RowBox[{
                    RowBox[{"ToPolar", "[", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"nearestSardines", "[", "currentLocation", "]"}], 
                    "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", " ", 
                    "currentLocation"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], 
                  "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
                "]"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"(*", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"agents", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "4"}], "]"}], "]"}], "\[Equal]", 
                  "Sardine"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"RandomReal", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "sardineMobility"}], ",", 
                    "sardineMobility"}], "}"}], ",", "2"}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"RandomReal", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "sharkMobility"}], ",", "sharkMobility"}], 
                    "}"}], ",", "2"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
               ";"}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"nextLocation", "=", 
              RowBox[{"Clip", "[", 
               RowBox[{"nextLocation", ",", 
                RowBox[{"{", 
                 RowBox[{"0.", ",", "1."}], "}"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"Switch", "[", "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{
               "Implement", " ", "each", " ", "agents", " ", "behaviour", " ",
                 "based", " ", "on", " ", "type"}], " ", "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"agents", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", " ", "4"}], "]"}], "]"}], ",", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                 RowBox[{"sardines", "'"}], " ", "behavior"}], " ", "*)"}], 
               "\[IndentingNewLine]", "Sardine", ",", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"Norm", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"nearestSharks", "[", "nextLocation", "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "nextLocation"}], 
                    "]"}], ">", "0.02"}], " ", "\[IndentingNewLine]", "&&", 
                  " ", 
                  RowBox[{
                   RowBox[{"agents", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], "<", 
                   "sardineEndurance"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{"(*", " ", 
                  RowBox[{
                  "If", " ", "not", " ", "eaten", " ", "by", " ", "Shark", 
                   " ", "or", " ", "starved"}], "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"!", 
                    RowBox[{"(", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"RandomReal", "[", "]"}], " ", ">", 
                    "targetSardines"}], " ", "&&", " ", 
                    RowBox[{"trawlerCollision", "[", 
                    RowBox[{"nextLocation", ",", " ", 
                    RowBox[{
                    RowBox[{"nearestTrawler", "[", "nextLocation", "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", "tSize"}], 
                    "]"}]}], ")"}]}], ",", "\[IndentingNewLine]", 
                   RowBox[{"(*", " ", 
                    RowBox[{
                    "Fish", " ", "is", " ", "not", " ", "caught", " ", "by", 
                    " ", "trawler"}], " ", "*)"}], "\[IndentingNewLine]", 
                   RowBox[{"(*", " ", 
                    RowBox[{
                    "Update", " ", "hunger", " ", "depending", " ", "wether", 
                    " ", "or", " ", "not", " ", "it", " ", "ate"}], " ", 
                    "*)"}], "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"survivors", " ", "=", " ", 
                    RowBox[{"If", "[", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Norm", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"nearestAlgae", "[", "nextLocation", "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "nextLocation"}], 
                    "]"}], ">", "0.02"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{"Join", "[", 
                    RowBox[{"nextLocation", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"agents", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], "+", "1."}], ",", 
                    "Sardine"}], "}"}]}], "]"}], "}"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{"Join", "[", 
                    RowBox[{"nextLocation", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.", ",", "Sardine"}], "}"}]}], "]"}], "}"}]}], 
                    "\[IndentingNewLine]", "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    RowBox[{
                    "Probabilistic", " ", "reproduction", " ", "with", " ", 
                    "logistic", " ", "growth", " ", "restriction"}], ";", " ", 
                    RowBox[{
                    "adding", " ", "one", " ", "more", " ", "sardine"}]}], 
                    " ", "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"RandomReal", "[", "]"}], "<", 
                    RowBox[{"sardineGrowthRate", 
                    RowBox[{"(", 
                    RowBox[{"1.", "-", 
                    RowBox[{"sardinePop", "/", "maxSardines"}]}], ")"}]}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"survivors", ",", 
                    RowBox[{"Join", "[", 
                    RowBox[{"nextLocation", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.", ",", "Sardine"}], "}"}]}], "]"}]}], "]"}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"data", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "=", " ", 
                    RowBox[{
                    RowBox[{"data", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", "1"}]}]}]}], " ", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "add", " ", "newbord", " ", "fish", " ", "to", " ", 
                    "stats"}], " ", "*)"}], "\[IndentingNewLine]", "]"}]}], 
                   ",", "\[IndentingNewLine]", 
                   RowBox[{"(*", " ", 
                    RowBox[{
                    "Fish", " ", "was", " ", "caught", " ", "by", " ", 
                    "trawler"}], " ", "*)"}], "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"data", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], " ", "=", " ", 
                    RowBox[{
                    RowBox[{"data", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "+", "1"}]}]}], " ", 
                  "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", " ", 
                  RowBox[{
                  "If", " ", "eaten", " ", "by", " ", "a", " ", "shark", " ", 
                   "or", " ", "starved"}], " ", "*)"}], "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"data", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], " ", "=", " ", 
                  RowBox[{
                   RowBox[{"data", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], " ", "+", " ", "1"}]}]}], 
                "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                 RowBox[{"sharks", "'"}], " ", "behavior"}], " ", "*)"}], 
               "\[IndentingNewLine]", "Shark", ",", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"!", 
                  RowBox[{"(", " ", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"RandomReal", "[", "]"}], " ", ">", " ", 
                    "targetSharks"}], " ", "&&", " ", 
                    RowBox[{"trawlerCollision", "[", 
                    RowBox[{"nextLocation", ",", " ", 
                    RowBox[{
                    RowBox[{"nearestTrawler", "[", "nextLocation", "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", "tSize"}], 
                    "]"}]}], ")"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Norm", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"nearestSardines", "[", "nextLocation", "]"}], 
                    "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "nextLocation"}], 
                    "]"}], ">", "0.02"}], ",", "\[IndentingNewLine]", 
                   "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"agents", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], "<", 
                    "sharkEndurance"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "starving", " ", "but", " ", "still", " ", "survive"}], 
                    " ", "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"survivors", "=", 
                    RowBox[{"{", 
                    RowBox[{"Join", "[", 
                    RowBox[{"nextLocation", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"agents", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], "+", "1."}], ",", 
                    "Shark"}], "}"}]}], "]"}], "}"}]}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
                   "\[IndentingNewLine]", 
                   RowBox[{"(*", " ", 
                    RowBox[{
                    "just", " ", "ate", " ", "sardine", " ", "and", " ", 
                    "survive"}], " ", "*)"}], "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"survivors", "=", 
                    RowBox[{"{", 
                    RowBox[{"Join", "[", 
                    RowBox[{"nextLocation", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.", ",", "Shark"}], "}"}]}], "]"}], "}"}]}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"RandomReal", "[", "]"}], "<", 
                    RowBox[{"sharkGrowthRate", 
                    RowBox[{"(", 
                    RowBox[{"1.", "-", 
                    RowBox[{"sharkPop", "/", "maxSharks"}]}], ")"}]}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"survivors", ",", 
                    RowBox[{"Join", "[", 
                    RowBox[{"nextLocation", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.", ",", "Shark"}], "}"}]}], "]"}]}], "]"}]}], 
                    "\[IndentingNewLine]", "]"}]}]}], 
                  RowBox[{"(*", " ", 
                   RowBox[{
                    RowBox[{"Probabilistic", " ", "reproduction"}], ";", " ", 
                    RowBox[{
                    "adding", " ", "one", " ", "more", " ", "shark"}]}], " ", 
                   "*)"}], "\[IndentingNewLine]", "]"}]}], 
                "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{"Algae", " ", "behaviour"}], " ", "*)"}], 
               "\[IndentingNewLine]", "Algae", ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", " ", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"Norm", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"nearestSardines", "[", "currentLocation", "]"}], 
                    "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "currentLocation"}], 
                    "]"}], ">", "0.02"}], "\[IndentingNewLine]", "&&", " ", 
                   RowBox[{"!", 
                    RowBox[{"(", "  ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"RandomReal", "[", "]"}], " ", ">", 
                    "targetAlgae"}], " ", "&&", " ", 
                    RowBox[{"trawlerCollision", "[", 
                    RowBox[{"currentLocation", ",", " ", 
                    RowBox[{
                    RowBox[{"nearestTrawler", "[", "currentLocation", "]"}], 
                    "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", "tSize"}], 
                    "]"}]}], ")"}]}], "\[IndentingNewLine]", "&&", " ", 
                   RowBox[{
                    RowBox[{"agents", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], "<", 
                    "algaeEndurance"}]}], ",", "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", 
                  RowBox[{"survivors", "=", 
                   RowBox[{"{", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"agents", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"agents", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], " ", "+", " ", 
                    "1"}], ",", "Algae"}], "}"}]}], "]"}], "}"}]}]}], "]"}], 
                ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"(*", " ", 
                 RowBox[{"TODO", ":", " ", 
                  RowBox[{
                  "Algae", " ", "reproduction", " ", "decouppled", " ", 
                   "from", " ", "parents"}]}], " ", "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"RandomReal", "[", "]"}], "<", 
                   RowBox[{"algaeGrowthRate", 
                    RowBox[{"(", 
                    RowBox[{"1.", "-", 
                    RowBox[{"algaePop", "/", "maxAlgae"}]}], ")"}]}]}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"survivors", ",", 
                    RowBox[{"Join", "[", " ", 
                    RowBox[{
                    RowBox[{"RandomReal", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "1"}], "}"}], ",", " ", "2"}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.", " ", ",", "Algae"}], "}"}]}], "]"}]}], 
                   "]"}]}], "\[IndentingNewLine]", "]"}]}], ",", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{"Trawler", " ", "Behaviour"}], " ", "*)"}], 
               "\[IndentingNewLine]", "Trawler", ",", "\[IndentingNewLine]", 
               RowBox[{"survivors", " ", "=", " ", 
                RowBox[{"updateTrawler", "[", 
                 RowBox[{
                  RowBox[{"agents", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", " ", "tSpeed"}], 
                 "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
              "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             "survivors"}], "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "[", "agents", "]"}]}], "}"}]}], 
           "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], "//", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"#", ",", "1"}], "]"}], "&"}]}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"Spawn", " ", "new", " ", "trawler"}], ",", " ", 
           RowBox[{
           "independent", " ", "of", " ", "current", " ", "population"}]}], 
          " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"RandomInteger", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", " ", "tSpawnRate"}], "}"}], "]"}], " ", 
            "\[Equal]", " ", "1"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"newTrawler", "[", "]"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", "}"}]}], "]"}]}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], "//", 
       "Developer`ToPackedArray"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"ag", ",", " ", "data"}], "}"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.403283750546875*^9, 3.403283802375*^9}, {
   3.41306236253125*^9, 3.413062402359375*^9}, {3.41306255884375*^9, 
   3.41306255965625*^9}, {3.41306268046875*^9, 3.413062707390625*^9}, {
   3.41306273803125*^9, 3.413062805484375*^9}, {3.41306293971875*^9, 
   3.413062963265625*^9}, {3.413099488609375*^9, 3.413099542859375*^9}, {
   3.413099590421875*^9, 3.413099700265625*^9}, {3.41310020765625*^9, 
   3.413100225046875*^9}, {3.413100415375*^9, 3.41310044275*^9}, {
   3.41322154271875*^9, 3.41322158865625*^9}, {3.413221657125*^9, 
   3.413221662265625*^9}, {3.4132216996875*^9, 3.413221888265625*^9}, {
   3.413221924609375*^9, 3.413222011984375*^9}, {3.4132221054375*^9, 
   3.413222121390625*^9}, {3.4132225985625*^9, 3.413222603375*^9}, {
   3.413222665109375*^9, 3.413222835875*^9}, {3.41322293215625*^9, 
   3.413222952546875*^9}, {3.41322301365625*^9, 3.413223068125*^9}, {
   3.413223235265625*^9, 3.413223235640625*^9}, {3.413224105453125*^9, 
   3.413224137109375*^9}, {3.41322416878125*^9, 3.413224274625*^9}, {
   3.413224376765625*^9, 3.413224500703125*^9}, {3.413224658015625*^9, 
   3.413224735515625*^9}, {3.413226205375*^9, 3.413226239234375*^9}, 
   3.41322775375*^9, 3.41322783728125*^9, {3.828882137832409*^9, 
   3.828882140300302*^9}, {3.828882413509468*^9, 3.828882431932118*^9}, {
   3.8288825199217577`*^9, 3.828882552096973*^9}, {3.828882597417918*^9, 
   3.828882639176908*^9}, 3.828882687029595*^9, {3.82888340166818*^9, 
   3.828883414416909*^9}, {3.828883450526599*^9, 3.828883469178362*^9}, {
   3.828883501171492*^9, 3.828883542849577*^9}, {3.828883592625341*^9, 
   3.828883730542982*^9}, 3.8288837916748047`*^9, 3.828884008368973*^9, {
   3.828884049645298*^9, 3.8288841321162577`*^9}, {3.828884258938986*^9, 
   3.828884269825551*^9}, {3.8288843484514427`*^9, 3.8288844048282347`*^9}, {
   3.828884445762924*^9, 3.8288844483327837`*^9}, {3.828884512755522*^9, 
   3.828884707279346*^9}, {3.828884819730031*^9, 3.828884833821844*^9}, {
   3.828884909664435*^9, 3.828884966185685*^9}, {3.828885040924128*^9, 
   3.8288850462278233`*^9}, {3.828885237068981*^9, 3.82888523761161*^9}, {
   3.828885447820992*^9, 3.8288855358800383`*^9}, {3.828885647316947*^9, 
   3.828885650639204*^9}, {3.828885757244563*^9, 3.828885768693975*^9}, {
   3.8288858072333527`*^9, 3.82888590719506*^9}, 3.828886070711083*^9, {
   3.828886172469894*^9, 3.8288863312282047`*^9}, {3.828886377543734*^9, 
   3.828886414121367*^9}, {3.8288864607046824`*^9, 3.8288864645709953`*^9}, {
   3.8288865310944366`*^9, 3.8288865895040627`*^9}, {3.82888664487357*^9, 
   3.828886658871381*^9}, 3.828892151816248*^9, {3.828892190690443*^9, 
   3.828892232463933*^9}, {3.828892312464943*^9, 3.828892332853487*^9}, {
   3.8288925187446012`*^9, 3.8288925187723703`*^9}, 3.828895119022799*^9, {
   3.828957418541885*^9, 3.828957486067628*^9}, {3.828957559072205*^9, 
   3.828957604899322*^9}, {3.828957735308255*^9, 3.828957738577304*^9}, {
   3.828957802943584*^9, 3.828957815990078*^9}, {3.8289578504433928`*^9, 
   3.828957901666295*^9}, {3.82895809069051*^9, 3.828958091844817*^9}, {
   3.8289600891928673`*^9, 3.828960241814611*^9}, {3.828960286426805*^9, 
   3.828960289295277*^9}, {3.828960619856318*^9, 3.8289606437993402`*^9}, {
   3.8289608316081343`*^9, 3.828960833062111*^9}, {3.828960868894045*^9, 
   3.828960903305461*^9}, {3.8289609387634363`*^9, 3.828960988096346*^9}, {
   3.828961049626596*^9, 3.828961051406818*^9}, {3.828961090117288*^9, 
   3.828961093396492*^9}, {3.8289611881225863`*^9, 3.828961292661324*^9}, {
   3.8289614032910757`*^9, 3.828961455333839*^9}, {3.82896285168004*^9, 
   3.8289628541599617`*^9}, {3.8289630813707533`*^9, 3.828963103403542*^9}, {
   3.828963503619812*^9, 3.8289635098926373`*^9}, {3.828965038093253*^9, 
   3.8289650410452023`*^9}, {3.8289788927390413`*^9, 
   3.8289788946967583`*^9}, {3.828987852181141*^9, 3.828987882117221*^9}, {
   3.8289899627776833`*^9, 3.828989964385107*^9}, {3.82899000503795*^9, 
   3.828990042036571*^9}, {3.828990088196608*^9, 3.828990159388549*^9}, {
   3.828990820868026*^9, 3.8289908660089483`*^9}, {3.8289913893725443`*^9, 
   3.828991394598147*^9}, {3.829033748450965*^9, 3.829033759649929*^9}, {
   3.829033891446299*^9, 3.8290339206533413`*^9}, {3.829035256926908*^9, 
   3.829035257277713*^9}, {3.82903726013983*^9, 3.829037288358759*^9}, {
   3.829037537299815*^9, 3.829037564120751*^9}, {3.8290375974602623`*^9, 
   3.82903769973886*^9}, {3.829037770926605*^9, 3.829037774846362*^9}, {
   3.8290394631909513`*^9, 3.829039557673768*^9}, {3.829039589387247*^9, 
   3.829039598698929*^9}, {3.8290397056641617`*^9, 3.82903973938518*^9}, {
   3.829039800672452*^9, 3.8290398244459543`*^9}, {3.8290400671250134`*^9, 
   3.829040075218359*^9}, {3.829040911646328*^9, 3.829040925656464*^9}, {
   3.829040956190846*^9, 3.8290410156046333`*^9}, {3.829116187142213*^9, 
   3.829116212367803*^9}, {3.8291171965818243`*^9, 3.8291172023678493`*^9}, {
   3.829117239374205*^9, 3.82911724840308*^9}, 3.829117382383667*^9, {
   3.829118495832714*^9, 3.829118557001108*^9}, {3.829118613842092*^9, 
   3.829118683935896*^9}, {3.829118725690649*^9, 3.829118726412798*^9}, {
   3.829119032876873*^9, 3.829119077193502*^9}, {3.829134566046842*^9, 
   3.829134574099051*^9}, {3.829134733171945*^9, 3.829134738634759*^9}, {
   3.829135217080579*^9, 3.8291352381472807`*^9}, {3.829291503527141*^9, 
   3.8292915065389214`*^9}, {3.8292917926379023`*^9, 3.829291863212768*^9}, {
   3.829291930664283*^9, 3.829291965016395*^9}, {3.8292920780758266`*^9, 
   3.829292115261373*^9}, 3.829292175602716*^9, {3.829292604323119*^9, 
   3.829292617551252*^9}, {3.82929283847287*^9, 3.829292853435817*^9}, {
   3.829293204398464*^9, 3.829293214683919*^9}, {3.82929413212192*^9, 
   3.8292941531972637`*^9}, 3.82929452672082*^9, {3.829294768418045*^9, 
   3.829294810101766*^9}, {3.829294861584792*^9, 3.829294884234241*^9}, 
   3.829295000263112*^9, {3.829295227049622*^9, 3.829295347005637*^9}, {
   3.829295632286282*^9, 3.8292956324857264`*^9}, {3.829295780235219*^9, 
   3.82929578035437*^9}, {3.829303535611972*^9, 3.8293035405099573`*^9}, {
   3.829303606166498*^9, 3.829303634526969*^9}, {3.82930367256131*^9, 
   3.829303683681491*^9}, {3.829303718956049*^9, 3.829303799972823*^9}, {
   3.829303856064514*^9, 3.829303868410228*^9}, {3.829304807476265*^9, 
   3.829304809075521*^9}, {3.829305531813574*^9, 3.8293055340718937`*^9}, {
   3.829305625839313*^9, 3.829305628467392*^9}, 3.8293057469593983`*^9, {
   3.829305842928377*^9, 3.829305891195858*^9}, {3.829305940959321*^9, 
   3.829305957415807*^9}, {3.829306499171187*^9, 3.829306502544896*^9}, {
   3.829306701309042*^9, 3.829306788367929*^9}, 3.8293068555622473`*^9, {
   3.829306890621847*^9, 3.829306943144423*^9}, {3.829328755201544*^9, 
   3.829328758094466*^9}, {3.8293288212172737`*^9, 3.82932882962668*^9}, {
   3.8293288697790213`*^9, 3.8293289394854383`*^9}, {3.82932931883928*^9, 
   3.829329357098406*^9}, {3.8293298971239*^9, 3.829329962629738*^9}, {
   3.829330103403495*^9, 3.82933011473174*^9}, {3.829330305072893*^9, 
   3.829330339905498*^9}, {3.829330372404541*^9, 3.829330374870551*^9}, {
   3.82933046817111*^9, 3.829330541690484*^9}, {3.8293306097157393`*^9, 
   3.829330611711174*^9}, {3.8293306925509453`*^9, 3.829330744788701*^9}, {
   3.829330790467888*^9, 3.829330809437516*^9}, {3.829330939333558*^9, 
   3.82933094868522*^9}, {3.829331313492716*^9, 3.829331313843994*^9}, {
   3.829331566319179*^9, 3.829331567563274*^9}, {3.829332048106789*^9, 
   3.829332063072315*^9}, {3.829411770531646*^9, 3.829411776970295*^9}, {
   3.8294119363591833`*^9, 3.829411937740217*^9}},
 CellLabel->"In[36]:=",
 CellID->323996531,ExpressionUUID->"81ae9bd9-68b6-4442-9f89-7c3efd90c9e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot Constructors for Species Population", "Section",
 CellChangeTimes->{{3.828908860056573*^9, 
  3.828908876421021*^9}},ExpressionUUID->"d7c8d256-4a2a-4482-9d83-\
475bdb981ac4"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"constructIndividualPopulationPlots", "[", "populations_", "]"}], 
    ":=", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "Helper", " ", "function", " ", "that", " ", "takes", " ", "List", " ", 
      "of", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "Algae", "}"}], ",", " ", 
        RowBox[{"{", "Sardines", "}"}], ",", " ", 
        RowBox[{"{", "Sharks", "}"}]}], "}"}], " ", "for", " ", "each", " ", 
      "step", " ", "of", " ", "simulation", " ", "so", " ", "far"}], " ", 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"GraphicsColumn", "[", "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Evaluate", " ", "inb4", " ", "to", " ", "improve", " ", 
        "performance"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"populations", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", ",", 
         RowBox[{
         "PlotLabel", "\[Rule]", " ", "\"\<Algae Population Over Time\>\""}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"PlotStyle", " ", "\[Rule]", " ", 
          RowBox[{"RGBColor", "[", 
           RowBox[{".11", ",", ".60", ",", ".11"}], "]"}]}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"AxesLabel", " ", "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Time (No. Iterations)\>\"", ",", " ", 
            "\"\<No. Individuals\>\""}], "}"}]}], "\[IndentingNewLine]", ",", 
         " ", 
         RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"populations", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "\[IndentingNewLine]", ",", 
         RowBox[{
         "PlotLabel", "\[Rule]", " ", 
          "\"\<Sardine Population Over Time\>\""}], "\[IndentingNewLine]", 
         ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"RGBColor", "[", 
           RowBox[{".0", ",", ".25", ",", ".5"}], "]"}]}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"AxesLabel", " ", "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Time (No. Iterations)\>\"", ",", " ", 
            "\"\<No. Individuals\>\""}], "}"}]}], "\[IndentingNewLine]", ",", 
         " ", 
         RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"populations", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "\[IndentingNewLine]", ",", 
         RowBox[{
         "PlotLabel", "\[Rule]", " ", "\"\<Shark Population Over Time\>\""}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"RGBColor", "[", 
           RowBox[{".0", ",", ".1", ",", ".5"}], "]"}]}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"AxesLabel", " ", "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Time (No. Iterations)\>\"", ",", " ", 
            "\"\<No. Individuals\>\""}], "}"}]}], "\[IndentingNewLine]", ",", 
         " ", 
         RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"constructCompositePopulationPlot", "[", "populations_", "]"}], 
    " ", ":=", " ", "\[IndentingNewLine]", 
    RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
     RowBox[{"populations", ",", " ", "\[IndentingNewLine]", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Algae\>\"", ",", "\"\<Sardines\>\"", ",", "\"\<Sharks\>\""}], 
        "}"}]}], ",", " ", "\[IndentingNewLine]", 
      RowBox[{
      "PlotLabel", " ", "\[Rule]", " ", 
       "\"\<Species Population Over Time\>\""}], ",", "  ", 
      "\[IndentingNewLine]", 
      RowBox[{"AxesLabel", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Time (No. Iterations)\>\"", ",", " ", 
         "\"\<No. Individuals\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RGBColor", "[", 
          RowBox[{".11", ",", ".60", ",", ".11"}], "]"}], ",", " ", 
         RowBox[{"RGBColor", "[", 
          RowBox[{".0", ",", ".25", ",", ".5"}], "]"}], ",", " ", 
         RowBox[{"RGBColor", "[", 
          RowBox[{".0", ",", ".1", ",", ".3"}], "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", ",", " ", 
      RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"constructIndividualDeathPlots", "[", "populations_", "]"}], ":=",
     "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "Helper", " ", "function", " ", "that", " ", "takes", " ", "List", " ", 
      "of", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "Algae", "}"}], ",", " ", 
        RowBox[{"{", "Sardines", "}"}], ",", " ", 
        RowBox[{"{", "Sharks", "}"}]}], "}"}], " ", "for", " ", "each", " ", 
      "step", " ", "of", " ", "simulation", " ", "so", " ", "far"}], " ", 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"GraphicsColumn", "[", "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Evaluate", " ", "inb4", " ", "to", " ", "improve", " ", 
        "performance"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"populations", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", ",", 
         RowBox[{
         "PlotLabel", "\[Rule]", " ", 
          "\"\<Total Sardines Born Over Time\>\""}], "\[IndentingNewLine]", 
         ",", 
         RowBox[{"PlotStyle", " ", "\[Rule]", " ", 
          RowBox[{"RGBColor", "[", 
           RowBox[{".6", ",", ".6", ",", ".0"}], "]"}]}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"AxesLabel", " ", "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Time (No. Iterations)\>\"", ",", " ", 
            "\"\<No. Individuals\>\""}], "}"}]}], "\[IndentingNewLine]", ",", 
         " ", 
         RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"populations", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "\[IndentingNewLine]", ",", 
         RowBox[{
         "PlotLabel", "\[Rule]", " ", 
          "\"\<Total Sardines Caught Over Time\>\""}], "\[IndentingNewLine]", 
         ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"RGBColor", "[", 
           RowBox[{".6", ",", ".3", ",", ".3"}], "]"}]}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"AxesLabel", " ", "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Time (No. Iterations)\>\"", ",", " ", 
            "\"\<No. Individuals\>\""}], "}"}]}], "\[IndentingNewLine]", ",", 
         " ", 
         RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"populations", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "\[IndentingNewLine]", ",", 
         RowBox[{
         "PlotLabel", "\[Rule]", " ", 
          "\"\<Total Sardine Deaths by Natural Causes Over Time\>\""}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"RGBColor", "[", 
           RowBox[{".0", ",", ".0", ",", ".0"}], "]"}]}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"AxesLabel", " ", "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Time (No. Iterations)\>\"", ",", " ", 
            "\"\<No. Individuals\>\""}], "}"}]}], "\[IndentingNewLine]", ",", 
         " ", 
         RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"constructCompositeDeathPlot", "[", "populations_", "]"}], " ", ":=",
     " ", "\[IndentingNewLine]", 
    RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
     RowBox[{"populations", ",", " ", "\[IndentingNewLine]", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Births\>\"", ",", "\"\<Caught\>\"", ",", "\"\<Deaths\>\""}], 
        "}"}]}], ",", " ", "\[IndentingNewLine]", 
      RowBox[{
      "PlotLabel", " ", "\[Rule]", " ", 
       "\"\<Sardine Population Dynamics Over Time\>\""}], ",", "  ", 
      "\[IndentingNewLine]", 
      RowBox[{"AxesLabel", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Time (No. Iterations)\>\"", ",", " ", 
         "\"\<No. Individuals\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RGBColor", "[", 
          RowBox[{".6", ",", ".6", ",", ".0"}], "]"}], ",", " ", 
         RowBox[{"RGBColor", "[", 
          RowBox[{".6", ",", ".3", ",", ".3"}], "]"}], ",", " ", 
         RowBox[{"RGBColor", "[", 
          RowBox[{".0", ",", ".0", ",", ".0"}], "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", ",", " ", 
      RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.828898380642315*^9, 3.828898504797345*^9}, {
   3.828898567449471*^9, 3.8288985710039167`*^9}, {3.8288990834962473`*^9, 
   3.8288991186306334`*^9}, {3.828905855594294*^9, 3.828905888802924*^9}, {
   3.8289063891364098`*^9, 3.828906420627536*^9}, 3.828906528019989*^9, {
   3.8289072343419733`*^9, 3.828907254238373*^9}, {3.828907390566823*^9, 
   3.828907450485783*^9}, {3.8289074851435747`*^9, 3.8289075045057507`*^9}, {
   3.828907565907321*^9, 3.828907613904319*^9}, {3.828907678350601*^9, 
   3.828907727889884*^9}, {3.828907771636375*^9, 3.828907861292012*^9}, {
   3.8289079222444887`*^9, 3.8289079830999928`*^9}, 3.828908036681098*^9, {
   3.828908068699153*^9, 3.828908092710161*^9}, {3.828908131517161*^9, 
   3.8289081321795177`*^9}, {3.8293092864739532`*^9, 3.829309286971281*^9}, {
   3.829309377332459*^9, 3.8293094126804743`*^9}, {3.8293098499008512`*^9, 
   3.829310003933839*^9}, {3.829310085379669*^9, 3.829310124945593*^9}, {
   3.829310421244774*^9, 3.829310442963263*^9}, {3.829310751497014*^9, 
   3.8293107528578176`*^9}, {3.829310985542596*^9, 3.829311042626939*^9}, {
   3.829311097608987*^9, 3.829311159189333*^9}, {3.8293129334901247`*^9, 
   3.829312934515189*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"58007741-eefc-4e44-a9c4-db4af26cca35"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Display Interactive Simulation", "Section",
 CellChangeTimes->{{3.828892738255172*^9, 
  3.8288927465349407`*^9}},ExpressionUUID->"6174aa7f-e3fc-494f-b57f-\
27424df6b8c1"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.828897998233418*^9, 3.828898002420723*^9}, 
   3.828898575127685*^9},
 CellLabel->"In[41]:=",ExpressionUUID->"b939bdc1-a4e9-4e2b-b0b4-317c3f8d452d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Refresh", "[", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"Update", " ", "population"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{"moving", ",", "\[IndentingNewLine]", "  ", 
        RowBox[{
         RowBox[{"res", "=", 
          RowBox[{"updateAgents", "[", 
           RowBox[{
           "ag", ",", "sardineGrowthRate", ",", "sardineMobility", ",", 
            "sharkGrowthRate", ",", "sharkMobility", ",", "sharkEndurance", 
            ",", " ", "sardineEndurance", ",", " ", "algaeGrowthRate", ",", 
            " ", "tSize", ",", "tSpeed", ",", " ", 
            RowBox[{"50", " ", "-", " ", "tSpawnRate"}], ",", "smartSharks", 
            ",", " ", "smartSardines", ",", "targetAlgae", ",", " ", 
            "targetSardines", ",", " ", "targetSharks"}], "]"}]}], ";", "  ", 
         "\[IndentingNewLine]", 
         RowBox[{"ag", " ", "=", " ", 
          RowBox[{"res", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", " ", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Store", " ", "updated", " ", "populations", " ", "for", " ", 
           "plot"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"pd", " ", "=", " ", 
          RowBox[{"res", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{
           RowBox[{"pop", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
           RowBox[{"Length", "[", 
            RowBox[{"Select", "[", 
             RowBox[{"ag", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "Algae"}], 
                ")"}], "&"}]}], "]"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{
           RowBox[{"pop", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
           RowBox[{"Length", "[", 
            RowBox[{"Select", "[", 
             RowBox[{"ag", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "Sardine"}], 
                ")"}], "&"}]}], "]"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{
           RowBox[{"pop", "[", 
            RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
           RowBox[{"Length", "[", 
            RowBox[{"Select", "[", 
             RowBox[{"ag", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "Shark"}], 
                ")"}], "&"}]}], "]"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{
           RowBox[{"popDyn", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"pd", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{
           RowBox[{"popDyn", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{"pd", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{
           RowBox[{"popDyn", "[", 
            RowBox[{"[", "3", "]"}], "]"}], ",", 
           RowBox[{"pd", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"visualizeEnvironment", "[", 
       RowBox[{"ag", ",", " ", "prettyPrint", ",", " ", "tSize"}], "]"}]}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"UpdateInterval", "\[Rule]", 
      RowBox[{"If", "[", 
       RowBox[{"moving", ",", "0", ",", "Infinity"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", "\"\<\>\"", 
   "\[IndentingNewLine]", ",", 
   RowBox[{"Style", "[", 
    RowBox[{"\"\<Simulation Settings:\>\"", ",", " ", "16"}], "]"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"Grid", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<ALGAE PROPERTIES\>\"", ",", " ", "Bold"}], "]"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<SARDINE PROPERTIES\>\"", ",", " ", "Bold"}], "]"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<SHARK PROPERTIES\>\"", ",", "Bold"}], "]"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<TRAWLER PROPERTIES\>\"", ",", " ", "Bold"}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "algaeGrowthRate", ",", "0.5", ",", "\"\<growth rate\>\""}], 
             "}"}], ",", "0", ",", "1", ",", 
            RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "}"}], "]"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "sardineGrowthRate", ",", "0.5", ",", "\"\<growth rate\>\""}], 
             "}"}], ",", "0", ",", "1", ",", 
            RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "}"}], "]"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "sharkGrowthRate", ",", "0.5", ",", "\"\<growth rate\>\""}], 
             "}"}], ",", "0", ",", "1", ",", 
            RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "}"}], "]"}], 
         "\[IndentingNewLine]", ",", " ", 
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "tSpawnRate", ",", " ", "45", ",", " ", "\"\<spawn rate\>\""}], 
             "}"}], ",", " ", "0", ",", " ", "50", ",", "1", ",", " ", 
            RowBox[{"ImageSize", " ", "\[Rule]", " ", "Tiny"}]}], "}"}], 
          "]"}]}], "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"\"\< \>\"", "\[IndentingNewLine]", ",", 
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "sardineMobility", ",", "0.06", ",", "\"\<mobility\>\""}], "}"}],
             ",", "0", ",", "0.1", ",", 
            RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "}"}], "]"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"sharkMobility", ",", "0.1", ",", "\"\<mobility\>\""}], 
             "}"}], ",", "0", ",", "0.1", ",", 
            RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "}"}], "]"}], 
         "\[IndentingNewLine]", ",", " ", 
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"tSpeed", ",", " ", "0.1", ",", " ", "\"\<speed\>\""}], 
             "}"}], ",", " ", "0", ",", " ", "0.5", ",", " ", 
            RowBox[{"ImageSize", " ", "\[Rule]", " ", "Tiny"}]}], "}"}], 
          "]"}]}], "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"\"\< \>\"", "\[IndentingNewLine]", ",", 
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "sardineEndurance", ",", "10", ",", "\"\<starvation\>\""}], 
             "}"}], ",", "1", ",", "20", ",", "1", ",", 
            RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "}"}], "]"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"sharkEndurance", ",", "10", ",", "\"\<starvation\>\""}],
              "}"}], ",", "1", ",", "20", ",", "1", ",", 
            RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "}"}], "]"}], 
         "\[IndentingNewLine]", ",", " ", 
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"tSize", ",", " ", "1", ",", " ", "\"\<size\>\""}], 
             "}"}], ",", " ", "0", ",", " ", "2.5", ",", " ", 
            RowBox[{"ImageSize", " ", "\[Rule]", " ", "Tiny"}]}], "}"}], 
          "]"}]}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Frame", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "3"}], "}"}], "\[Rule]", " ", "True"}], 
        ",", 
        RowBox[{"1", "\[Rule]", "True"}]}], "}"}]}], "\[IndentingNewLine]", 
     ",", 
     RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], 
   "\[IndentingNewLine]", ",", "\"\< \>\"", "\[IndentingNewLine]", ",", " ", 
   RowBox[{"Style", "[", 
    RowBox[{"\"\<TRAWLER TARGET SPECIES\>\"", ",", " ", "Bold"}], "]"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"Grid", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Control", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "targetAlgae", ",", "0.99", ",", "\"\<Algae Throwback\>\""}], 
            "}"}], ",", "0", ",", "1", ",", 
           RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Control", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "targetSardines", ",", "0.01", ",", "\"\<Sardine Throwback\>\""}],
             "}"}], ",", "0", ",", "1", ",", 
           RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Control", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "targetSharks", ",", "0.5", ",", "\"\<Shark Throwback\>\""}], 
            "}"}], ",", "0", ",", "1", ",", 
           RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "}"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", "All"}]}], "]"}], "\[IndentingNewLine]",
    ",", "\"\< \>\"", "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ag", ",", 
       RowBox[{"initialAgents", "[", "]"}]}], "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"res", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", " ", 
            RowBox[{"-", "1"}], ",", " ", "0", ",", " ", "1."}], "}"}], "}"}],
          ",", " ", 
         RowBox[{"{", "}"}]}], "}"}]}], "}"}], ",", " ", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Population", " ", "proportions"}], " ", "*)"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pop", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0", "}"}], ",", " ", 
         RowBox[{"{", "0", "}"}], ",", " ", 
         RowBox[{"{", "0", "}"}]}], "}"}]}], "}"}], ",", " ", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Target", " ", "species", " ", "population", " ", "change", " ", 
     "proportions"}], " ", "*)"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"popDyn", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0", "}"}], ",", " ", 
         RowBox[{"{", "0", "}"}], ",", " ", 
         RowBox[{"{", "0", "}"}]}], "}"}]}], "}"}], ",", " ", 
     RowBox[{"ControlType", " ", "\[Rule]", " ", "None"}]}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"fname", ",", " ", "\"\<save.dat\>\""}], "}"}], ",", " ", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], 
   "\[IndentingNewLine]", ",", "\"\< \>\"", "\[IndentingNewLine]", ",", 
   RowBox[{"Item", "[", 
    RowBox[{
     RowBox[{"Grid", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Control", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"moving", ",", "False", ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<RUN SIMULATION\>\"", ",", " ", "Bold"}], "]"}]}],
               "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"True", ",", " ", "False"}], "}"}]}], "}"}], "]"}], 
          "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Control", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"prettyPrint", ",", "False", ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<PRETTY PRINTING\>\"", ",", " ", "Bold"}], 
                "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], "}"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Control", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"smartSharks", ",", "True", ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<EFFICIENT SHARKS\>\"", ",", " ", "Bold"}], 
                "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], "}"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Control", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"smartSardines", ",", "True", ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<EFFICIENT SARDINES\>\"", ",", " ", "Bold"}], 
                "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], "}"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Button", "[", 
           RowBox[{"\"\<Reset\>\"", ",", 
            RowBox[{
             RowBox[{"moving", "=", "False"}], ";", 
             RowBox[{"ag", "=", 
              RowBox[{"initialAgents", "[", "]"}]}], ";", 
             RowBox[{"res", " ", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", " ", 
                   RowBox[{"-", "1"}], ",", " ", "0", ",", " ", "1."}], "}"}],
                  "}"}], ",", 
                RowBox[{"{", "}"}]}], "}"}]}], ";", " ", 
             RowBox[{"pop", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", "0", "}"}], ",", 
                RowBox[{"{", "0", "}"}], ",", 
                RowBox[{"{", "0", "}"}]}], "}"}]}], ";", " ", 
             RowBox[{"popDyn", " ", "=", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", "0", "}"}], ",", 
                RowBox[{"{", "0", "}"}], ",", 
                RowBox[{"{", "0", "}"}]}], "}"}]}]}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Button", "[", 
           RowBox[{"\"\<Save Sim\>\"", ",", 
            RowBox[{
             RowBox[{"filePath", "=", 
              RowBox[{"SystemDialogInput", "[", "\"\<FileSave\>\"", "]"}]}], 
             ";", 
             RowBox[{"Export", "[", 
              RowBox[{"filePath", ",", " ", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"{", "pop", "}"}], ",", " ", 
                 RowBox[{"{", "popDyn", "}"}]}], "]"}], ",", " ", 
               "\"\<Package\>\""}], "]"}]}], ",", " ", 
            RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", " ", 
            RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}], 
          "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Button", "[", 
           RowBox[{"\"\<Step\>\"", ",", " ", 
            RowBox[{
             RowBox[{"res", "=", 
              RowBox[{"updateAgents", "[", 
               RowBox[{
               "ag", ",", "sardineGrowthRate", ",", "sardineMobility", ",", 
                "sharkGrowthRate", ",", "sharkMobility", ",", 
                "sharkEndurance", ",", " ", "sardineEndurance", ",", " ", 
                "algaeGrowthRate", ",", " ", "tSize", ",", "tSpeed", ",", " ", 
                RowBox[{"50", " ", "-", " ", "tSpawnRate"}], ",", 
                "smartSharks", ",", " ", "smartSardines", ",", "targetAlgae", 
                ",", " ", "targetSardines", ",", " ", "targetSharks"}], 
               "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"ag", " ", "=", " ", 
              RowBox[{"res", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"pd", " ", "=", " ", 
              RowBox[{"res", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{
               RowBox[{"pop", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
               RowBox[{"Length", "[", 
                RowBox[{"Select", "[", 
                 RowBox[{"ag", ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "Algae"}], 
                    ")"}], "&"}]}], "]"}], "]"}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{
               RowBox[{"pop", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
               RowBox[{"Length", "[", 
                RowBox[{"Select", "[", 
                 RowBox[{"ag", ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "Sardine"}], 
                    ")"}], "&"}]}], "]"}], "]"}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{
               RowBox[{"pop", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
               RowBox[{"Length", "[", 
                RowBox[{"Select", "[", 
                 RowBox[{"ag", ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "Shark"}], 
                    ")"}], "&"}]}], "]"}], "]"}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{
               RowBox[{"popDyn", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"pd", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{
               RowBox[{"popDyn", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"pd", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{
               RowBox[{"popDyn", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
               RowBox[{"pd", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], 
            "\[IndentingNewLine]", ",", " ", 
            RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], "}"}]}], 
        "\[IndentingNewLine]", "}"}], ",", " ", 
       RowBox[{"Frame", "\[Rule]", " ", "All"}]}], "]"}], ",", " ", 
     RowBox[{"ControlPlacement", "\[Rule]", "Right"}]}], "]"}], 
   "\[IndentingNewLine]", ",", "\"\< \>\"", "\[IndentingNewLine]", ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}], ",", 
   RowBox[{"AutorunSequencing", "\[Rule]", 
    RowBox[{"{", "6", "}"}]}], ",", 
   RowBox[{"TrackedSymbols", "\[RuleDelayed]", 
    RowBox[{"{", 
     RowBox[{"moving", ",", "ag"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"SynchronousUpdating", "\[Rule]", "True"}], ",", 
   RowBox[{"ControlPlacement", "\[Rule]", "Bottom"}]}], "\[IndentingNewLine]",
   "]"}]], "Input",
 CellChangeTimes->{
  3.35696210375764*^9, {3.39277061965625*^9, 3.39277063709375*^9}, {
   3.3930946172472615`*^9, 3.3930946192628736`*^9}, {3.393094659184493*^9, 
   3.3930948089335346`*^9}, {3.3930948869642854`*^9, 3.393094887479907*^9}, {
   3.393095032150856*^9, 3.3930950693849926`*^9}, {3.3930951177128086`*^9, 
   3.393095161290655*^9}, {3.3930952078841066`*^9, 3.393095214712188*^9}, {
   3.393134960328125*^9, 3.393135005484375*^9}, {3.393135098*^9, 
   3.393135100078125*^9}, {3.39313547115625*^9, 3.3931354996875*^9}, {
   3.393135575234375*^9, 3.39313560240625*^9}, {3.393135647171875*^9, 
   3.39313566171875*^9}, {3.3931357040625*^9, 3.393135787375*^9}, {
   3.393135846203125*^9, 3.393135880734375*^9}, {3.39313612671875*^9, 
   3.393136137703125*^9}, {3.393344439705454*^9, 3.3933444403617*^9}, {
   3.394886271114541*^9, 3.3948862820833616`*^9}, {3.402225005859375*^9, 
   3.402225006109375*^9}, {3.413051118296875*^9, 3.413051124171875*^9}, {
   3.41305125675*^9, 3.41305125796875*^9}, {3.41305133225*^9, 
   3.413051332609375*^9}, {3.413062440140625*^9, 3.413062481390625*^9}, {
   3.4130628313125*^9, 3.413062919765625*^9}, {3.41306297046875*^9, 
   3.41306297765625*^9}, {3.413063013359375*^9, 3.4130630324375*^9}, {
   3.413063245484375*^9, 3.41306325865625*^9}, 3.413063613109375*^9, {
   3.41309974571875*^9, 3.413099843921875*^9}, {3.41310007334375*^9, 
   3.413100074046875*^9}, {3.413100464703125*^9, 3.413100466625*^9}, {
   3.41310051540625*^9, 3.41310053109375*^9}, {3.413100691140625*^9, 
   3.413100714609375*^9}, {3.41310106871875*^9, 3.413101073921875*^9}, {
   3.413118492816533*^9, 3.4131185644879494`*^9}, {3.4131247297262774`*^9, 
   3.4131247459764853`*^9}, {3.4131247797112923`*^9, 
   3.4131248370245256`*^9}, {3.41322235728125*^9, 3.41322235990625*^9}, {
   3.413222414546875*^9, 3.4132224175625*^9}, 3.4135430135327787`*^9, {
   3.8288847392431993`*^9, 3.8288847799596367`*^9}, {3.828885078873111*^9, 
   3.828885104673609*^9}, {3.828885341577897*^9, 3.828885377105915*^9}, {
   3.8288855263247423`*^9, 3.8288855271118813`*^9}, {3.828885658957323*^9, 
   3.828885660955768*^9}, {3.8288868403957167`*^9, 3.8288868417574997`*^9}, {
   3.828892232082017*^9, 3.828892232085775*^9}, {3.828892332855497*^9, 
   3.828892332864706*^9}, {3.828892518774105*^9, 3.828892518781928*^9}, {
   3.828892774623147*^9, 3.828892938469558*^9}, {3.828893030724873*^9, 
   3.828893081299362*^9}, {3.828893121639256*^9, 3.828893412465693*^9}, {
   3.828893469645282*^9, 3.828893470452113*^9}, {3.828893516977298*^9, 
   3.828893517463663*^9}, {3.828894007860026*^9, 3.828894011744501*^9}, {
   3.828895180291019*^9, 3.828895182489979*^9}, {3.828896989699976*^9, 
   3.8288970850357723`*^9}, {3.828897165251465*^9, 3.828897175770639*^9}, {
   3.828897403223769*^9, 3.828897598357931*^9}, {3.828897628928831*^9, 
   3.82889762904725*^9}, {3.828897675649302*^9, 3.828897733001857*^9}, {
   3.828897771214778*^9, 3.828897816258196*^9}, {3.828897863467965*^9, 
   3.828897865230196*^9}, {3.8288979940467043`*^9, 3.828898060919795*^9}, {
   3.828898314047875*^9, 3.828898333665113*^9}, {3.8288985937895193`*^9, 
   3.828898674359434*^9}, {3.828898803197351*^9, 3.828898937836639*^9}, {
   3.82890006505411*^9, 3.828900080249063*^9}, 3.8289003168673563`*^9, {
   3.828900932999775*^9, 3.8289009665122337`*^9}, {3.8289010756810226`*^9, 
   3.828901110388586*^9}, {3.828901153068576*^9, 3.828901167103367*^9}, {
   3.8289012262525673`*^9, 3.82890126119622*^9}, {3.828901362396068*^9, 
   3.828901375415696*^9}, {3.828901411273491*^9, 3.828901480300475*^9}, {
   3.828901530979588*^9, 3.828901531409247*^9}, {3.82890166710684*^9, 
   3.828901678837151*^9}, {3.828901748868739*^9, 3.828901800302272*^9}, {
   3.828902049736267*^9, 3.8289020696422157`*^9}, {3.8289021270205393`*^9, 
   3.828902178596485*^9}, {3.82890220959298*^9, 3.828902379205599*^9}, {
   3.8289024444493723`*^9, 3.828902509821949*^9}, {3.8289025887651253`*^9, 
   3.8289026138929*^9}, {3.828902654232355*^9, 3.828902734889832*^9}, {
   3.828902820443612*^9, 3.828902960398532*^9}, {3.82890299406988*^9, 
   3.828903028969853*^9}, {3.82890306711537*^9, 3.828903129335967*^9}, {
   3.828903259648934*^9, 3.82890327183617*^9}, {3.828903311547111*^9, 
   3.828903343167596*^9}, {3.8289033979162397`*^9, 3.8289034452900057`*^9}, {
   3.828903501127534*^9, 3.828903525586735*^9}, {3.828903572449482*^9, 
   3.828903648920216*^9}, {3.828903857372662*^9, 3.8289039382541447`*^9}, {
   3.828904040687491*^9, 3.8289041543149233`*^9}, {3.828904292579851*^9, 
   3.828904294980385*^9}, {3.8289044198143272`*^9, 3.828904430529014*^9}, {
   3.8289045649159813`*^9, 3.828904567631008*^9}, {3.828904622263734*^9, 
   3.828904682795436*^9}, {3.8289047199169693`*^9, 3.828904769623713*^9}, {
   3.828904915801001*^9, 3.828904917583045*^9}, {3.828905086287553*^9, 
   3.828905125226674*^9}, {3.828905196177884*^9, 3.828905239824198*^9}, {
   3.828905298709244*^9, 3.8289053115380497`*^9}, {3.828905367979637*^9, 
   3.828905429968638*^9}, {3.8289054832516327`*^9, 3.828905485066938*^9}, 
   3.828905520031213*^9, {3.828944967827561*^9, 3.828945059272375*^9}, {
   3.8289450955996313`*^9, 3.8289452105431747`*^9}, {3.8289452610469513`*^9, 
   3.8289453542677183`*^9}, {3.828956892464686*^9, 3.828956940550508*^9}, {
   3.8289595240047197`*^9, 3.828959559975033*^9}, 3.828959631065826*^9, {
   3.828963448626563*^9, 3.828963451349484*^9}, {3.828985130352539*^9, 
   3.828985131621323*^9}, {3.8289869393202887`*^9, 3.828987004840147*^9}, {
   3.828987041745925*^9, 3.828987103284821*^9}, {3.8289871802772818`*^9, 
   3.828987317063233*^9}, {3.828987661582913*^9, 3.828987678295561*^9}, {
   3.828987750301712*^9, 3.828987834838456*^9}, {3.8289879988872538`*^9, 
   3.828988010275732*^9}, 3.829034389409584*^9, {3.829037784765767*^9, 
   3.8290377889949627`*^9}, {3.8290396111273537`*^9, 3.829039680894122*^9}, {
   3.8290398693432093`*^9, 3.829039923114324*^9}, 3.829040018668542*^9, {
   3.829040641393684*^9, 3.829040680202694*^9}, {3.82904071983075*^9, 
   3.829040879876052*^9}, {3.829041126045821*^9, 3.829041229837206*^9}, {
   3.829041588595883*^9, 3.829041589815034*^9}, {3.829041654872016*^9, 
   3.829041655348878*^9}, {3.829041691702545*^9, 3.829041799932311*^9}, {
   3.829041927304357*^9, 3.829042005622259*^9}, {3.829042074076734*^9, 
   3.829042134148691*^9}, {3.8290421649632587`*^9, 3.829042204938365*^9}, {
   3.82904225879848*^9, 3.829042350973235*^9}, 3.82904248889042*^9, {
   3.82904254838481*^9, 3.829042576198031*^9}, {3.829042621888349*^9, 
   3.829042686553952*^9}, {3.82904272833311*^9, 3.8290429033016872`*^9}, {
   3.8290429487185497`*^9, 3.8290429566152678`*^9}, {3.829042994571003*^9, 
   3.829043159183041*^9}, {3.8290434769118547`*^9, 3.8290435285085983`*^9}, {
   3.829115224139749*^9, 3.829115351471895*^9}, {3.82911539589852*^9, 
   3.829115409486019*^9}, {3.829115484592101*^9, 3.829115585515141*^9}, {
   3.829115816282655*^9, 3.829115818545343*^9}, {3.8291160430514174`*^9, 
   3.8291160567521772`*^9}, {3.8291160988129*^9, 3.8291161382658052`*^9}, {
   3.8291163711214457`*^9, 3.829116380816533*^9}, {3.829117154777565*^9, 
   3.8291171790658484`*^9}, {3.829117412978344*^9, 3.829117413451603*^9}, {
   3.829117579967412*^9, 3.829117582426787*^9}, {3.829117925564561*^9, 
   3.8291179904333363`*^9}, {3.8291279932879963`*^9, 3.829127994036071*^9}, {
   3.829291459208869*^9, 3.829291496148287*^9}, {3.829292365686542*^9, 
   3.82929239126015*^9}, {3.8292946959320383`*^9, 3.829294703741969*^9}, {
   3.829306014589526*^9, 3.829306119138441*^9}, {3.829306149395597*^9, 
   3.82930620374046*^9}, {3.829306251635892*^9, 3.829306253333404*^9}, {
   3.829306398583392*^9, 3.8293064196897306`*^9}, {3.829306453339808*^9, 
   3.82930645685565*^9}, {3.8293065382537327`*^9, 3.8293066294124413`*^9}, {
   3.829306986196003*^9, 3.829307008526532*^9}, {3.829307117135394*^9, 
   3.829307150364553*^9}, 3.829307184695211*^9, {3.829307224189632*^9, 
   3.82930723890904*^9}, {3.829307308588649*^9, 3.8293073633261414`*^9}, {
   3.829307399483347*^9, 3.829307685728421*^9}, {3.829307852048917*^9, 
   3.829307904472974*^9}, {3.829307943819388*^9, 3.829307945326264*^9}, {
   3.829308596920459*^9, 3.829308602832286*^9}, {3.829308768092581*^9, 
   3.829308827319685*^9}, 3.82930901376164*^9, {3.82931026491241*^9, 
   3.829310285367408*^9}, {3.829310879021669*^9, 3.8293108963814898`*^9}, {
   3.8293319606486673`*^9, 3.829331965179988*^9}, {3.829332018178321*^9, 
   3.829332035271236*^9}, {3.829410531130445*^9, 3.829410532052904*^9}, 
   3.829422883269537*^9},
 CellLabel->"In[42]:=",
 CellID->428012851,ExpressionUUID->"0176965e-3757-4de0-9628-1820fc087e4d"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`ag$$ = CompressedData["
1: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
ihzrhHh9WvPdQPL3Ayrxf7z1pWs=
    "], $CellContext`algaeGrowthRate$$ = 0.5, $CellContext`fname$$ = 
    "save.dat", $CellContext`moving$$ = False, $CellContext`pop$$ = {{0}, {
    0}, {0}}, $CellContext`popDyn$$ = {{0}, {0}, {
    0}}, $CellContext`prettyPrint$$ = 
    False, $CellContext`res$$ = {{{-1, -1, 0, 
       1.}}, {}}, $CellContext`sardineEndurance$$ = 
    10, $CellContext`sardineGrowthRate$$ = 
    0.5, $CellContext`sardineMobility$$ = 
    0.06, $CellContext`sharkEndurance$$ = 10, $CellContext`sharkGrowthRate$$ =
     0.5, $CellContext`sharkMobility$$ = 0.1, $CellContext`smartSardines$$ = 
    True, $CellContext`smartSharks$$ = True, $CellContext`targetAlgae$$ = 
    0.99, $CellContext`targetSardines$$ = 0.01, $CellContext`targetSharks$$ = 
    0.5, $CellContext`tSize$$ = 1, $CellContext`tSpawnRate$$ = 
    45, $CellContext`tSpeed$$ = 0.1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[""], Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Style["Simulation Settings:", 16]], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`algaeGrowthRate$$], 0.5, "growth rate"}, 0, 1}, {{
       Hold[$CellContext`sardineGrowthRate$$], 0.5, "growth rate"}, 0, 1}, {{
       Hold[$CellContext`sharkGrowthRate$$], 0.5, "growth rate"}, 0, 1}, {{
       Hold[$CellContext`tSpawnRate$$], 45, "spawn rate"}, 0, 50, 1}, {{
       Hold[$CellContext`sardineMobility$$], 0.06, "mobility"}, 0, 0.1}, {{
       Hold[$CellContext`sharkMobility$$], 0.1, "mobility"}, 0, 0.1}, {{
       Hold[$CellContext`tSpeed$$], 0.1, "speed"}, 0, 0.5}, {{
       Hold[$CellContext`sardineEndurance$$], 10, "starvation"}, 1, 20, 1}, {{
       Hold[$CellContext`sharkEndurance$$], 10, "starvation"}, 1, 20, 1}, {{
       Hold[$CellContext`tSize$$], 1, "size"}, 0, 2.5}, {
      Hold[
       Grid[{{
          Style["ALGAE PROPERTIES", Bold], 
          Style["SARDINE PROPERTIES", Bold], 
          Style["SHARK PROPERTIES", Bold], 
          Style["TRAWLER PROPERTIES", Bold]}, {
          Manipulate`Place[1], 
          Manipulate`Place[2], 
          Manipulate`Place[3], 
          Manipulate`Place[4]}, {" ", 
          Manipulate`Place[5], 
          Manipulate`Place[6], 
          Manipulate`Place[7]}, {" ", 
          Manipulate`Place[8], 
          Manipulate`Place[9], 
          Manipulate`Place[10]}}, Frame -> {{1, 2, 3} -> True, 1 -> True}, 
        Alignment -> Center]], Manipulate`Dump`ThisIsNotAControl}, {
      Hold[" "], Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Style["TRAWLER TARGET SPECIES", Bold]], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`targetAlgae$$], 0.99, "Algae Throwback"}, 0, 1}, {{
       Hold[$CellContext`targetSardines$$], 0.01, "Sardine Throwback"}, 0, 
      1}, {{
       Hold[$CellContext`targetSharks$$], 0.5, "Shark Throwback"}, 0, 1}, {
      Hold[
       Grid[{{
          Manipulate`Place[11], 
          Manipulate`Place[12], 
          Manipulate`Place[13]}}, Frame -> All]], 
      Manipulate`Dump`ThisIsNotAControl}, {
      Hold[" "], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`ag$$], CompressedData["
1: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
ihzrhHh9WvPdQPL3Ayrxf7z1pWs=
       "]}}, {{
       Hold[$CellContext`res$$], {{{-1, -1, 0, 1.}}, {}}}}, {{
       Hold[$CellContext`pop$$], {{0}, {0}, {0}}}}, {{
       Hold[$CellContext`popDyn$$], {{0}, {0}, {0}}}}, {{
       Hold[$CellContext`fname$$], "save.dat"}}, {
      Hold[" "], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`moving$$], False, 
       Style["RUN SIMULATION", Bold]}, {True, False}}, {{
       Hold[$CellContext`prettyPrint$$], False, 
       Style["PRETTY PRINTING", Bold]}, {False, True}}, {{
       Hold[$CellContext`smartSharks$$], True, 
       Style["EFFICIENT SHARKS", Bold]}, {False, True}}, {{
       Hold[$CellContext`smartSardines$$], True, 
       Style["EFFICIENT SARDINES", Bold]}, {False, True}}, {
      Hold[
       Item[
        Grid[{{
           Manipulate`Place[14]}, {
           Manipulate`Place[15]}, {
           Manipulate`Place[16]}, {
           Manipulate`Place[17]}, {
           Button[
           "Reset", $CellContext`moving$$ = 
             False; $CellContext`ag$$ = $CellContext`initialAgents[]; \
$CellContext`res$$ = {{{-1, -1, 0, 1.}}, {}}; $CellContext`pop$$ = {{0}, {
              0}, {0}}; $CellContext`popDyn$$ = {{0}, {0}, {0}}, ImageSize -> 
            Medium]}, {
           Button[
           "Save Sim", $CellContext`filePath = SystemDialogInput["FileSave"]; 
            Export[$CellContext`filePath, 
              Join[{$CellContext`pop$$}, {$CellContext`popDyn$$}], "Package"],
             ImageSize -> Medium, Method -> "Queued"]}, {
           Button[
           "Step", $CellContext`res$$ = \
$CellContext`updateAgents[$CellContext`ag$$, \
$CellContext`sardineGrowthRate$$, $CellContext`sardineMobility$$, \
$CellContext`sharkGrowthRate$$, $CellContext`sharkMobility$$, \
$CellContext`sharkEndurance$$, $CellContext`sardineEndurance$$, \
$CellContext`algaeGrowthRate$$, $CellContext`tSize$$, $CellContext`tSpeed$$, 
               50 - $CellContext`tSpawnRate$$, $CellContext`smartSharks$$, \
$CellContext`smartSardines$$, $CellContext`targetAlgae$$, \
$CellContext`targetSardines$$, $CellContext`targetSharks$$]; \
$CellContext`ag$$ = Part[$CellContext`res$$, 1]; $CellContext`pd = 
             Part[$CellContext`res$$, 2]; AppendTo[
              Part[$CellContext`pop$$, 1], 
              Length[
               
               Select[$CellContext`ag$$, 
                Part[#, 4] == $CellContext`Algae& ]]]; AppendTo[
              Part[$CellContext`pop$$, 2], 
              Length[
               
               Select[$CellContext`ag$$, 
                Part[#, 4] == $CellContext`Sardine& ]]]; AppendTo[
              Part[$CellContext`pop$$, 3], 
              Length[
               
               Select[$CellContext`ag$$, 
                Part[#, 4] == $CellContext`Shark& ]]]; AppendTo[
              Part[$CellContext`popDyn$$, 1], 
              Part[$CellContext`pd, 1]]; AppendTo[
              Part[$CellContext`popDyn$$, 2], 
              Part[$CellContext`pd, 2]]; AppendTo[
              Part[$CellContext`popDyn$$, 3], 
              Part[$CellContext`pd, 3]], ImageSize -> Medium]}}, Frame -> 
         All]]], Manipulate`Dump`ThisIsNotAControl}, {
      Hold[" "], Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    660., {327., 333.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, "Variables" :> {$CellContext`ag$$ = CompressedData["
1:eJxtmHs8lOn7xyepxjqkqLCSdGCRU1RfNtdTW5RTQkxKyUrtRsghid1JSNZK
pZJ1PmSSkFROMetMzsZZzIxxnBm01Jal/fn391w7r9f89X7d93Pfn+tzHZ5n
q4unzXkRCoVSv/wXXf77vxA/JX59HCi7XcVsNaOA8v9/RH2Ff0qA7iBwHUpN
DraPIh54LPn0DcE4RMj3BetYViNuNyUZlLxtFJihDLt/MptJfBbs7+d1aNgL
QWc+bo/sXCnijarGbSeU2eCsHJ0rXtqB9ldMi3RTUBiAEIcXvNspfMTdSyzT
f9TrAPWTTkv/Nk8jnnLp74EUJRZQnp8d8ZROQJyifap9fWYOqGntDW1P6kSc
vhD36uPpKmBVPzkrMc1F/N4ai80czxkQbNGZjknD56Mv6DEewPK9BM33LI8W
IK4/bmRPu9EB+R8nu+x82Yivf90Q4RnEBenDl3neVkykX3jczLQlTIMFLW0+
5Gk/Wm+/VsLJcUQA+65sl2Q1tSNuLVXR0n/yFTD5zSybpRjEAw7IjS28rgXa
3HcHytfXIF5yTWj6aHA5/qaRG98UMBAvLy/33m/Mhph/Yj/89B2+v2ZSWbVW
eztkqIhSq7hjiH+fEEOrKe+GFPEsxcF/shFXMzqpmqjNAmmZru5GzRnEF/02
WG3THoAj1h41Q+twfI64aH6g7OwH16yUeCXLEex/yavfUhk8OJI+/6OtTi3i
UQ/vMMv0+kFPP9F39TRe/6R56pRPzwhI2Jz/M3uch7ihxmW3X2ijMLZ4ZqZe
G5+vSLzaWl5iBmglE3JHtuD8oIf7dfjXpUJ9474sOzccH/ZNrkXptXxYfFHs
V1s7gfxzmb0/yZA9A7FRaXMW58jPn4VfwpaWwrawIcrl4PmjVvh+7qnPdsbq
smC1VpA+B8jxm4XP4jpdrVeYoFasGPXY7j3Oz9mvw9GMaWDGLc5n7ePg+zvo
Kui940B9DnuHswGuPwKXk+ksUT5IyHX9Vp41hf01FUD1fjkNXNrurJRaXN+a
kkYTz98SQk5Gl3FTcjfi8UZrLTpZE5CbMRbUeBWvXx8VcYdnOQYREU5bd76v
xPnjrtcqPtkIrj4FsUJR8vpZMONte/GtDgcYBZJeG52wPhnnL9zdLN4LRzw2
AmPpP+pPkp0WzYcDcU62luWncP7H6Jmd9ZGagJyAvuCHD7E+1kuVZ8b2FoPK
sx2elyNx/jnyv9uneXkKaD3eakJJvH/gL6anhVdHwDDw/lnRW5N4/4EyhbwO
Dmw/JbdgLTmA82+PjsaS0gQQwhBegFsX4mf6A9/90z0NE1Webfmf6hAnLo0W
cHZnQHmT5EnWLNnfy/53LLu5Y0IIlSJlfhKncX39qphpW3yQD85/1CcuduD+
QRMmCOr8J2D+lpeYliPWv1CyNPdQaAfoi6bEbTDB/u2VDjbsK20DeqengXv7
OxR/Cge+6Vz0hvxEdnjmnSp8/s+MNa1FvUDvj/W39sDnY66kND1QzYIEl3ar
qvU9iAfxd/56Qb4DrK+qZ2S2D2P95i9dmu1pAa9+sfhfwwfxfPBYKO3WNglm
e8R8v8kSoPPPhoRGWVePQj5YKipdqsD+93kbk6bTDbyr6va6ntjfasPrV0J9
GwzeCrkw8FSIuJfm1N50xSKw/kN9Wiq9DXH1Q8fj7UynYILqUnxFH8eH0XKc
/yagCySeHDDSKyCfn0LEbVG+mNgwBTGWi2PGBri+uyrGLDXXcMC1pGbX2wbs
n16bXIq45jSwi1RKht6X4ftbVWjHFQ7C6jq3rE0ZOP9CRE2iAwpGwLmOu+7+
73h/FZk+/R372bCgJnLhXjLOL98TlJQC9vL5nRidktZFuP+5HhMklI3AoeQw
70KxIcS7Q8LuZjwXwMXICoOvkjj/88VXleXdmYKcMRmGTwSuf2ZPw3Q/U8ZA
5Fl1OicT91/lFcU/lD/oBWNVy5pWMdz/BOFbwvZFc4EtdUiGG1iI+KGG6Jt/
cnhQxPXqYE/+iee339mX+nM5QPPbmWffi58vd86J50BrAp2P7a2qn7C+ET97
hMp11wFjL3P3jYn/4F6BUl/57dDmNqznKcT6VW5yumdizgf/8sNn4k2w//JF
W+LZUqUQw1c40eLzFnEbj/yDB3/jQe8am1T+Gpx/ZpvU7K4vsGEwD+ZPxOD4
U0cfiDrL8MD5sfnkJgPM1fvfph0O4MNfPza0tIWP4/pyq1ijwbAeKKELDzfe
O4f7837nPTrufcDbMxDrnorvT5c/1HVtZSmIFjx3Hafi++unqgYmRXVBYLp/
6T0+2V9UYp/SqLMYmwuvJa6oS5WT9acSX1Webbg2LoTTfobb/FzJ56cSY4X8
gEWBAFIU9E19IA3xALsviaXOTOiNSPqaqVyPOFN72L+weQSCZFNdNAPI9ZFK
1H9ivpERZwHhO1CitIo8X1EJlZCzaStaeaBvp3xvyJhc36iEc4Ho6h2/MSBm
ndxC9CGyflSC16nGCZqbANGwx1c2FZH7B5Vg6xiwfR1qgOa5t/J5ZR/i99oq
e17/OgpBf4Ds4r/k/KQSOV9CNxNp46DYcv/VpKAXcUrjaqa7VQeMSd4Z5vaQ
+yeV6OUqrnzvxALnxOeGD6vJ/qQSDIdt1awPf4JsfYEgUpbsPyrRdqXGL35w
eb4+LzvJqyXnJ5XQLFT+3+zTEYh65fH3QjILcXpby5PHniNQ+3LAaayQ3P+o
hPEmzVpZwSRoJc6dt7+LeeSuDA2PvDGIdwluNf8W8/6kQ9Lpy/oHlNB/WiOF
z1/O2c6vnBJC0J5PK9I+4fVMnzLmdWEOUK8bffuoAutLD/NPCIqYhiACxOZN
sb5xLLmAtXlsONKw8psD0+T3Myohl5Tnl+3SAvUKgne5og2Is8Jt1aNSuyHk
lWPql2fk+ZxKqL3U2OxkJIT5yDaztEBy/aUS8cf3TJnTx0Hkr3c9c2dwfn7e
tXWryfJ7EfuD5S99yTnYPy7333Lf+0A1TSts9QmcPwFZqw8mJPXCRNPXfTG9
5PmNSlgzDxubGrRCt2XHD1qz5P5IJQomrrYt+vGhSa75ccHvOD4KF8/Z3NYd
A98Tl2Ndj5PfX5b3/ymHvfj6HRCcT8Gmq94gHnMrOFUypBGGTpVYmvvi50dV
3WhSkh+AINtjtysTcf7F6KXmKTs0gXR2XeQOO6xv2tv78c9HuGD9xUl1VQ35
/Y1KDK4WnBI+7AfZSsmXvATyfE0lYh95qMJUJ2RED2mqSOH7Ka/jhhSKFQM3
y1FXPoNcf6nE925345vXD4GL2E2HylxcX+QGSjWzgQspIyyzFXlP8P5tcyV5
8k9he3CeXYE1eT5f1vfJX5HJ4yNAzN32VwvC/vR10bW4K84BdrzNnW5FHP+W
VS05Pb+Pws+lu135h7F+RZ6BD6PY46Aymq2t4Y153JdqVe3NVRAgvqqhPxPr
0zsYdpRpMgCfpU8oeqWT54fl+tx2fqV2WBbk5v9aMUrF+ak8vFHxCa0EInZE
/zE1ivenX3/bYnO4FiJcNM69L8L3a9y+cnLnpQlQ3+8067cb+/d7MDub1dcN
OvIRhZs0ye8Hy/c/xix0j5oB+snw53Ka5PmeSohuVapKN22H7GMfnbdK4fpP
7wqqs/95EmZtTV5c20b+PkclJPZP9GcPCKGIwcg+nvUf+q96pPb37ilYONDV
1k4jz8/L9S/uwZkWwQh0tLLeVyRh/83aq2qcraiGKy+P/3VGF+tHWToYXG6x
3D/NH1WW+OH1CYPO19ZuHYKx3lX0zDncP8zu/sBc/HsG2KP8FgMd8vfF5f2n
3Oxjexogwty86PpGXL91dsXdlfXogXojvSbad3g+aOzzyTbfywYJ4tzRvpW4
PlgRyYc3+8+AiMjEJ44Onk8u1v12/My5AfCXCTPoU8f6fj62Ji9yzRRYe8qu
CDF+gevLeE3q9SkexLVTbnwywfk3Gz1P/1lGCDbdLeaet/H8ZBWmua5jBR8k
lEN4AwM4fm3smwq29u+AKeMY1Soeh+NropAa6pMAElAgd2EEzze9ceasLtpy
frPXlns5Y3/SfxLxC/bKA2fHyx+aNzQibpjDyP/4mQ3WV6JnloxwfSK+BtFz
HvBAiyH95AdD3N/kmB0Fx0p5QH9acbHDF8eXclBkuGboKkR039rFOtWCONWi
kpPhPQPSJ7+aNzfi+PX/r7Bq7sUUuKfv2DKSh/X1amx0t3YsAunoAoc3wpfY
X+YqpeVxDaBoa2WcP4v7o5v3F6YnexpyY9YNn23B/qAn2257e6ADCKnKxeHP
5O9TVIJ2Y69+8dIA9HeXjGYO4/tH/Bv+6sejNWC3xXTPaAX2L/vI6KbKnZMg
/eXVvw3zOD/9nYwcNT8IgHlR6YbCyAOs79WS+dBkLjh7g45Iawqun5NOsRta
+8HNIXgyoQjrG6V0IM7tOBcU1oTMX/TH+U+T7/wmurgW1ms2l1gM4/pcSNGw
ihzrhHh9WvPdQPL3Ayrxf7z1pWs=
         "], $CellContext`algaeGrowthRate$$ = 0.5, $CellContext`fname$$ = 
        "save.dat", $CellContext`moving$$ = 
        False, $CellContext`pop$$ = {{0}, {0}, {
         0}}, $CellContext`popDyn$$ = {{0}, {0}, {
         0}}, $CellContext`prettyPrint$$ = 
        False, $CellContext`res$$ = {{{-1, -1, 0, 
            1.}}, {}}, $CellContext`sardineEndurance$$ = 
        10, $CellContext`sardineGrowthRate$$ = 
        0.5, $CellContext`sardineMobility$$ = 
        0.06, $CellContext`sharkEndurance$$ = 
        10, $CellContext`sharkGrowthRate$$ = 
        0.5, $CellContext`sharkMobility$$ = 0.1, $CellContext`smartSardines$$ = 
        True, $CellContext`smartSharks$$ = True, $CellContext`targetAlgae$$ = 
        0.99, $CellContext`targetSardines$$ = 
        0.01, $CellContext`targetSharks$$ = 0.5, $CellContext`tSize$$ = 
        1, $CellContext`tSpawnRate$$ = 45, $CellContext`tSpeed$$ = 0.1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Refresh[If[$CellContext`moving$$, $CellContext`res$$ = \
$CellContext`updateAgents[$CellContext`ag$$, \
$CellContext`sardineGrowthRate$$, $CellContext`sardineMobility$$, \
$CellContext`sharkGrowthRate$$, $CellContext`sharkMobility$$, \
$CellContext`sharkEndurance$$, $CellContext`sardineEndurance$$, \
$CellContext`algaeGrowthRate$$, $CellContext`tSize$$, $CellContext`tSpeed$$, 
             50 - $CellContext`tSpawnRate$$, $CellContext`smartSharks$$, \
$CellContext`smartSardines$$, $CellContext`targetAlgae$$, \
$CellContext`targetSardines$$, $CellContext`targetSharks$$]; \
$CellContext`ag$$ = Part[$CellContext`res$$, 1]; $CellContext`pd = 
           Part[$CellContext`res$$, 2]; AppendTo[
            Part[$CellContext`pop$$, 1], 
            Length[
             Select[$CellContext`ag$$, Part[#, 4] == $CellContext`Algae& ]]]; 
          AppendTo[
            Part[$CellContext`pop$$, 2], 
            Length[
             
             Select[$CellContext`ag$$, 
              Part[#, 4] == $CellContext`Sardine& ]]]; AppendTo[
            Part[$CellContext`pop$$, 3], 
            Length[
             Select[$CellContext`ag$$, Part[#, 4] == $CellContext`Shark& ]]]; 
          AppendTo[
            Part[$CellContext`popDyn$$, 1], 
            Part[$CellContext`pd, 1]]; AppendTo[
            Part[$CellContext`popDyn$$, 2], 
            Part[$CellContext`pd, 2]]; AppendTo[
            Part[$CellContext`popDyn$$, 3], 
            
            Part[$CellContext`pd, 
             3]]]; $CellContext`visualizeEnvironment[$CellContext`ag$$, \
$CellContext`prettyPrint$$, $CellContext`tSize$$], UpdateInterval -> 
        If[$CellContext`moving$$, 0, Infinity]], "Specifications" :> {"", 
        Style[
        "Simulation Settings:", 
         16], {{$CellContext`algaeGrowthRate$$, 0.5, "growth rate"}, 0, 1, 
         ImageSize -> Tiny, ControlPlacement -> 
         1}, {{$CellContext`sardineGrowthRate$$, 0.5, "growth rate"}, 0, 1, 
         ImageSize -> Tiny, ControlPlacement -> 
         2}, {{$CellContext`sharkGrowthRate$$, 0.5, "growth rate"}, 0, 1, 
         ImageSize -> Tiny, ControlPlacement -> 
         3}, {{$CellContext`tSpawnRate$$, 45, "spawn rate"}, 0, 50, 1, 
         ImageSize -> Tiny, ControlPlacement -> 
         4}, {{$CellContext`sardineMobility$$, 0.06, "mobility"}, 0, 0.1, 
         ImageSize -> Tiny, ControlPlacement -> 
         5}, {{$CellContext`sharkMobility$$, 0.1, "mobility"}, 0, 0.1, 
         ImageSize -> Tiny, ControlPlacement -> 
         6}, {{$CellContext`tSpeed$$, 0.1, "speed"}, 0, 0.5, ImageSize -> 
         Tiny, ControlPlacement -> 
         7}, {{$CellContext`sardineEndurance$$, 10, "starvation"}, 1, 20, 1, 
         Appearance -> "Labeled", ImageSize -> Tiny, ControlPlacement -> 
         8}, {{$CellContext`sharkEndurance$$, 10, "starvation"}, 1, 20, 1, 
         Appearance -> "Labeled", ImageSize -> Tiny, ControlPlacement -> 
         9}, {{$CellContext`tSize$$, 1, "size"}, 0, 2.5, ImageSize -> Tiny, 
         ControlPlacement -> 10}, 
        Grid[{{
           Style["ALGAE PROPERTIES", Bold], 
           Style["SARDINE PROPERTIES", Bold], 
           Style["SHARK PROPERTIES", Bold], 
           Style["TRAWLER PROPERTIES", Bold]}, {
           Manipulate`Place[1], 
           Manipulate`Place[2], 
           Manipulate`Place[3], 
           Manipulate`Place[4]}, {" ", 
           Manipulate`Place[5], 
           Manipulate`Place[6], 
           Manipulate`Place[7]}, {" ", 
           Manipulate`Place[8], 
           Manipulate`Place[9], 
           Manipulate`Place[10]}}, Frame -> {{1, 2, 3} -> True, 1 -> True}, 
         Alignment -> Center], " ", 
        Style[
        "TRAWLER TARGET SPECIES", 
         Bold], {{$CellContext`targetAlgae$$, 0.99, "Algae Throwback"}, 0, 1, 
         ImageSize -> Tiny, ControlPlacement -> 
         11}, {{$CellContext`targetSardines$$, 0.01, "Sardine Throwback"}, 0, 
         1, ImageSize -> Tiny, ControlPlacement -> 
         12}, {{$CellContext`targetSharks$$, 0.5, "Shark Throwback"}, 0, 1, 
         ImageSize -> Tiny, ControlPlacement -> 13}, 
        Grid[{{
           Manipulate`Place[11], 
           Manipulate`Place[12], 
           Manipulate`Place[13]}}, Frame -> All], 
        " ", {{$CellContext`ag$$, CompressedData["
1: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
ihzrhHh9WvPdQPL3Ayrxf7z1pWs=
          "]}, ControlType -> 
         None}, {{$CellContext`res$$, {{{-1, -1, 0, 1.}}, {}}}, ControlType -> 
         None}, {{$CellContext`pop$$, {{0}, {0}, {0}}}, ControlType -> 
         None}, {{$CellContext`popDyn$$, {{0}, {0}, {0}}}, ControlType -> 
         None}, {{$CellContext`fname$$, "save.dat"}, ControlType -> None}, 
        " ", {{$CellContext`moving$$, False, 
          Style["RUN SIMULATION", Bold]}, {True, False}, ControlPlacement -> 
         14}, {{$CellContext`prettyPrint$$, False, 
          Style["PRETTY PRINTING", Bold]}, {False, True}, ControlPlacement -> 
         15}, {{$CellContext`smartSharks$$, True, 
          Style["EFFICIENT SHARKS", Bold]}, {False, True}, ControlPlacement -> 
         16}, {{$CellContext`smartSardines$$, True, 
          Style["EFFICIENT SARDINES", Bold]}, {False, True}, ControlPlacement -> 
         17}, 
        Item[
         Grid[{{
            Manipulate`Place[14]}, {
            Manipulate`Place[15]}, {
            Manipulate`Place[16]}, {
            Manipulate`Place[17]}, {
            Button[
            "Reset", $CellContext`moving$$ = 
              False; $CellContext`ag$$ = $CellContext`initialAgents[]; \
$CellContext`res$$ = {{{-1, -1, 0, 1.}}, {}}; $CellContext`pop$$ = {{0}, {
               0}, {0}}; $CellContext`popDyn$$ = {{0}, {0}, {0}}, ImageSize -> 
             Medium]}, {
            Button[
            "Save Sim", $CellContext`filePath = SystemDialogInput["FileSave"]; 
             Export[$CellContext`filePath, 
               Join[{$CellContext`pop$$}, {$CellContext`popDyn$$}], 
               "Package"], ImageSize -> Medium, Method -> "Queued"]}, {
            Button[
            "Step", $CellContext`res$$ = \
$CellContext`updateAgents[$CellContext`ag$$, \
$CellContext`sardineGrowthRate$$, $CellContext`sardineMobility$$, \
$CellContext`sharkGrowthRate$$, $CellContext`sharkMobility$$, \
$CellContext`sharkEndurance$$, $CellContext`sardineEndurance$$, \
$CellContext`algaeGrowthRate$$, $CellContext`tSize$$, $CellContext`tSpeed$$, 
                50 - $CellContext`tSpawnRate$$, $CellContext`smartSharks$$, \
$CellContext`smartSardines$$, $CellContext`targetAlgae$$, \
$CellContext`targetSardines$$, $CellContext`targetSharks$$]; \
$CellContext`ag$$ = Part[$CellContext`res$$, 1]; $CellContext`pd = 
              Part[$CellContext`res$$, 2]; AppendTo[
               Part[$CellContext`pop$$, 1], 
               Length[
                
                Select[$CellContext`ag$$, 
                 Part[#, 4] == $CellContext`Algae& ]]]; AppendTo[
               Part[$CellContext`pop$$, 2], 
               Length[
                
                Select[$CellContext`ag$$, 
                 Part[#, 4] == $CellContext`Sardine& ]]]; AppendTo[
               Part[$CellContext`pop$$, 3], 
               Length[
                
                Select[$CellContext`ag$$, 
                 Part[#, 4] == $CellContext`Shark& ]]]; AppendTo[
               Part[$CellContext`popDyn$$, 1], 
               Part[$CellContext`pd, 1]]; AppendTo[
               Part[$CellContext`popDyn$$, 2], 
               Part[$CellContext`pd, 2]]; AppendTo[
               Part[$CellContext`popDyn$$, 3], 
               Part[$CellContext`pd, 3]], ImageSize -> Medium]}}, Frame -> 
          All], ControlPlacement -> Right], " "}, 
      "Options" :> {
       AutorunSequencing -> {6}, 
        TrackedSymbols :> {$CellContext`moving$$, $CellContext`ag$$}, 
        SynchronousUpdating -> True, ControlPlacement -> Bottom}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{844., {462.859375, 469.140625}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`updateAgents[
         Pattern[$CellContext`agents, 
          Blank[]], 
         Pattern[$CellContext`sardineGrowthRate, 
          Blank[]], 
         Pattern[$CellContext`sardineMobility, 
          Blank[]], 
         Pattern[$CellContext`sharkGrowthRate, 
          Blank[]], 
         Pattern[$CellContext`sharkMobility, 
          Blank[]], 
         Pattern[$CellContext`sharkEndurance, 
          Blank[]], 
         Pattern[$CellContext`sardineEndurance, 
          Blank[]], 
         Pattern[$CellContext`algaeGrowthRate, 
          Blank[]], 
         Pattern[$CellContext`tSize, 
          Blank[]], 
         Pattern[$CellContext`tSpeed, 
          Blank[]], 
         Pattern[$CellContext`tSpawnRate, 
          Blank[]], 
         Pattern[$CellContext`smartSharks, 
          Blank[]], 
         Pattern[$CellContext`smartSardines, 
          Blank[]], 
         Pattern[$CellContext`targetAlgae, 
          Blank[]], 
         Pattern[$CellContext`targetSardines, 
          Blank[]], 
         Pattern[$CellContext`targetSharks, 
          Blank[]]] := Module[{$CellContext`sharkPop = Length[
            
            Select[$CellContext`agents, 
             Part[#, 4] == $CellContext`Shark& ]], $CellContext`algaePop = 
          Length[
            
            Select[$CellContext`agents, 
             Part[#, 4] == $CellContext`Algae& ]], $CellContext`sardinePop = 
          Length[
            
            Select[$CellContext`agents, 
             Part[#, 4] == $CellContext`Sardine& ]], \
$CellContext`nearestSharks = Nearest[
            Append[
             Map[Take[#, 2]& , 
              
              Select[$CellContext`agents, 
               Part[#, 
                 4] == $CellContext`Shark& ]], $CellContext`dummyPoint]], \
$CellContext`nearestSardines = Nearest[
            Append[
             Map[Take[#, 2]& , 
              
              Select[$CellContext`agents, 
               Part[#, 
                 4] == $CellContext`Sardine& ]], $CellContext`dummyPoint]], \
$CellContext`nearestAlgae = Nearest[
            Append[
             Map[Take[#, 2]& , 
              
              Select[$CellContext`agents, 
               Part[#, 
                 4] == $CellContext`Sardine& ]], $CellContext`dummyPoint]], \
$CellContext`nearestTrawler = Nearest[
            Append[
             Map[Take[#, 2]& , 
              
              Select[$CellContext`agents, 
               Part[#, 
                 4] == $CellContext`Trawler& ]], $CellContext`dummyPoint]], \
$CellContext`i, $CellContext`nextLocation, $CellContext`currentLocation, \
$CellContext`ag, $CellContext`survivors, $CellContext`data = {0, 0, 
           0}}, $CellContext`ag = Developer`ToPackedArray[
            Join[
             (Flatten[#, 1]& )[
              
              Table[$CellContext`survivors = {}; $CellContext`currentLocation = 
                Part[$CellContext`agents, $CellContext`i, {1, 
                  2}]; $CellContext`nextLocation = 
                Part[$CellContext`agents, $CellContext`i, {1, 2}] + 
                 If[Part[$CellContext`agents, $CellContext`i, 
                    4] == $CellContext`Sardine, 
                   If[
                    Or[
                    Not[$CellContext`smartSardines], Part[
                    $CellContext`nearestSharks[$CellContext`currentLocation], 
                    1] == $CellContext`dummyPoint, Norm[Part[
                    $CellContext`nearestSharks[$CellContext`currentLocation], 
                    1] - $CellContext`currentLocation] > \
$CellContext`sardineSight], 
                    $CellContext`FromPolar[
                    RandomReal[{0, $CellContext`sardineMobility}], 
                    RandomReal[{0, 1}] 2 Pi], 
                    $CellContext`FromPolar[
                    RandomReal[{0, $CellContext`sardineMobility}], Part[
                    $CellContext`ToPolar[Part[
                    $CellContext`nearestSharks[$CellContext`currentLocation], 
                    1] - $CellContext`currentLocation], 2] + Pi]], 
                   If[
                    Or[
                    Not[$CellContext`smartSharks], Part[
                    $CellContext`nearestSardines[$CellContext`currentLocation]\
, 1] == $CellContext`dummyPoint, Norm[Part[
                    $CellContext`nearestSardines[$CellContext`currentLocation]\
, 1] - $CellContext`currentLocation] > $CellContext`sharkSight], 
                    $CellContext`FromPolar[
                    RandomReal[{0, $CellContext`sharkMobility}], 
                    RandomReal[{0, 1}] 2 Pi], 
                    $CellContext`FromPolar[
                    RandomReal[{0, $CellContext`sharkMobility}], 
                    Part[
                    $CellContext`ToPolar[Part[
                    $CellContext`nearestSardines[$CellContext`currentLocation]\
, 1] - $CellContext`currentLocation], 2]]]]; $CellContext`nextLocation = 
                Clip[$CellContext`nextLocation, {0., 1.}]; Switch[
                 
                 Part[$CellContext`agents, $CellContext`i, 
                  4], $CellContext`Sardine, 
                 If[
                  And[Norm[Part[
                    $CellContext`nearestSharks[$CellContext`nextLocation], 
                    1] - $CellContext`nextLocation] > 0.02, 
                   Part[$CellContext`agents, $CellContext`i, 
                    3] < $CellContext`sardineEndurance], 
                  If[
                   Not[
                    And[RandomReal[] > $CellContext`targetSardines, 
                    $CellContext`trawlerCollision[$CellContext`nextLocation, 
                    Part[
                    $CellContext`nearestTrawler[$CellContext`nextLocation], 
                    1], $CellContext`tSize]]], $CellContext`survivors = 
                    If[Norm[Part[
                    $CellContext`nearestAlgae[$CellContext`nextLocation], 
                    1] - $CellContext`nextLocation] > 0.02, {
                    
                    Join[$CellContext`nextLocation, {
                    Part[$CellContext`agents, $CellContext`i, 3] + 
                    1., $CellContext`Sardine}]}, {
                    
                    Join[$CellContext`nextLocation, {
                    0., $CellContext`Sardine}]}]; 
                   If[RandomReal[] < $CellContext`sardineGrowthRate (
                    1. - $CellContext`sardinePop/$CellContext`maxSardines), 
                    AppendTo[$CellContext`survivors, 
                    
                    Join[$CellContext`nextLocation, {
                    0., $CellContext`Sardine}]]; 
                    Part[$CellContext`data, 1] = 
                    Part[$CellContext`data, 1] + 1], 
                   Part[$CellContext`data, 2] = 
                   Part[$CellContext`data, 2] + 1], 
                  Part[$CellContext`data, 3] = 
                  Part[$CellContext`data, 3] + 1], $CellContext`Shark, 
                 If[
                  Not[
                   And[RandomReal[] > $CellContext`targetSharks, 
                    $CellContext`trawlerCollision[$CellContext`nextLocation, 
                    Part[
                    $CellContext`nearestTrawler[$CellContext`nextLocation], 
                    1], $CellContext`tSize]]], 
                  If[Norm[Part[
                    $CellContext`nearestSardines[$CellContext`nextLocation], 
                    1] - $CellContext`nextLocation] > 0.02, 
                   If[
                   Part[$CellContext`agents, $CellContext`i, 
                    3] < $CellContext`sharkEndurance, $CellContext`survivors = {
                    
                    Join[$CellContext`nextLocation, {
                    Part[$CellContext`agents, $CellContext`i, 3] + 
                    1., $CellContext`Shark}]}; Null], $CellContext`survivors = {
                    
                    Join[$CellContext`nextLocation, {
                    0., $CellContext`Shark}]}; 
                   If[RandomReal[] < $CellContext`sharkGrowthRate (
                    1. - $CellContext`sharkPop/$CellContext`maxSharks), 
                    AppendTo[$CellContext`survivors, 
                    
                    Join[$CellContext`nextLocation, {
                    0., $CellContext`Shark}]]]]], $CellContext`Algae, If[
                   And[Norm[Part[
                    $CellContext`nearestSardines[$CellContext`currentLocation]\
, 1] - $CellContext`currentLocation] > 0.02, 
                    Not[
                    And[RandomReal[] > $CellContext`targetAlgae, 
                    $CellContext`trawlerCollision[$CellContext`\
currentLocation, 
                    Part[
                    $CellContext`nearestTrawler[$CellContext`currentLocation],
                     1], $CellContext`tSize]]], 
                    Part[$CellContext`agents, $CellContext`i, 
                    3] < $CellContext`algaeEndurance], $CellContext`survivors = {
                    Join[
                    Part[$CellContext`agents, $CellContext`i, {1, 2}], {
                    Part[$CellContext`agents, $CellContext`i, 3] + 
                    1, $CellContext`Algae}]}]; 
                 If[RandomReal[] < $CellContext`algaeGrowthRate (
                    1. - $CellContext`algaePop/$CellContext`maxAlgae), 
                   AppendTo[$CellContext`survivors, 
                    Join[
                    RandomReal[{0, 1}, 2], {
                    0., $CellContext`Algae}]]], $CellContext`Trawler, \
$CellContext`survivors = $CellContext`updateTrawler[
                   
                   Part[$CellContext`agents, $CellContext`i], \
$CellContext`tSpeed]]; $CellContext`survivors, {$CellContext`i, 
                Length[$CellContext`agents]}]], 
             If[RandomInteger[{0, $CellContext`tSpawnRate}] == 1, {
               $CellContext`newTrawler[]}, {}]]]; 
         Return[{$CellContext`ag, $CellContext`data}]], $CellContext`Shark = 
       1., $CellContext`Algae = 3., $CellContext`Sardine = 
       2., $CellContext`dummyPoint = {-1., -1.}, $CellContext`Trawler = 
       4., $CellContext`data["tSpawnRate"] = 5, $CellContext`sardineSight = 
       0.15, $CellContext`FromPolar[
         Pattern[$CellContext`r, 
          Blank[]], 
         Pattern[$CellContext`theta, 
          Blank[]]] := {$CellContext`r 
         Cos[$CellContext`theta], $CellContext`r 
         Sin[$CellContext`theta]}, $CellContext`ToPolar[
         Pattern[$CellContext`xy, 
          Blank[]]] := If[
         And[Part[$CellContext`xy, 1] == 0., Part[$CellContext`xy, 2] == 0.], 
         ToPolarCoordinates[{
          Part[$CellContext`xy, 1] + 0.001, Part[$CellContext`xy, 2] + 
           0.001}], 
         ToPolarCoordinates[$CellContext`xy]], $CellContext`sharkSight = 
       0.25, $CellContext`trawlerCollision[
         Pattern[$CellContext`point, 
          Blank[]], 
         Pattern[$CellContext`trawler, 
          Blank[]], 
         Pattern[$CellContext`tSize, 
          Blank[]]] := 
       Norm[$CellContext`point - Part[$CellContext`trawler, {1, 2}]] < 
        0.1 $CellContext`tSize, $CellContext`maxSardines = 
       500., $CellContext`maxSharks = 500., $CellContext`algaeEndurance = 
       20, $CellContext`maxAlgae = 1500., $CellContext`updateTrawler[
         Pattern[$CellContext`trawler, 
          Blank[]], 
         Pattern[$CellContext`tSpeed, 
          Blank[]]] := 
       If[Norm[Part[$CellContext`trawler, {1, 2}] - {0.5, 0.5}] < 1, {
          Join[Part[$CellContext`trawler, {1, 2}] + {$CellContext`tSpeed Cos[
               Part[$CellContext`trawler, 3]], $CellContext`tSpeed Sin[
               Part[$CellContext`trawler, 3]]}, {
            
            Part[$CellContext`trawler, 
             3], $CellContext`Trawler}]}, {}], $CellContext`newTrawler[] := 
       Module[{$CellContext`origin, $CellContext`terminus}, 
         Switch[
          RandomInteger[{1, 4}], 1, $CellContext`origin = {0., 
             RandomReal[{0., 1.}]}; $CellContext`terminus = {1., 
             RandomReal[{0., 1.}]}; Join[$CellContext`origin, {
             Part[
              $CellContext`ToPolar[$CellContext`terminus - \
$CellContext`origin], 2], $CellContext`Trawler}], 
          2, $CellContext`origin = {1., 
             RandomReal[{0., 1.}]}; $CellContext`terminus = {0., 
             RandomReal[{0., 1.}]}; Join[$CellContext`origin, {
             Part[
              $CellContext`ToPolar[$CellContext`terminus - \
$CellContext`origin], 2], $CellContext`Trawler}], 3, $CellContext`origin = {
             RandomReal[{0., 1.}], 0.}; $CellContext`terminus = {
             RandomReal[{0., 1.}], 1.}; Join[$CellContext`origin, {
             Part[
              $CellContext`ToPolar[$CellContext`terminus - \
$CellContext`origin], 2], $CellContext`Trawler}], 4, $CellContext`origin = {
             RandomReal[{0., 1.}], 1.}; $CellContext`terminus = {
             RandomReal[{0., 1.}], 0.}; Join[$CellContext`origin, {
             Part[
              $CellContext`ToPolar[$CellContext`terminus - \
$CellContext`origin], 
              2], $CellContext`Trawler}]]], $CellContext`visualizeEnvironment[
         Pattern[$CellContext`agents, 
          Blank[]], 
         Pattern[$CellContext`prettyPrint, 
          Blank[]], 
         Pattern[$CellContext`tSize, 
          Blank[]]] := Module[{$CellContext`sharks = Map[Take[#, 2]& , 
            
            Select[$CellContext`agents, 
             Part[#, 4] == $CellContext`Shark& ]], $CellContext`sardines = 
          Map[Take[#, 2]& , 
            
            Select[$CellContext`agents, 
             Part[#, 4] == $CellContext`Sardine& ]], $CellContext`algae = 
          Map[Take[#, 2]& , 
            
            Select[$CellContext`agents, 
             Part[#, 4] == $CellContext`Algae& ]], $CellContext`trawlers = 
          Map[Take[#, 3]& , 
            
            Select[$CellContext`agents, 
             Part[#, 4] == $CellContext`Trawler& ]], \
$CellContext`duddTrawlers = Map[Take[#, 2]& , 
            
            Select[$CellContext`agents, 
             Part[#, 4] == $CellContext`Trawler& ]], $CellContext`dummyList = \
{$CellContext`dummyPoint}}, 
         Show[
          Graphics[{
            AbsolutePointSize[5], 
            RGBColor[0.11, 0.6, 0.11], 
            Point[
             
             If[$CellContext`algae == {}, $CellContext`dummyList, \
$CellContext`algae]]}], 
          If[$CellContext`prettyPrint, 
           Graphics[
            Map[Style[
              Text["\|01f420", #], 
              RGBColor[0., 0.25, 0.5], Bold, FontFamily -> "Arial"]& , 
             
             If[$CellContext`sardines == {}, $CellContext`dummyList, \
$CellContext`sardines]]], 
           Graphics[{
             AbsolutePointSize[10], 
             RGBColor[0., 0.25, 0.5], 
             Point[
              
              If[$CellContext`sardines == {}, $CellContext`dummyList, \
$CellContext`sardines]]}]], 
          If[$CellContext`prettyPrint, 
           Graphics[
            Map[Triangle[{#, # + {0.015, 0}, # + {0.02, 0.02}}]& , 
             
             If[$CellContext`sharks == {}, $CellContext`dummyList, \
$CellContext`sharks]]], 
           Graphics[{
             AbsolutePointSize[15], 
             RGBColor[0., 0.1, 0.3], 
             Point[
              
              If[$CellContext`sharks == {}, $CellContext`dummyList, \
$CellContext`sharks]]}]], 
          Graphics[
           Map[{
             Opacity[0.2], Pink, 
             EdgeForm[Dashed], 
             $CellContext`getTrawlerRect[
              Part[#, {1, 2}], $CellContext`tSize]}& , 
            
            If[$CellContext`trawlers == {}, {{-1, -1, 
             0}}, $CellContext`trawlers]]], ImageSize -> {600, 600}, 
          AspectRatio -> Automatic, Frame -> False, Axes -> False, 
          PlotRange -> {{0., 1.}, {0., 1.}}]], $CellContext`getTrawlerRect[
         Pattern[$CellContext`centroid, 
          Blank[]], 
         Pattern[$CellContext`tSize, 
          Blank[]]] := 
       Rectangle[{
         Part[$CellContext`centroid, 1] - 0.1 $CellContext`tSize, 
          Part[$CellContext`centroid, 2] - 0.1 $CellContext`tSize}, {
         Part[$CellContext`centroid, 1] + 0.1 $CellContext`tSize, 
          Part[$CellContext`centroid, 2] + 
          0.1 $CellContext`tSize}], $CellContext`initialAgents[] := Join[
         Table[
          Join[
           RandomReal[{0, 1}, 2], {0., 
            If[
            RandomReal[] < 0.1, $CellContext`Shark, $CellContext`Sardine]}], {
          100}], 
         Table[
          Join[
           RandomReal[{0, 1}, 2], {
           0., $CellContext`Algae}], {$CellContext`initialAlgae}]], \
$CellContext`initialAlgae = 100.}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.829307400606031*^9, 3.829307686701333*^9, {3.829307842971917*^9, 
   3.82930786131178*^9}, 3.829307906456004*^9, {3.8293079465204353`*^9, 
   3.829307972150166*^9}, 3.829308605010482*^9, {3.82930866519422*^9, 
   3.829308671221287*^9}, {3.829308793889924*^9, 3.829308861883696*^9}, {
   3.829309026297986*^9, 3.829309061993725*^9}, {3.8293100124018784`*^9, 
   3.829310020722952*^9}, {3.82931027468139*^9, 3.829310305678133*^9}, {
   3.829310448786311*^9, 3.82931047594914*^9}, 3.829310594865281*^9, {
   3.829310820882059*^9, 3.829310832191496*^9}, {3.829310891094453*^9, 
   3.8293109026686153`*^9}, 3.829312798549643*^9, 3.8293175591058817`*^9, {
   3.829317598042164*^9, 3.829317611390435*^9}, {3.829328720169941*^9, 
   3.82932876770205*^9}, 3.8293290448803*^9, {3.8293290893461437`*^9, 
   3.829329139686037*^9}, {3.829329271210661*^9, 3.829329286456194*^9}, {
   3.829329371382819*^9, 3.829329404343329*^9}, {3.8293299694313183`*^9, 
   3.829330032452763*^9}, 3.829330067875506*^9, {3.8293301226573267`*^9, 
   3.82933014794806*^9}, {3.829330411502842*^9, 3.829330430042055*^9}, {
   3.829330548383559*^9, 3.829330595406399*^9}, {3.829330632013196*^9, 
   3.8293306634982347`*^9}, {3.829330756325082*^9, 3.829330761417553*^9}, {
   3.829330821388441*^9, 3.829330868422812*^9}, 3.82933092982255*^9, {
   3.829331079258325*^9, 3.829331105909996*^9}, {3.829331145547319*^9, 
   3.8293312722939367`*^9}, {3.8293313217359133`*^9, 3.829331461018363*^9}, 
   3.8293314924271183`*^9, 3.829331612059744*^9, 3.8293316547369947`*^9, {
   3.829332070040941*^9, 3.8293320779869757`*^9}, 3.829401961838357*^9, {
   3.829410519660407*^9, 3.829410532603529*^9}, 3.8294106074712257`*^9, {
   3.829411862652575*^9, 3.829411873311654*^9}, {3.829411916957944*^9, 
   3.829411919559113*^9}, {3.829411955698786*^9, 3.8294119585981703`*^9}, {
   3.829412179721344*^9, 3.8294121811303043`*^9}, {3.8294122352132387`*^9, 
   3.8294122535047073`*^9}, 3.829412781869238*^9, {3.829412856284801*^9, 
   3.8294129028556957`*^9}, 3.829413800001203*^9, 3.8294143925590754`*^9, 
   3.8294219453871603`*^9, 3.82942200193787*^9, {3.829463817047243*^9, 
   3.8294638403812113`*^9}, 3.829596527559993*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"59074502-ce57-4d66-a15f-7719b2495109"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArcTan", "[", 
  RowBox[{"0.001", ",", "0.001"}], "]"}]], "Input",
 CellChangeTimes->{{3.8294122902925863`*^9, 3.829412317883153*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"4aa8cdd1-7b86-4e41-9b2c-4e48f06ed98e"],

Cell[BoxData["0.7853981633974483`"], "Output",
 CellChangeTimes->{{3.829412288290587*^9, 3.8294123182919893`*^9}, 
   3.829412856308909*^9, 3.829413800222739*^9, 3.829414392789967*^9, 
   3.8294219457385406`*^9, 3.829422002174426*^9, 3.8295965277577868`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"13a8e417-f446-4aa3-a578-5e6025f0a0ca"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["DATA ANALYSIS & PLOTTING", "Section",
 CellChangeTimes->{{3.8294107582815943`*^9, 
  3.829410764669095*^9}},ExpressionUUID->"6db92528-9b70-4ce0-859d-\
2a79742d1385"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
    RowBox[{"plots", ",", "\[IndentingNewLine]", 
     RowBox[{"Grid", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\< \>\"", " ", "\[IndentingNewLine]", ",", 
           RowBox[{"Button", "[", 
            RowBox[{"\"\<Load Data\>\"", ",", 
             RowBox[{
              RowBox[{"plotFile", "=", 
               RowBox[{"SystemDialogInput", "[", "\"\<FileOpen\>\"", "]"}]}], 
              ";", 
              RowBox[{"res", " ", "=", "  ", 
               RowBox[{"Import", "[", 
                RowBox[{"plotFile", ",", " ", "\"\<Package\>\""}], "]"}]}], 
              ";", " ", 
              RowBox[{"pop", "=", 
               RowBox[{"res", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ";", " ", 
              RowBox[{"popDyn", " ", "=", " ", 
               RowBox[{"res", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ";", "  ", 
              RowBox[{"plots", " ", "=", " ", 
               RowBox[{"constructIndividualPlots", "[", "pop", "]"}]}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
             RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}], 
           "\[IndentingNewLine]", ",", "\"\< \>\""}], "}"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"\"\< \>\"", "\[IndentingNewLine]", ",", 
           RowBox[{"Control", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "avgNo", ",", "10", ",", "\"\<Moving average of:\>\""}], "}"}],
               ",", "1", ",", "300", ",", "1", ",", 
              RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
              RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "}"}], "]"}], 
           "\[IndentingNewLine]", ",", "\"\< \>\""}], "}"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"\"\< \>\"", "\[IndentingNewLine]", ",", 
           RowBox[{"Button", "[", 
            RowBox[{"\"\<Pop Size Individually\>\"", ",", 
             RowBox[{"plots", " ", "=", " ", 
              RowBox[{
              "constructIndividualPopulationPlots", "[", "pop", "]"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
             RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}], 
           "\[IndentingNewLine]", ",", "\"\< \>\""}], "}"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"\"\< \>\"", "\[IndentingNewLine]", ",", 
           RowBox[{"Button", "[", 
            RowBox[{"\"\<Pop Avg Individual\>\"", ",", " ", 
             RowBox[{
              RowBox[{"algae", " ", "=", " ", 
               RowBox[{"MovingAverage", "[", 
                RowBox[{
                 RowBox[{"pop", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", " ", "avgNo"}], 
                "]"}]}], ";", " ", 
              RowBox[{"sardines", " ", "=", " ", 
               RowBox[{"MovingAverage", "[", 
                RowBox[{
                 RowBox[{"pop", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", " ", "avgNo"}], 
                "]"}]}], ";", " ", 
              RowBox[{"sharks", " ", "=", " ", 
               RowBox[{"MovingAverage", "[", 
                RowBox[{
                 RowBox[{"pop", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], ",", " ", "avgNo"}], 
                "]"}]}], ";", 
              RowBox[{"plots", " ", "=", " ", 
               RowBox[{"constructIndividualPopulationPlots", "[", 
                RowBox[{"{", 
                 RowBox[{"algae", ",", " ", "sardines", ",", " ", "sharks"}], 
                 "}"}], "]"}]}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
             RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}], 
           "\[IndentingNewLine]", ",", "\"\< \>\""}], "}"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"\"\< \>\"", "\[IndentingNewLine]", ",", 
           RowBox[{"Button", "[", 
            RowBox[{"\"\<Pop size Composite\>\"", ",", 
             RowBox[{"plots", " ", "=", " ", 
              RowBox[{"constructCompositePopulationPlot", "[", "pop", "]"}]}],
              ",", 
             RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
             RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}], 
           "\[IndentingNewLine]", ",", "\"\< \>\""}], "}"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"\"\< \>\"", "\[IndentingNewLine]", ",", 
           RowBox[{"Button", "[", 
            RowBox[{"\"\<Pop Avg Composite\>\"", ",", " ", 
             RowBox[{
              RowBox[{"algae", " ", "=", " ", 
               RowBox[{"MovingAverage", "[", 
                RowBox[{
                 RowBox[{"pop", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", " ", "avgNo"}], 
                "]"}]}], ";", " ", 
              RowBox[{"sardines", " ", "=", " ", 
               RowBox[{"MovingAverage", "[", 
                RowBox[{
                 RowBox[{"pop", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", " ", "avgNo"}], 
                "]"}]}], ";", " ", 
              RowBox[{"sharks", " ", "=", " ", 
               RowBox[{"MovingAverage", "[", 
                RowBox[{
                 RowBox[{"pop", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], ",", " ", "avgNo"}], 
                "]"}]}], ";", 
              RowBox[{"plots", " ", "=", " ", 
               RowBox[{"constructCompositePopulationPlot", "[", 
                RowBox[{"{", 
                 RowBox[{"algae", ",", " ", "sardines", ",", " ", "sharks"}], 
                 "}"}], "]"}]}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
             RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}], 
           "\[IndentingNewLine]", ",", "\"\< \>\""}], "}"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"\"\< \>\"", "\[IndentingNewLine]", ",", 
           RowBox[{"Button", "[", 
            RowBox[{"\"\<Deaths Individually\>\"", ",", 
             RowBox[{"plots", " ", "=", " ", 
              RowBox[{"constructIndividualDeathPlots", "[", "popDyn", "]"}]}],
              ",", 
             RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
             RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}], 
           "\[IndentingNewLine]", ",", "\"\< \>\""}], "}"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"\"\< \>\"", "\[IndentingNewLine]", ",", 
           RowBox[{"Button", "[", 
            RowBox[{"\"\<Deaths Composite\>\"", ",", 
             RowBox[{"plots", " ", "=", " ", 
              RowBox[{"constructCompositeDeathPlot", "[", "popDyn", "]"}]}], 
             ",", 
             RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
             RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}], 
           "\[IndentingNewLine]", ",", "\"\< \>\""}], "}"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"\"\< \>\"", "\[IndentingNewLine]", ",", 
           RowBox[{"Button", "[", 
            RowBox[{"\"\<Death Avg Composite\>\"", ",", " ", 
             RowBox[{
              RowBox[{"births", " ", "=", " ", 
               RowBox[{"MovingAverage", "[", 
                RowBox[{
                 RowBox[{"popDyn", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", " ", "avgNo"}], 
                "]"}]}], ";", " ", 
              RowBox[{"caught", " ", "=", " ", 
               RowBox[{"MovingAverage", "[", 
                RowBox[{
                 RowBox[{"popDyn", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", " ", "avgNo"}], 
                "]"}]}], ";", " ", 
              RowBox[{"deaths", " ", "=", " ", 
               RowBox[{"MovingAverage", "[", 
                RowBox[{
                 RowBox[{"popDyn", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], ",", " ", "avgNo"}], 
                "]"}]}], ";", 
              RowBox[{"plots", " ", "=", " ", 
               RowBox[{"constructCompositeDeathPlot", "[", 
                RowBox[{"{", 
                 RowBox[{"births", ",", " ", "caught", ",", " ", "deaths"}], 
                 "}"}], "]"}]}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
             RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}], 
           "\[IndentingNewLine]", ",", "\"\< \>\""}], "}"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"\"\< \>\"", "\[IndentingNewLine]", ",", 
           RowBox[{"Button", "[", 
            RowBox[{"\"\<Save Figure\>\"", ",", 
             RowBox[{
              RowBox[{"saveFile", "=", 
               RowBox[{"SystemDialogInput", "[", "\"\<FileSave\>\"", "]"}]}], 
              ";", " ", 
              RowBox[{"Export", "[", 
               RowBox[{
               "saveFile", ",", " ", "plots", ",", " ", "\"\<SVG\>\""}], 
               "]"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
             RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}], " ", 
           "\[IndentingNewLine]", ",", "\"\< \>\""}], "}"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"\"\< \>\"", "\[IndentingNewLine]", ",", 
           RowBox[{"Button", "[", 
            RowBox[{"\"\<Death Avg Composite\>\"", ",", " ", 
             RowBox[{
              RowBox[{"births", " ", "=", " ", 
               RowBox[{"MovingAverage", "[", 
                RowBox[{
                 RowBox[{"popDyn", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", " ", "avgNo"}], 
                "]"}]}], ";", " ", 
              RowBox[{"caught", " ", "=", " ", 
               RowBox[{"MovingAverage", "[", 
                RowBox[{
                 RowBox[{"popDyn", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", " ", "avgNo"}], 
                "]"}]}], ";", " ", 
              RowBox[{"deaths", " ", "=", " ", 
               RowBox[{"MovingAverage", "[", 
                RowBox[{
                 RowBox[{"popDyn", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], ",", " ", "avgNo"}], 
                "]"}]}], ";", 
              RowBox[{"plots", " ", "=", " ", 
               RowBox[{"constructIndividualDeathPlots", "[", 
                RowBox[{"{", 
                 RowBox[{"births", ",", " ", "caught", ",", " ", "deaths"}], 
                 "}"}], "]"}]}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
             RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}], 
           "\[IndentingNewLine]", ",", "\"\< \>\""}], "}"}]}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], ",", " ", 
       RowBox[{"Frame", "\[Rule]", " ", "All"}]}], "]"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"ControlPlacement", "\[Rule]", "Right"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{
  3.828885415777834*^9, {3.828897092493141*^9, 3.828897111688939*^9}, {
   3.828898100571734*^9, 3.828898257134616*^9}, {3.82890557111123*^9, 
   3.8289055927024384`*^9}, {3.828905678357201*^9, 3.828905678833232*^9}, {
   3.828905744596957*^9, 3.828905759067832*^9}, {3.828905800761067*^9, 
   3.8289058121784773`*^9}, {3.82890591751865*^9, 3.8289060925425034`*^9}, {
   3.828906141823489*^9, 3.8289061753317823`*^9}, {3.828906434906389*^9, 
   3.828906874942645*^9}, {3.828907093633349*^9, 3.828907147917121*^9}, 
   3.828908099415847*^9, {3.82894021914186*^9, 3.828940238055183*^9}, {
   3.8289404649428997`*^9, 3.8289405132612143`*^9}, 3.828940594058544*^9, {
   3.8289406456952553`*^9, 3.828940648514065*^9}, {3.829308617953952*^9, 
   3.829308633468539*^9}, {3.829308706387372*^9, 3.8293087137563343`*^9}, 
   3.8293090219276047`*^9, {3.829309184246601*^9, 3.8293091869168577`*^9}, {
   3.829309332917315*^9, 3.829309357948431*^9}, {3.829309434657022*^9, 
   3.829309543514763*^9}, {3.829309592704523*^9, 3.8293096124549522`*^9}, {
   3.829309658564536*^9, 3.829309660375867*^9}, {3.829309724831285*^9, 
   3.829309739831437*^9}, 3.829309777598288*^9, {3.829331822606578*^9, 
   3.829331842752242*^9}, {3.8294020923323917`*^9, 3.8294022530330544`*^9}, {
   3.829402322312896*^9, 3.829402381708096*^9}, {3.829402426765129*^9, 
   3.829402496498768*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"21b9d45d-84a6-40fb-8cde-5a5766de8c1d"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`avgNo$$ = 10, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`avgNo$$], 10, "Moving average of:"}, 1, 300, 1}, {
      Hold[
       Grid[{{" ", 
          Button[
          "Load Data", $CellContext`plotFile = 
            SystemDialogInput["FileOpen"]; $CellContext`res = 
            Import[$CellContext`plotFile, "Package"]; $CellContext`pop = 
            Part[$CellContext`res, 1]; $CellContext`popDyn = 
            Part[$CellContext`res, 
              2]; $CellContext`plots = \
$CellContext`constructIndividualPlots[$CellContext`pop], ImageSize -> Large, 
           Method -> "Queued"], " "}, {" ", 
          Manipulate`Place[1], " "}, {" ", 
          Button[
          "Pop Size Individually", $CellContext`plots = \
$CellContext`constructIndividualPopulationPlots[$CellContext`pop], ImageSize -> 
           Large, Method -> "Queued"], " "}, {" ", 
          Button["Pop Avg Individual", $CellContext`algae = MovingAverage[
              
              Part[$CellContext`pop, 
               1], $CellContext`avgNo$$]; $CellContext`sardines = 
            MovingAverage[
              
              Part[$CellContext`pop, 
               2], $CellContext`avgNo$$]; $CellContext`sharks = MovingAverage[
              
              Part[$CellContext`pop, 
               3], $CellContext`avgNo$$]; $CellContext`plots = \
$CellContext`constructIndividualPopulationPlots[{$CellContext`algae, \
$CellContext`sardines, $CellContext`sharks}], ImageSize -> Large, Method -> 
           "Queued"], " "}, {" ", 
          Button[
          "Pop size Composite", $CellContext`plots = \
$CellContext`constructCompositePopulationPlot[$CellContext`pop], ImageSize -> 
           Large, Method -> "Queued"], " "}, {" ", 
          Button["Pop Avg Composite", $CellContext`algae = MovingAverage[
              
              Part[$CellContext`pop, 
               1], $CellContext`avgNo$$]; $CellContext`sardines = 
            MovingAverage[
              
              Part[$CellContext`pop, 
               2], $CellContext`avgNo$$]; $CellContext`sharks = MovingAverage[
              
              Part[$CellContext`pop, 
               3], $CellContext`avgNo$$]; $CellContext`plots = \
$CellContext`constructCompositePopulationPlot[{$CellContext`algae, \
$CellContext`sardines, $CellContext`sharks}], ImageSize -> Large, Method -> 
           "Queued"], " "}, {" ", 
          Button[
          "Deaths Individually", $CellContext`plots = \
$CellContext`constructIndividualDeathPlots[$CellContext`popDyn], ImageSize -> 
           Large, Method -> "Queued"], " "}, {" ", 
          Button[
          "Deaths Composite", $CellContext`plots = \
$CellContext`constructCompositeDeathPlot[$CellContext`popDyn], ImageSize -> 
           Large, Method -> "Queued"], " "}, {" ", 
          Button["Death Avg Composite", $CellContext`births = MovingAverage[
              
              Part[$CellContext`popDyn, 
               1], $CellContext`avgNo$$]; $CellContext`caught = MovingAverage[
              
              Part[$CellContext`popDyn, 
               2], $CellContext`avgNo$$]; $CellContext`deaths = MovingAverage[
              
              Part[$CellContext`popDyn, 
               3], $CellContext`avgNo$$]; $CellContext`plots = \
$CellContext`constructCompositeDeathPlot[{$CellContext`births, \
$CellContext`caught, $CellContext`deaths}], ImageSize -> Large, Method -> 
           "Queued"], " "}, {" ", 
          Button[
          "Save Figure", $CellContext`saveFile = 
            SystemDialogInput["FileSave"]; 
           Export[$CellContext`saveFile, $CellContext`plots, "SVG"], 
           ImageSize -> Large, Method -> "Queued"], " "}, {" ", 
          Button["Death Avg Composite", $CellContext`births = MovingAverage[
              
              Part[$CellContext`popDyn, 
               1], $CellContext`avgNo$$]; $CellContext`caught = MovingAverage[
              
              Part[$CellContext`popDyn, 
               2], $CellContext`avgNo$$]; $CellContext`deaths = MovingAverage[
              
              Part[$CellContext`popDyn, 
               3], $CellContext`avgNo$$]; $CellContext`plots = \
$CellContext`constructIndividualDeathPlots[{$CellContext`births, \
$CellContext`caught, $CellContext`deaths}], ImageSize -> Large, Method -> 
           "Queued"], " "}}, Frame -> All]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    42.71484375, {3., 10.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, "Variables" :> {$CellContext`avgNo$$ = 10}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> $CellContext`plots, 
      "Specifications" :> {{{$CellContext`avgNo$$, 10, "Moving average of:"}, 
         1, 300, 1, Appearance -> "Labeled", ImageSize -> Tiny, 
         ControlPlacement -> 1}, 
        Grid[{{" ", 
           Button[
           "Load Data", $CellContext`plotFile = 
             SystemDialogInput["FileOpen"]; $CellContext`res = 
             Import[$CellContext`plotFile, "Package"]; $CellContext`pop = 
             Part[$CellContext`res, 1]; $CellContext`popDyn = 
             Part[$CellContext`res, 
               2]; $CellContext`plots = \
$CellContext`constructIndividualPlots[$CellContext`pop], ImageSize -> Large, 
            Method -> "Queued"], " "}, {" ", 
           Manipulate`Place[1], " "}, {" ", 
           Button[
           "Pop Size Individually", $CellContext`plots = \
$CellContext`constructIndividualPopulationPlots[$CellContext`pop], ImageSize -> 
            Large, Method -> "Queued"], " "}, {" ", 
           Button["Pop Avg Individual", $CellContext`algae = MovingAverage[
               
               Part[$CellContext`pop, 
                1], $CellContext`avgNo$$]; $CellContext`sardines = 
             MovingAverage[
               
               Part[$CellContext`pop, 
                2], $CellContext`avgNo$$]; $CellContext`sharks = MovingAverage[
               
               Part[$CellContext`pop, 
                3], $CellContext`avgNo$$]; $CellContext`plots = \
$CellContext`constructIndividualPopulationPlots[{$CellContext`algae, \
$CellContext`sardines, $CellContext`sharks}], ImageSize -> Large, Method -> 
            "Queued"], " "}, {" ", 
           Button[
           "Pop size Composite", $CellContext`plots = \
$CellContext`constructCompositePopulationPlot[$CellContext`pop], ImageSize -> 
            Large, Method -> "Queued"], " "}, {" ", 
           Button["Pop Avg Composite", $CellContext`algae = MovingAverage[
               
               Part[$CellContext`pop, 
                1], $CellContext`avgNo$$]; $CellContext`sardines = 
             MovingAverage[
               
               Part[$CellContext`pop, 
                2], $CellContext`avgNo$$]; $CellContext`sharks = MovingAverage[
               
               Part[$CellContext`pop, 
                3], $CellContext`avgNo$$]; $CellContext`plots = \
$CellContext`constructCompositePopulationPlot[{$CellContext`algae, \
$CellContext`sardines, $CellContext`sharks}], ImageSize -> Large, Method -> 
            "Queued"], " "}, {" ", 
           Button[
           "Deaths Individually", $CellContext`plots = \
$CellContext`constructIndividualDeathPlots[$CellContext`popDyn], ImageSize -> 
            Large, Method -> "Queued"], " "}, {" ", 
           Button[
           "Deaths Composite", $CellContext`plots = \
$CellContext`constructCompositeDeathPlot[$CellContext`popDyn], ImageSize -> 
            Large, Method -> "Queued"], " "}, {" ", 
           Button["Death Avg Composite", $CellContext`births = MovingAverage[
               
               Part[$CellContext`popDyn, 
                1], $CellContext`avgNo$$]; $CellContext`caught = MovingAverage[
               
               Part[$CellContext`popDyn, 
                2], $CellContext`avgNo$$]; $CellContext`deaths = MovingAverage[
               
               Part[$CellContext`popDyn, 
                3], $CellContext`avgNo$$]; $CellContext`plots = \
$CellContext`constructCompositeDeathPlot[{$CellContext`births, \
$CellContext`caught, $CellContext`deaths}], ImageSize -> Large, Method -> 
            "Queued"], " "}, {" ", 
           Button[
           "Save Figure", $CellContext`saveFile = 
             SystemDialogInput["FileSave"]; 
            Export[$CellContext`saveFile, $CellContext`plots, "SVG"], 
            ImageSize -> Large, Method -> "Queued"], " "}, {" ", 
           Button["Death Avg Composite", $CellContext`births = MovingAverage[
               
               Part[$CellContext`popDyn, 
                1], $CellContext`avgNo$$]; $CellContext`caught = MovingAverage[
               
               Part[$CellContext`popDyn, 
                2], $CellContext`avgNo$$]; $CellContext`deaths = MovingAverage[
               
               Part[$CellContext`popDyn, 
                3], $CellContext`avgNo$$]; $CellContext`plots = \
$CellContext`constructIndividualDeathPlots[{$CellContext`births, \
$CellContext`caught, $CellContext`deaths}], ImageSize -> Large, Method -> 
            "Queued"], " "}}, Frame -> All]}, 
      "Options" :> {ControlPlacement -> Right}, "DefaultOptions" :> {}],
     ImageSizeCache->{343., {174.859375, 181.140625}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.829309600143753*^9, 3.829309613128172*^9}, {
   3.829309726854227*^9, 3.829309740656742*^9}, 3.829309778718206*^9, 
   3.8293103563663816`*^9, {3.829310579662183*^9, 3.829310595274922*^9}, {
   3.829310634996726*^9, 3.829310638695887*^9}, 3.829311164708034*^9, 
   3.8293127988096533`*^9, {3.8293129123051987`*^9, 3.829312940088526*^9}, {
   3.829317549010374*^9, 3.8293175593467607`*^9}, 3.829329110999024*^9, 
   3.8293318442394114`*^9, 3.829401962122512*^9, 3.829402125996187*^9, {
   3.8294022233200483`*^9, 3.829402253861381*^9}, {3.8294023452620707`*^9, 
   3.829402367802861*^9}, {3.829402476042858*^9, 3.829402497201208*^9}, 
   3.829412235619488*^9, 3.829412856341765*^9, 3.8294138002506113`*^9, 
   3.829414392818952*^9, 3.829421945776269*^9, 3.829422002211156*^9, 
   3.8295965277901077`*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"5aeea5b0-b4af-4110-b4d7-52dc37e3c1c1"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.829331724629589*^9, 3.829331725992494*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"980d8f2b-3861-44f9-98ef-44df88dd5542"]
}, Open  ]],

Cell[CellGroupData[{

Cell["TESTING HARNESS", "Section",
 CellChangeTimes->{{3.8294098712613497`*^9, 
  3.829409873050158*^9}},ExpressionUUID->"c325450c-cde8-4f9d-b255-\
790548e8fffe"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"runExperiment", "[", 
     RowBox[{"params_", ",", " ", "n_"}], "]"}], " ", ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "ag", ",", " ", "pd", ",", " ", 
        RowBox[{"pop", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0", "}"}], ",", " ", 
           RowBox[{"{", "0", "}"}], ",", " ", 
           RowBox[{"{", "0", "}"}]}], "}"}]}], ",", " ", 
        RowBox[{"popDyd", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0", "}"}], ",", " ", 
           RowBox[{"{", "0", "}"}], ",", " ", 
           RowBox[{"{", "0", "}"}]}], "}"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ag", "=", 
        RowBox[{"initialAgents", "[", "]"}]}], ";", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "0"}], ",", 
         RowBox[{"i", "<", "n"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"res", " ", "=", " ", 
           RowBox[{"updateAgents", "[", 
            RowBox[{"ag", ",", 
             RowBox[{"params", "[", "\"\<sardineGrowthRate\>\"", "]"}], ",", 
             " ", 
             RowBox[{"params", "[", "\"\<sardineMobility\>\"", "]"}], ",", 
             RowBox[{"params", "[", "\"\<sharkGrowthRate\>\"", "]"}], ",", 
             RowBox[{"params", "[", "\"\<sharkMobility\>\"", "]"}], ",", 
             RowBox[{"params", "[", "\"\<sharkEndurance\>\"", "]"}], ",", " ", 
             RowBox[{"params", "[", "\"\<sardineEndurance\>\"", "]"}], ",", 
             " ", 
             RowBox[{"params", "[", "\"\<algaeGrowthRate\>\"", "]"}], ",", 
             " ", 
             RowBox[{"params", "[", "\"\<tSize\>\"", "]"}], ",", 
             RowBox[{"params", "[", "\"\<tSpeed\>\"", "]"}], ",", " ", 
             RowBox[{"params", "[", "\"\<tSpawnRate\>\"", "]"}], ",", 
             RowBox[{"params", "[", "\"\<smartSharks\>\"", "]"}], ",", " ", 
             RowBox[{"params", "[", "\"\<smartSardines\>\"", "]"}], ",", " ", 
             RowBox[{"params", "[", "\"\<targetAlgae\>\"", "]"}], ",", " ", 
             RowBox[{"params", "[", "\"\<targetSardines\>\"", "]"}], ",", " ", 
             RowBox[{"params", "[", "\"\<targetSharks\>\"", "]"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"ag", " ", "=", " ", 
           RowBox[{"res", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"pd", " ", "=", " ", 
           RowBox[{"res", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"pop", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
            RowBox[{"Length", "[", 
             RowBox[{"Select", "[", 
              RowBox[{"ag", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "Algae"}], 
                 ")"}], "&"}]}], "]"}], "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"pop", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
            RowBox[{"Length", "[", 
             RowBox[{"Select", "[", 
              RowBox[{"ag", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "Sardine"}], 
                 ")"}], "&"}]}], "]"}], "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"pop", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
            RowBox[{"Length", "[", 
             RowBox[{"Select", "[", 
              RowBox[{"ag", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "Shark"}], 
                 ")"}], "&"}]}], "]"}], "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{
              RowBox[{"popDyn", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"pd", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{
              RowBox[{"popDyn", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"pd", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{
              RowBox[{"popDyn", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"pd", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ";"}], 
           "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"Select", "[", 
                RowBox[{"ag", ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "Sardine"}], 
                   ")"}], "&"}]}], "]"}], "]"}], "\[Equal]", "0"}], "||", 
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"Select", "[", 
                RowBox[{"ag", ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "Shark"}], 
                   ")"}], "&"}]}], "]"}], "]"}], "\[Equal]", "0"}], " ", "||",
              " ", 
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"Select", "[", 
                RowBox[{"ag", ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "Algae"}], 
                   ")"}], "&"}]}], "]"}], "]"}], "\[Equal]", "0"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Break", "[", "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"{", 
         RowBox[{"pop", ",", " ", "popDyn"}], "}"}], "*)"}], 
       "\[IndentingNewLine]", "pop"}]}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"runBatch", "[", 
     RowBox[{
     "params_", ",", " ", "numExp_", ",", " ", "expLen_", ",", " ", 
      "verbose_"}], "]"}], " ", ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"batchRes", " ", "=", " ", 
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", "}"}]}], "}"}]}], ",", " ", "i", ",", " ", "pop"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Run", " ", "numExp", " ", "experiments", " ", "of", " ", "expLen", 
        " ", "steps", " ", "at", " ", "params_", " ", "parameters", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Return", ":", " ", 
         RowBox[{
         "Dict", " ", "of", " ", "lists", " ", "of", " ", "length", " ", 
          "numExp", " ", "meanign", " ", 
          RowBox[{"{", " ", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", "FinalAlg", "}"}], ",", " ", "\[IndentingNewLine]", 
            RowBox[{"{", "FinalSard", "}"}], ",", " ", "\[IndentingNewLine]", 
            RowBox[{"{", "FinalShark", "}"}], ",", " ", "\[IndentingNewLine]", 
            RowBox[{"{", "AvgSard", "}"}], ",", " ", "\[IndentingNewLine]", 
            RowBox[{"{", "AvgAlg", "}"}], ",", " ", "\[IndentingNewLine]", 
            RowBox[{"{", "AvgShark", "}"}]}], "}"}]}]}]}], 
       "\[IndentingNewLine]", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
         RowBox[{"i", " ", "\[LessEqual]", " ", "numExp"}], ",", " ", 
         RowBox[{"i", "++"}], ",", " ", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"pop", " ", "=", " ", 
           RowBox[{"runExperiment", "[", 
            RowBox[{"params", ",", " ", "expLen"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"verbose", ",", "\[IndentingNewLine]", 
            RowBox[{"Print", "[", "i", "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"Add", " ", "experiment", " ", "results", " ", "to"}], " ",
            "*)"}], "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"batchRes", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
            RowBox[{"pop", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", " ", 
               RowBox[{"-", "1"}]}], "]"}], "]"}]}], " ", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"batchRes", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
            RowBox[{"pop", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", " ", 
               RowBox[{"-", "1"}]}], "]"}], "]"}]}], " ", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"batchRes", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
            RowBox[{"pop", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", " ", 
               RowBox[{"-", "1"}]}], "]"}], "]"}]}], " ", "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"batchRes", "[", 
             RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
            RowBox[{"Mean", "[", " ", 
             RowBox[{"pop", "[", 
              RowBox[{"[", "1", "]"}], "]"}], " ", "]"}]}], " ", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"batchRes", "[", 
             RowBox[{"[", "5", "]"}], "]"}], ",", 
            RowBox[{"Mean", "[", " ", 
             RowBox[{"pop", "[", 
              RowBox[{"[", "2", "]"}], "]"}], " ", "]"}]}], " ", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"batchRes", "[", 
             RowBox[{"[", "6", "]"}], "]"}], ",", " ", 
            RowBox[{"Mean", "[", 
             RowBox[{"pop", "[", 
              RowBox[{"[", "3", "]"}], "]"}], " ", "]"}]}], " ", "]"}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "batchRes"}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"checkStability", "[", 
     RowBox[{
     "params_", ",", " ", "numExp_", ",", " ", "expLen_", ",", " ", 
      "verbose_"}], "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "stable", ",", " ", "total", ",", " ", "results", ",", " ", "i"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Returns", " ", "percentage", " ", "of", " ", "runs", " ", "for", " ", 
        "which", " ", "populations", " ", "remained", " ", 
        RowBox[{"stable", " ", "--"}], " ", "no", " ", "extinction"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"results", " ", "=", " ", 
        RowBox[{"runBatch", "[", 
         RowBox[{
         "params", ",", " ", "numExp", ",", " ", "expLen", ",", "verbose"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"stable", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"total", " ", "=", " ", 
        RowBox[{"Length", "[", " ", 
         RowBox[{"results", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", " ", 
        RowBox[{
         RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
         RowBox[{"i", " ", "\[LessEqual]", " ", "total"}], ",", " ", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", " ", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"results", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", " ", "i"}], "]"}], "]"}], " ", "\[Equal]",
                 " ", "0"}], " ", "||", " ", 
               RowBox[{
                RowBox[{"results", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ",", " ", "i"}], "]"}], "]"}], " ", "\[Equal]",
                 " ", "0"}], "  ", "||", " ", 
               RowBox[{
                RowBox[{"results", "[", 
                 RowBox[{"[", 
                  RowBox[{"3", ",", " ", "i"}], "]"}], "]"}], " ", "\[Equal]",
                 " ", "0"}]}], " ", ")"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"stable", " ", "+=", " ", "1"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"stable", " ", "/", " ", "total"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Lazy", " ", "implementation", " ", "that", " ", "copies", " ", "code", 
     " ", "because", " ", "it", " ", "is", " ", "getting", " ", "late"}], " ",
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"runCascade", "[", 
     RowBox[{"params_", ",", " ", "n_", ",", " ", "newTargetShark_"}], "]"}], 
    " ", ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "i", ",", "ag", ",", " ", "pd", ",", " ", "faze", ",", " ", "res", ",",
         " ", 
        RowBox[{"stab", " ", "=", " ", "True"}], ",", " ", 
        RowBox[{"popOrig", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0", "}"}], ",", " ", 
           RowBox[{"{", "0", "}"}], ",", " ", 
           RowBox[{"{", "0", "}"}]}], "}"}]}], ",", " ", 
        RowBox[{"popExp", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0", "}"}], ",", " ", 
           RowBox[{"{", "0", "}"}], ",", " ", 
           RowBox[{"{", "0", "}"}]}], "}"}]}], ",", " ", 
        RowBox[{"popDyd", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0", "}"}], ",", " ", 
           RowBox[{"{", "0", "}"}], ",", " ", 
           RowBox[{"{", "0", "}"}]}], "}"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ag", "=", 
        RowBox[{"initialAgents", "[", "]"}]}], ";", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"faze", " ", "=", " ", 
        RowBox[{"Quotient", "[", 
         RowBox[{"n", ",", " ", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Run", " ", "at", " ", "parameters", " ", "before", " ", 
         "exploitation"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "0"}], ",", 
         RowBox[{"i", "<", "n"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"res", " ", "=", " ", 
           RowBox[{"updateAgents", "[", 
            RowBox[{"ag", ",", 
             RowBox[{"params", "[", "\"\<sardineGrowthRate\>\"", "]"}], ",", 
             " ", 
             RowBox[{"params", "[", "\"\<sardineMobility\>\"", "]"}], ",", 
             RowBox[{"params", "[", "\"\<sharkGrowthRate\>\"", "]"}], ",", 
             RowBox[{"params", "[", "\"\<sharkMobility\>\"", "]"}], ",", 
             RowBox[{"params", "[", "\"\<sharkEndurance\>\"", "]"}], ",", " ", 
             RowBox[{"params", "[", "\"\<sardineEndurance\>\"", "]"}], ",", 
             " ", 
             RowBox[{"params", "[", "\"\<algaeGrowthRate\>\"", "]"}], ",", 
             " ", 
             RowBox[{"params", "[", "\"\<tSize\>\"", "]"}], ",", 
             RowBox[{"params", "[", "\"\<tSpeed\>\"", "]"}], ",", " ", 
             RowBox[{"params", "[", "\"\<tSpawnRate\>\"", "]"}], ",", 
             RowBox[{"params", "[", "\"\<smartSharks\>\"", "]"}], ",", " ", 
             RowBox[{"params", "[", "\"\<smartSardines\>\"", "]"}], ",", " ", 
             RowBox[{"params", "[", "\"\<targetAlgae\>\"", "]"}], ",", " ", 
             RowBox[{"params", "[", "\"\<targetSardines\>\"", "]"}], ",", " ", 
             RowBox[{"params", "[", "\"\<targetSharks\>\"", "]"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"ag", " ", "=", " ", 
           RowBox[{"res", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"popOrig", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
            RowBox[{"Length", "[", 
             RowBox[{"Select", "[", 
              RowBox[{"ag", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "Algae"}], 
                 ")"}], "&"}]}], "]"}], "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"popOrig", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
            RowBox[{"Length", "[", 
             RowBox[{"Select", "[", 
              RowBox[{"ag", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "Sardine"}], 
                 ")"}], "&"}]}], "]"}], "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"popOrig", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
            RowBox[{"Length", "[", 
             RowBox[{"Select", "[", 
              RowBox[{"ag", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "Shark"}], 
                 ")"}], "&"}]}], "]"}], "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"Select", "[", 
                RowBox[{"ag", ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "Sardine"}], 
                   ")"}], "&"}]}], "]"}], "]"}], "\[Equal]", "0"}], "||", 
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"Select", "[", 
                RowBox[{"ag", ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "Shark"}], 
                   ")"}], "&"}]}], "]"}], "]"}], "\[Equal]", "0"}], " ", "||",
              " ", 
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"Select", "[", 
                RowBox[{"ag", ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "Algae"}], 
                   ")"}], "&"}]}], "]"}], "]"}], "\[Equal]", "0"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"stab", " ", "=", " ", "False"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", "}"}], ",", 
                RowBox[{"{", "}"}], ",", 
                RowBox[{"{", "}"}], ",", " ", "False"}], "}"}], "]"}]}]}], 
           "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Introduce", " ", "exploitation"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "0"}], ",", 
         RowBox[{"i", "<", "n"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"res", " ", "=", " ", 
           RowBox[{"updateAgents", "[", 
            RowBox[{"ag", ",", 
             RowBox[{"params", "[", "\"\<sardineGrowthRate\>\"", "]"}], ",", 
             " ", 
             RowBox[{"params", "[", "\"\<sardineMobility\>\"", "]"}], ",", 
             RowBox[{"params", "[", "\"\<sharkGrowthRate\>\"", "]"}], ",", 
             RowBox[{"params", "[", "\"\<sharkMobility\>\"", "]"}], ",", 
             RowBox[{"params", "[", "\"\<sharkEndurance\>\"", "]"}], ",", " ", 
             RowBox[{"params", "[", "\"\<sardineEndurance\>\"", "]"}], ",", 
             " ", 
             RowBox[{"params", "[", "\"\<algaeGrowthRate\>\"", "]"}], ",", 
             " ", 
             RowBox[{"params", "[", "\"\<tSize\>\"", "]"}], ",", 
             RowBox[{"params", "[", "\"\<tSpeed\>\"", "]"}], ",", " ", 
             RowBox[{"params", "[", "\"\<tSpawnRate\>\"", "]"}], ",", 
             RowBox[{"params", "[", "\"\<smartSharks\>\"", "]"}], ",", " ", 
             RowBox[{"params", "[", "\"\<smartSardines\>\"", "]"}], ",", " ", 
             RowBox[{"params", "[", "\"\<targetAlgae\>\"", "]"}], ",", " ", 
             RowBox[{"params", "[", "\"\<targetSardines\>\"", "]"}], ",", " ",
              "newTargetShark"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"ag", " ", "=", " ", 
           RowBox[{"res", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"popExp", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
            RowBox[{"Length", "[", 
             RowBox[{"Select", "[", 
              RowBox[{"ag", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "Algae"}], 
                 ")"}], "&"}]}], "]"}], "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"popExp", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
            RowBox[{"Length", "[", 
             RowBox[{"Select", "[", 
              RowBox[{"ag", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "Sardine"}], 
                 ")"}], "&"}]}], "]"}], "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"popExp", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
            RowBox[{"Length", "[", 
             RowBox[{"Select", "[", 
              RowBox[{"ag", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "Shark"}], 
                 ")"}], "&"}]}], "]"}], "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"Select", "[", 
                RowBox[{"ag", ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "Sardine"}], 
                   ")"}], "&"}]}], "]"}], "]"}], "\[Equal]", "0"}], "||", 
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"Select", "[", 
                RowBox[{"ag", ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "Shark"}], 
                   ")"}], "&"}]}], "]"}], "]"}], "\[Equal]", "0"}], " ", "||",
              " ", 
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"Select", "[", 
                RowBox[{"ag", ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "Algae"}], 
                   ")"}], "&"}]}], "]"}], "]"}], "\[Equal]", "0"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"stab", " ", "=", " ", "False"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Break", "[", "]"}]}]}], "]"}]}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Return", " ", "mean", " ", "populations", " ", "before", " ", "and", 
         " ", "after", " ", "introduction", " ", "of", " ", "exploitation"}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Mean", "[", 
            RowBox[{"popOrig", "[", " ", 
             RowBox[{"[", "1", "]"}], "]"}], " ", "]"}], " ", ",", 
           RowBox[{"Mean", "[", 
            RowBox[{"popExp", "[", 
             RowBox[{"[", "1", "]"}], "]"}], " ", "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Mean", "[", " ", 
            RowBox[{"popOrig", "[", 
             RowBox[{"[", "2", "]"}], "]"}], " ", "]"}], " ", ",", 
           RowBox[{"Mean", "[", 
            RowBox[{"popExp", "[", 
             RowBox[{"[", "2", "]"}], "]"}], " ", "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{"Mean", "[", " ", 
            RowBox[{"popOrig", "[", 
             RowBox[{"[", "3", "]"}], "]"}], " ", "]"}], ",", 
           RowBox[{"Mean", "[", 
            RowBox[{"popExp", "[", 
             RowBox[{"[", "3", "]"}], "]"}], " ", "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", "stab"}], "\[IndentingNewLine]", "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"runCascadeBatch", "[", 
     RowBox[{
     "params_", ",", " ", "numExp_", ",", " ", "expLen_", ",", 
      "newTargetShark_", " ", ",", " ", "verbose_"}], "]"}], " ", ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"batchRes", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "}"}], ",", 
             RowBox[{"{", "}"}], ",", 
             RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "}"}], ",", 
             RowBox[{"{", "}"}], ",", 
             RowBox[{"{", "}"}]}], "}"}]}], "}"}]}], ",", " ", "i", ",", " ", 
        "pop"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
         RowBox[{"i", " ", "\[LessEqual]", " ", "numExp"}], ",", " ", 
         RowBox[{"i", "++"}], ",", " ", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"pop", " ", "=", " ", 
           RowBox[{"runCascade", "[", 
            RowBox[{
            "params", ",", " ", "expLen", ",", " ", "newTargetShark"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"verbose", ",", "\[IndentingNewLine]", 
            RowBox[{"Print", "[", "i", "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"batchRes", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", " ", "1"}], "]"}], "]"}], ",", " ", 
            RowBox[{"pop", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", " ", "1"}], "]"}], "]"}]}], " ", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"batchRes", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", " ", "2"}], "]"}], "]"}], ",", " ", 
            RowBox[{"pop", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", " ", "1"}], "]"}], "]"}]}], " ", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"batchRes", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", " ", "3"}], "]"}], "]"}], ",", " ", 
            RowBox[{"pop", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", " ", "1"}], "]"}], "]"}]}], " ", "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"batchRes", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", " ", "1"}], "]"}], "]"}], ",", "  ", 
            RowBox[{"pop", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", " ", "2"}], "]"}], "]"}]}], "  ", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"batchRes", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", " ", "2"}], "]"}], "]"}], ",", " ", 
            RowBox[{"pop", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", " ", "2"}], "]"}], "]"}]}], "  ", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"batchRes", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", " ", "3"}], "]"}], "]"}], ",", " ", 
            RowBox[{"pop", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", " ", "2"}], "]"}], "]"}]}], "  ", "]"}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "batchRes"}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"checkExploitationRange", "[", 
     RowBox[{
     "params_", ",", " ", "numExp_", ",", " ", "expLen_", ",", " ", 
      "interval_", ",", " ", "verbose_"}], "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Returns", " ", "percentage", " ", "of", " ", "runs", " ", "for", " ", 
        "which", " ", "populations", " ", "remained", " ", "stable", " ", 
        "over", " ", "a", " ", "range", " ", "of", " ", "sardine", " ", 
        "exploitation", " ", "rates"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"params", "[", "\"\<targetSardines\>\"", "]"}], " ", "=", 
           " ", "#"}], ";", " ", 
          RowBox[{"Print", "[", "#", "]"}], ";", " ", 
          RowBox[{"checkStability", "[", 
           RowBox[{
           "params", ",", " ", "numExp", ",", " ", "expLen", ",", " ", 
            "verbose"}], "]"}]}], ")"}], " ", "&"}], " ", "/@", " ", 
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", " ", "1", ",", " ", "interval"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{
  3.829409889841097*^9, {3.8294099942333612`*^9, 3.829410028815949*^9}, {
   3.829411278492613*^9, 3.8294115504810467`*^9}, {3.829411584207391*^9, 
   3.829411598411902*^9}, {3.829412987770965*^9, 3.8294130036152077`*^9}, {
   3.829413038749042*^9, 3.829413054255279*^9}, {3.829413102040563*^9, 
   3.8294131024706087`*^9}, {3.8294132352614307`*^9, 3.829413251366035*^9}, {
   3.829413307082313*^9, 3.8294133339412813`*^9}, {3.8294137258847303`*^9, 
   3.829413755218853*^9}, {3.8294139117405443`*^9, 3.829413935175454*^9}, {
   3.829414008021742*^9, 3.829414020108755*^9}, {3.8294141145830507`*^9, 
   3.829414124654683*^9}, {3.829414423330718*^9, 3.829414480341316*^9}, {
   3.829420066022851*^9, 3.8294205832758703`*^9}, {3.829420632653308*^9, 
   3.829420752299862*^9}, {3.829421252492382*^9, 3.829421258390711*^9}, {
   3.829421572196521*^9, 3.8294217612061462`*^9}, {3.829421863089747*^9, 
   3.829421914324913*^9}, {3.829596054377596*^9, 3.8295960818045683`*^9}, {
   3.82959611279114*^9, 3.829596299869257*^9}, {3.8295963973479357`*^9, 
   3.829596407524344*^9}, {3.82959655220081*^9, 3.8295965565913277`*^9}, 
   3.8295965986804543`*^9, {3.829596666590352*^9, 3.82959666855902*^9}},
 CellLabel->
  "In[138]:=",ExpressionUUID->"e0ad99f2-2ed3-4b98-946d-4101ad5203ca"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.829420589717147*^9, 3.8294205940709953`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"9e0633c5-f7cc-42f8-bedc-673fa548f486"],

Cell[CellGroupData[{

Cell["TESTING PARAMETERS TEMPLATE", "Subsection",
 CellChangeTimes->{{3.8294100129478292`*^9, 3.829410019742885*^9}, {
  3.829467198864463*^9, 
  3.829467202923607*^9}},ExpressionUUID->"831ee00f-1629-4240-aac3-\
f51ac296a4ea"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Enum", " ", "for", " ", "agent", " ", "types"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Shark", "=", "1."}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Sardine", "=", "2."}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Algae", " ", "=", " ", "3."}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Trawler", " ", "=", " ", "4."}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
      "Size", " ", "of", " ", "initial", " ", "population", " ", "of", " ", 
       "Algae"}], " ", "&"}], " ", "algae", " ", "endurance"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"initialAlgae", " ", "=", " ", "100."}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"algaeEndurance", " ", "=", " ", "20"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sharkSight", " ", "=", " ", "0.25"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sardineSight", " ", "=", " ", "0.15"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Cap", " ", "population", " ", "members"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxSardines", "=", "800."}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxSharks", "=", "500."}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxAlgae", " ", "=", " ", "1500."}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dummyPoint", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1."}], ",", 
       RowBox[{"-", "1."}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.829410437488799*^9, 3.829410441146619*^9}, {
  3.829410875227294*^9, 3.82941088802417*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"fd06d3ab-a6f0-4ad7-b89a-0e7ceee05080"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Behavioural", " ", "parameters"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"data", "[", "\"\<algaeGrowthRate\>\"", "]"}], " ", "=", 
     "0.725"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"data", "[", "\"\<sardineGrowthRate\>\"", "]"}], "=", "0.455"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"data", "[", "\"\<sharkGrowthRate\>\"", "]"}], "=", "0.15"}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"data", "[", "\"\<sardineMobility\>\"", "]"}], "=", "0.06"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"data", "[", "\"\<sharkMobility\>\"", "]"}], "=", "0.068"}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"data", "[", "\"\<sardineEndurance\>\"", "]"}], " ", "=", "10"}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"data", "[", "\"\<sharkEndurance\>\"", "]"}], "=", "15"}], ";"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Trawler", " ", "settings"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"data", "[", "\"\<tSpawnRate\>\"", "]"}], " ", "=", " ", "5"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"data", "[", "\"\<tSpeed\>\"", "]"}], "=", "0.1"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"data", "[", "\"\<tSize\>\"", "]"}], "=", " ", "1"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"data", "[", "\"\<targetAlgae\>\"", "]"}], "=", "0.99"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"data", "[", "\"\<targetSardines\>\"", "]"}], "=", "0.99"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"data", "[", "\"\<targetSharks\>\"", "]"}], "=", "0.5"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Agent", " ", "type"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"data", "[", "\"\<smartSharks\>\"", "]"}], "=", " ", "True"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"data", "[", "\"\<smartSardines\>\"", "]"}], " ", "=", " ", 
     "True"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"res", " ", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", " ", 
          RowBox[{"-", "1"}], ",", " ", "0", ",", " ", "1."}], "}"}], "}"}], 
       ",", 
       RowBox[{"{", "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pop", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "0", "}"}], ",", 
       RowBox[{"{", "0", "}"}], ",", 
       RowBox[{"{", "0", "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"popDyn", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "0", "}"}], ",", 
       RowBox[{"{", "0", "}"}], ",", 
       RowBox[{"{", "0", "}"}]}], "}"}]}], ";"}], " ", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.829410474828371*^9, 3.8294105127880373`*^9}, {
   3.829410799256744*^9, 3.8294108932439537`*^9}, 3.8294110351609707`*^9, {
   3.8294110676841917`*^9, 3.829411085916123*^9}, {3.829412069967339*^9, 
   3.829412070521727*^9}, {3.829412128029642*^9, 3.829412128419087*^9}, 
   3.8294129280398283`*^9, {3.829412969496715*^9, 3.829412972252152*^9}, {
   3.829413367398638*^9, 3.829413401745338*^9}, {3.829413607534142*^9, 
   3.829413607906086*^9}, {3.8294136775297337`*^9, 3.829413680144051*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"b6059314-b2bc-46d7-a658-404ce0097246"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Time", ":", " ", 
   RowBox[{"CCa", " ", "3", " ", 
    RowBox[{
     RowBox[{"Hours", "?", " ", "runCascadeBatch"}], "[", 
     RowBox[{"data", ",", "30", ",", "600", ",", "0.8`", ",", "True"}], 
     "]"}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.829467177705142*^9, 3.82946719120185*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"efeae2b2-0262-43eb-baf2-8d5a6b833083"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["DATA ANALYSIS FOR TROPHIC CASCADE", "Section",
 CellChangeTimes->{{3.82946666498083*^9, 
  3.8294666704722443`*^9}},ExpressionUUID->"e351e90a-a2e4-43c1-9c69-\
a6a85f9bfb40"],

Cell[BoxData[
 RowBox[{
  RowBox[{"resultsCleaned", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<LouisResultsCleaned\>\"", ",", " ", "\"\<Package\>\""}], 
    "]"}]}], ";"}]], "Input",
 CellLabel->"In[84]:=",ExpressionUUID->"2c31b801-cc88-43a4-9345-978d6e2b72bb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"newbatchtrialres", "=", " ", "batchTrialResults"}], ";"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"batchTrialResults", " ", "=", " ", "resultsCleaned"}], ";"}], 
   " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Load", " ", "results", " ", "into", " ", "nice", " ", "names", " ", "for",
     " ", "convenience"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"AlgBefore", " ", "=", " ", 
     RowBox[{"resultsCleaned", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", " ", "1"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AlgAfter", " ", "=", " ", 
     RowBox[{"resultsCleaned", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", " ", "1"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SardBefore", " ", "=", " ", 
     RowBox[{"resultsCleaned", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", " ", "2"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SardAfter", " ", "=", " ", 
     RowBox[{"resultsCleaned", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", " ", "2"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SharkBefore", " ", "=", " ", 
     RowBox[{"resultsCleaned", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", " ", "3"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SharkAfter", " ", "=", " ", 
     RowBox[{"resultsCleaned", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", " ", "3"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mAlgBefore", " ", "=", " ", 
     RowBox[{"Mean", "[", " ", 
      RowBox[{"resultsCleaned", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", " ", "1"}], "]"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mAlgAfter", " ", "=", "  ", 
     RowBox[{"Mean", "[", " ", 
      RowBox[{"resultsCleaned", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", " ", "1"}], "]"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mSardBefore", " ", "=", "  ", 
     RowBox[{"Mean", "[", " ", 
      RowBox[{"resultsCleaned", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", " ", "2"}], "]"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mSardAfter", " ", "=", "  ", 
     RowBox[{"Mean", "[", " ", 
      RowBox[{"resultsCleaned", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", " ", "2"}], "]"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mSharkBefore", " ", "=", "  ", 
     RowBox[{"Mean", "[", " ", 
      RowBox[{"resultsCleaned", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", " ", "3"}], "]"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mSharkAfter", " ", "=", "  ", 
     RowBox[{"Mean", "[", " ", 
      RowBox[{"resultsCleaned", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", " ", "3"}], "]"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Make", " ", "sure", " ", "the", " ", "data", " ", "is", " ", "loaded", 
     " ", "the", " ", "correct", " ", "way", " ", "around"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Mean", "[", "SharkBefore", "]"}], " ", "<", " ", 
     RowBox[{"Mean", "[", "SharkAfter", "]"}]}], " ", "&&", " ", 
    RowBox[{
     RowBox[{"Mean", "[", "SardBefore", "]"}], " ", ">", " ", 
     RowBox[{"Mean", "[", "SardAfter", "]"}]}], "&&", " ", 
    RowBox[{
     RowBox[{"Mean", "[", "AlgBefore", "]"}], " ", "<", " ", 
     RowBox[{"Mean", "[", "AlgAfter", "]"}]}]}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.829422036291301*^9, 3.829422239991534*^9}, {
  3.829461957371895*^9, 3.82946208055334*^9}, {3.829466399945242*^9, 
  3.829466408392929*^9}, {3.829466928772482*^9, 3.829467021767943*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"34b38085-8506-49b1-86bd-cbe77231c94e"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.8294669605938663`*^9, 3.829467023663625*^9}, 
   3.8295965279285088`*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"5a4a83a2-989d-44ae-8214-da4a20c00f54"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Run", " ", "Paired", " ", "T", " ", "Test", " ", "to", " ", "reject", " ",
     "H_", "0", " ", "Means", " ", "are", " ", "the", " ", "same"}], " ", 
   "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"PairedTTest", "[", 
    RowBox[{"{", 
     RowBox[{"AlgBefore", ",", " ", "AlgAfter"}], "}"}], " ", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"PairedTTest", "[", 
    RowBox[{"{", 
     RowBox[{"SardBefore", ",", " ", "SardAfter"}], "}"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"PairedTTest", "[", 
    RowBox[{"{", 
     RowBox[{"SharkBefore", ",", " ", "SharkAfter"}], "}"}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.829462093980859*^9, 3.829462168447233*^9}, {
   3.829462200379065*^9, 3.829462230793625*^9}, {3.829462279538632*^9, 
   3.829462322722494*^9}, {3.829462393958049*^9, 3.829462402948863*^9}, {
   3.8294624559733458`*^9, 3.8294624599078617`*^9}, {3.829462627845592*^9, 
   3.829462633474975*^9}, 3.829462704895144*^9, {3.829467035312745*^9, 
   3.8294670546357403`*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"6c10e259-ed50-4f36-b44a-0cd12dbdea92"],

Cell[BoxData["3.06850858058514`*^-15"], "Output",
 CellChangeTimes->{{3.8294619717930813`*^9, 3.829462004813706*^9}, 
   3.8294620816411657`*^9, 3.82946216907697*^9, {3.8294622130142927`*^9, 
   3.829462231332395*^9}, 3.829462323142603*^9, 3.8294624043177347`*^9, 
   3.829462461288183*^9, {3.829462700600676*^9, 3.8294627053016157`*^9}, 
   3.829467055339239*^9, 3.829596528364292*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"8ada76e5-af52-4ece-b849-a910e69d575f"],

Cell[BoxData[
 TemplateBox[{
  "PairedTTest", "nortst", 
   "\"At least one of the p-values in \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"0.11200568813635696`\\\", \\\",\\\", \\\"0.0026472071524859023`\\\
\"}], \\\"}\\\"}]\\), resulting from a test for normality, is below \
\\!\\(\\*RowBox[{\\\"0.025`\\\"}]\\). The tests in \
\\!\\(\\*RowBox[{\\\"{\\\", \\\"\\\\\\\"PairedT\\\\\\\"\\\", \\\"}\\\"}]\\) \
require that the data is normally distributed.\"", 2, 99, 3, 
   23920348399946448916, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.829462323208898*^9, 3.8294624042980747`*^9, 3.8294624612906857`*^9, {
   3.829462700570086*^9, 3.829462705303694*^9}, 3.82946705534158*^9, 
   3.829596528389366*^9},
 CellLabel->
  "During evaluation of \
In[98]:=",ExpressionUUID->"fd177267-d643-4dfe-9543-fcfd9e22f94c"],

Cell[BoxData["1.2465389572820017`*^-7"], "Output",
 CellChangeTimes->{{3.8294619717930813`*^9, 3.829462004813706*^9}, 
   3.8294620816411657`*^9, 3.82946216907697*^9, {3.8294622130142927`*^9, 
   3.829462231332395*^9}, 3.829462323142603*^9, 3.8294624043177347`*^9, 
   3.829462461288183*^9, {3.829462700600676*^9, 3.8294627053016157`*^9}, 
   3.829467055339239*^9, 3.829596528395568*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"48b42f6b-a3f0-450c-bdbe-cbb2cf6b4325"],

Cell[BoxData["2.1476904951416276`*^-10"], "Output",
 CellChangeTimes->{{3.8294619717930813`*^9, 3.829462004813706*^9}, 
   3.8294620816411657`*^9, 3.82946216907697*^9, {3.8294622130142927`*^9, 
   3.829462231332395*^9}, 3.829462323142603*^9, 3.8294624043177347`*^9, 
   3.829462461288183*^9, {3.829462700600676*^9, 3.8294627053016157`*^9}, 
   3.829467055339239*^9, 3.829596528396825*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"ae5e5ef8-ea75-49d5-8924-5963c6c48de3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Plot", " ", "effects", " ", "of", " ", "trophic", " ", "cascade"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"lineAlg", " ", "=", " ", 
    RowBox[{"Line", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.5", ",", " ", "1500"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"8", ",", " ", "1500"}], "}"}]}], "}"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"lineSard", " ", "=", " ", 
    RowBox[{"Line", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.5", ",", " ", "800"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"8", ",", " ", "800"}], "}"}]}], "}"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"lineOtter", " ", "=", " ", 
    RowBox[{"Line", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.5", ",", " ", "500"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"8", ",", " ", "500"}], "}"}]}], "}"}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"BarChart", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"mAlgAfter", ",", " ", "mAlgBefore"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"mSardAfter", ",", " ", "mSardBefore"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"mSharkAfter", ",", " ", "mSharkBefore"}], "}"}]}], "}"}], 
     ",", 
     RowBox[{"ChartLabels", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<Kelp\>\"", ",", "\"\<Sea Urchins\>\"", ",", " ", 
          "\"\<Otter\>\""}], "}"}], ",", "None"}], "}"}]}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"ChartLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Before Cascade\>\"", ",", "\"\<After Cascade\>\""}], 
       "}"}]}], ",", " ", 
     RowBox[{"LegendAppearance", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", " ", 
        RowBox[{"-", "1"}]}], "}"}]}], ",", " ", 
     RowBox[{
     "PlotLabel", "\[Rule]", "\"\<Mean Stable Population Levels\>\""}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"LabelingFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"Rotate", "[", 
           RowBox[{
            RowBox[{"Round", "[", "#", "]"}], ",", 
            RowBox[{"0.5", " ", "Pi"}]}], "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"#1", ">", "0.5"}], ",", "Center", ",", "Above"}], 
           "]"}]}], "]"}], "&"}], ")"}]}], "\[IndentingNewLine]", ",", 
     RowBox[{"Frame", "\[Rule]", " ", "True"}], "\[IndentingNewLine]", ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Species\>\"", ",", "\"\<No. Individuals\>\""}], "}"}]}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"PlotRange", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "1500"}], "}"}]}], "}"}]}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"Prolog", "\[Rule]", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"RGBColor", "[", 
              RowBox[{".11", ",", ".60", ",", ".11"}], "]"}], ",", " ", 
             "Dashed"}], "}"}], "]"}], ",", "lineAlg"}], "}"}], ",", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Text", "[", 
           RowBox[{"\"\<Algae Cap\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"6", ",", "1535"}], "}"}]}], "]"}], ",", " ", 
          RowBox[{"RGBColor", "[", 
           RowBox[{".3", ",", ".3", ",", ".3"}], "]"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"RGBColor", "[", 
              RowBox[{".0", ",", ".25", ",", ".5"}], "]"}], ",", " ", 
             "Dashed"}], "}"}], "]"}], ",", "lineSard"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Text", "[", 
           RowBox[{"\"\<Urchin Cap\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"6", ",", "835"}], "}"}]}], "]"}], ",", " ", 
          RowBox[{"RGBColor", "[", 
           RowBox[{".3", ",", ".3", ",", ".3"}], "]"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"RGBColor", "[", 
              RowBox[{".0", ",", ".1", ",", ".5"}], "]"}], ",", " ", 
             "Dashed"}], "}"}], "]"}], ",", "lineOtter"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Text", "[", 
           RowBox[{"\"\<Otter Cap\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"6", ",", "535"}], "}"}]}], "]"}], ",", " ", 
          RowBox[{"RGBColor", "[", 
           RowBox[{".3", ",", ".3", ",", ".3"}], "]"}]}], "]"}]}], 
       "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQvYu17KdcxxvH10Uqv0C0hOnPfyA63smAQR5I7+BV
WwqidcwnLQfRF0Qb9RWAtIfqVhMQzcbv6wqiS2bH+oHoe7q7okH0r3z3GBC9
5NXyFBB9KccjHUT/P6tTAKJTxLsLQfSzLS6VIHpej2MriDaam/wdzL877weI
ntReL60IpIN/TgbTp7h9tED0E6sf+iD6g/onFiUgfeMfIzeIVhexFQHRNr+2
K4PoP4leWiD60VR1PRCt82SdEYjmOrHdEsx/62cHojMkbqeA6Pm7rLJB9KuD
HXUg2oVlSTOIVmqYOBFEAwCGzY4b
  "],
 CellLabel->
  "In[101]:=",ExpressionUUID->"19fee037-d4dc-47b7-bca7-a1fb4e9bc0dc"],

Cell[BoxData[
 RowBox[{"Line", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.5`", ",", "1500"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"8", ",", "1500"}], "}"}]}], "}"}], "]"}]], "Output",
 CellChangeTimes->{{3.8294702860726147`*^9, 3.8294703494932528`*^9}, 
   3.829596528478785*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"60c88f49-572d-4181-beab-d843db2a7b72"],

Cell[BoxData[
 RowBox[{"Line", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.5`", ",", "800"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"8", ",", "800"}], "}"}]}], "}"}], "]"}]], "Output",
 CellChangeTimes->{{3.8294702860726147`*^9, 3.8294703494932528`*^9}, 
   3.829596528480504*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"6f440684-39ae-4014-acb0-67d01cfc896d"],

Cell[BoxData[
 RowBox[{"Line", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.5`", ",", "500"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"8", ",", "500"}], "}"}]}], "}"}], "]"}]], "Output",
 CellChangeTimes->{{3.8294702860726147`*^9, 3.8294703494932528`*^9}, 
   3.8295965284819937`*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"9f27438e-04bc-4097-a8c5-7d4e62b70db6"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.6142316096139839, 0.}, {7.2319737800437, 
       0.}}]}, {{}, {{{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.6579999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{0.7439912600145666, 0.}, {1.64639475600874, 
               1354.94507468525}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.6579999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{1.7439912600145666`, 0.}, {2.64639475600874, 
               1322.0713691466603`}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.6579999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{3.0367807720320465`, 0.}, {3.93918426802622, 
               593.3287270538822}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.6579999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{4.0367807720320465`, 0.}, {4.93918426802622, 
               659.02198716425}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.6579999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{5.3295702840495265`, 0.}, {6.2319737800437, 
               197.0720261806661}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.6579999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{6.3295702840495265`, 0.}, {7.2319737800437, 
               138.90076063703353`}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}}, {}, {}}}, {}, {}}, {}, {
      InsetBox[
       FormBox[
        StyleBox[
         RotationBox["1355", BoxRotation -> 1.5707963267948966`], {}, 
         StripOnInput -> False], TraditionalForm], {1.1951930080116533`, 
       677.472537342625}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         RotationBox["1322", BoxRotation -> 1.5707963267948966`], {}, 
         StripOnInput -> False], TraditionalForm], {2.1951930080116533`, 
       661.0356845733302}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         RotationBox["593", BoxRotation -> 1.5707963267948966`], {}, 
         StripOnInput -> False], TraditionalForm], {3.4879825200291332`, 
       296.6643635269411}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         RotationBox["659", BoxRotation -> 1.5707963267948966`], {}, 
         StripOnInput -> False], TraditionalForm], {4.487982520029133, 
       329.510993582125}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         RotationBox["197", BoxRotation -> 1.5707963267948966`], {}, 
         StripOnInput -> False], TraditionalForm], {5.780772032046613, 
       98.53601309033304}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         RotationBox["139", BoxRotation -> 1.5707963267948966`], {}, 
         StripOnInput -> False], TraditionalForm], {6.780772032046613, 
       69.45038031851676}, 
       ImageScaled[{0.5, 0.5}]]}, {}, {}, {}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.6142316096139839, 0.}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, Frame -> True, FrameLabel -> {{
        FormBox["\"No. Individuals\"", TraditionalForm], None}, {
        FormBox["\"Species\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {{{1.1951930080116533`, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         2.1951930080116533`, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         2.8415877640203933`, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
         1.6951930080116533`, 
          FormBox["\"Kelp\"", TraditionalForm], {0, 0}}, {3.4879825200291332`, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         4.487982520029133, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         5.134377276037873, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
         3.9879825200291332`, 
          FormBox["\"Sea Urchins\"", TraditionalForm], {0, 0}}, {
         5.780772032046613, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         6.780772032046613, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         6.280772032046613, 
          FormBox["\"Otter\"", TraditionalForm], {0, 0}}}, {{
         1.1951930080116533`, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         2.1951930080116533`, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         2.8415877640203933`, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
         3.4879825200291332`, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         4.487982520029133, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         5.134377276037873, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
         5.780772032046613, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         6.780772032046613, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotLabel -> 
     FormBox["\"Mean Stable Population Levels\"", TraditionalForm], 
     PlotRange -> {{All, All}, {0, 1500}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, 
        Scaled[0.05]}}, Prolog -> {{
        Directive[{
          RGBColor[0.11, 0.6, 0.11], 
          Dashing[{Small, Small}]}], 
        LineBox[{{0.5, 1500}, {8, 1500}}]}, 
       StyleBox[
        InsetBox[
         FormBox["\"Algae Cap\"", TraditionalForm], {6, 1535}], {
         RGBColor[0.3, 0.3, 0.3]}, StripOnInput -> False], {
        Directive[{
          RGBColor[0., 0.25, 0.5], 
          Dashing[{Small, Small}]}], 
        LineBox[{{0.5, 800}, {8, 800}}]}, 
       StyleBox[
        InsetBox[
         FormBox["\"Urchin Cap\"", TraditionalForm], {6, 835}], {
         RGBColor[0.3, 0.3, 0.3]}, StripOnInput -> False], {
        Directive[{
          RGBColor[0., 0.1, 0.5], 
          Dashing[{Small, Small}]}], 
        LineBox[{{0.5, 500}, {8, 500}}]}, 
       StyleBox[
        InsetBox[
         FormBox["\"Otter Cap\"", TraditionalForm], {6, 535}], {
         RGBColor[0.3, 0.3, 0.3]}, StripOnInput -> False]}, 
     Ticks -> {None, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Before Cascade\"", "\"After Cascade\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6579999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6579999999999999]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.982864`", ",", "0.7431472`", ",", 
                    "0.3262672`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.4992`", ",", "0.5552`", ",", "0.8309304`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "None", "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}]}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8294702860726147`*^9, 3.8294703494932528`*^9}, 
   3.829596528888236*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"1a9b1bda-7e5d-4200-a1f3-bccc44f0eb15"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Percentage", " ", "changes", " ", "in", " ", "population", " ", 
    "composition"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"mAlgBefore", " ", "/", " ", "mAlgAfter"}], "*", " ", "1."}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mSardBefore", "  ", "/", " ", "mSardAfter"}], "   ", "*", " ", 
    "1."}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mSharkBefore", "  ", "/", " ", "mSharkAfter"}], "*", " ", "1.", 
    " "}]}]}]], "Input",
 CellChangeTimes->{{3.8294662065495377`*^9, 3.829466377748321*^9}, {
  3.829467109092773*^9, 3.829467134600066*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"b5b6fa0b-ada2-4e82-a2a5-0b2a87e6cd1d"],

Cell[BoxData["0.9757379792341575`"], "Output",
 CellChangeTimes->{{3.829466311780821*^9, 3.8294663310788593`*^9}, {
   3.829466374331725*^9, 3.829466389919649*^9}, {3.8294671146626883`*^9, 
   3.829467135116297*^9}, 3.829596528932331*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"a6b358e0-2be8-4d5d-b1cd-f8338490d5d4"],

Cell[BoxData["1.110719837275639`"], "Output",
 CellChangeTimes->{{3.829466311780821*^9, 3.8294663310788593`*^9}, {
   3.829466374331725*^9, 3.829466389919649*^9}, {3.8294671146626883`*^9, 
   3.829467135116297*^9}, 3.829596528934857*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"6a549b2f-c9b0-4853-b125-104cc0b12937"],

Cell[BoxData["0.7048223095331452`"], "Output",
 CellChangeTimes->{{3.829466311780821*^9, 3.8294663310788593`*^9}, {
   3.829466374331725*^9, 3.829466389919649*^9}, {3.8294671146626883`*^9, 
   3.829467135116297*^9}, 3.829596528936895*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"9b389e60-da50-4fcf-ab9a-bc861b429914"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Load", " ", "and", " ", "example", " ", "run", " ", "data"}], " ",
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"exampleTCD", " ", "=", " ", 
     RowBox[{"Import", "[", 
      RowBox[{"\"\<cascade.dat\>\"", ",", " ", "\"\<Package\>\""}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"Length", "[", 
    RowBox[{"exampleTCD", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", " ", "1"}], "]"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.829467543280324*^9, 3.829467594734819*^9}, {
  3.829467631487507*^9, 3.8294677088256397`*^9}, {3.829467855626894*^9, 
  3.82946785993467*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"d564ccc5-3146-45dd-bd29-4d079e7c31b1"],

Cell[BoxData["1359"], "Output",
 CellChangeTimes->{{3.829467641986967*^9, 3.829467709078362*^9}, 
   3.829467860914546*^9, 3.829596528958799*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"dc20340e-7fe9-42d8-9aa4-c2a5b9f28468"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Load", " ", "run", " ", "data", " ", 
     RowBox[{"w", "/", " ", "moving"}], " ", "average", " ", "to", " ", 
     "reduce", " ", "noise"}], ",", " ", 
    RowBox[{"100", "-", 
     RowBox[{
     "200", " ", "is", " ", "a", " ", "good", " ", "number", " ", 
      "here"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"avgNo", " ", "=", " ", "150"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maAlgae", " ", "=", " ", 
     RowBox[{"MovingAverage", "[", 
      RowBox[{
       RowBox[{"exampleTCD", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", " ", "1"}], "]"}], "]"}], ",", " ", "avgNo"}], 
      "]"}]}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maSardines", " ", "=", " ", 
     RowBox[{"MovingAverage", "[", 
      RowBox[{
       RowBox[{"exampleTCD", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", " ", "2"}], "]"}], "]"}], ",", " ", "avgNo"}], 
      "]"}]}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maSharks", " ", "=", " ", 
     RowBox[{"MovingAverage", "[", 
      RowBox[{
       RowBox[{"exampleTCD", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", " ", "3"}], "]"}], "]"}], ",", " ", "avgNo"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sardBirths", " ", "=", " ", 
     RowBox[{"MovingAverage", "[", 
      RowBox[{
       RowBox[{"exampleTCD", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", " ", "1"}], "]"}], "]"}], ",", " ", "avgNo"}], 
      "]"}]}], ";"}], "  ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sardDeaths", " ", "=", " ", 
     RowBox[{"MovingAverage", "[", 
      RowBox[{
       RowBox[{"exampleTCD", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", " ", "3"}], "]"}], "]"}], ",", " ", "avgNo"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8294678809740953`*^9, 3.829467904406909*^9}, {
  3.829467940513274*^9, 3.829468025003936*^9}, {3.829468089999474*^9, 
  3.8294681050548563`*^9}, {3.829468174222208*^9, 3.829468178158498*^9}, {
  3.829468349111807*^9, 3.829468351919655*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"a1e727b4-fddb-46f0-ac83-d1b0f63c9e2a"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"startOfCascadeAlg", " ", "=", " ", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"350", ",", " ", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"350", ",", " ", "1000"}], " ", "}"}]}], "}"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"startOfCascadeSard", " ", "=", " ", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"350", ",", " ", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"350", ",", " ", "1000"}], "}"}]}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"startOfCascadeShark", " ", "=", " ", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"350", ",", " ", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"350", ",", " ", "1000"}], "}"}]}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pAlg", " ", "=", " ", 
     RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
      RowBox[{"maAlgae", "\[IndentingNewLine]", ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", " ", "\"\<Kelp Population (MA of 150)\>\""}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"RGBColor", "[", 
         RowBox[{".11", ",", ".60", ",", ".11"}], "]"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], "\[IndentingNewLine]", ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Time (No. Iterations)\>\"", ",", " ", 
          "\"\<No. Individuals\>\""}], "}"}]}], "\[IndentingNewLine]", ",", 
       " ", 
       RowBox[{"Filling", "\[Rule]", "Axis"}], "\[IndentingNewLine]", ",", 
       RowBox[{"Prolog", "\[Rule]", " ", "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"RGBColor", "[", 
                RowBox[{".8", ",", " ", ".4", ",", " ", ".4"}], "]"}], ",", 
               "Dashed"}], "}"}], "]"}], ",", " ", "startOfCascadeAlg"}], 
           "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"Text", "[", 
             RowBox[{"\"\<\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"590", ",", " ", "500"}], "}"}]}], "]"}], ",", " ", 
            RowBox[{"RGBColor", "[", 
             RowBox[{".4", ",", ".4", ",", ".4"}], "]"}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pSard", " ", "=", " ", 
     RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
      RowBox[{"maSardines", "\[IndentingNewLine]", ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", " ", 
        "\"\<Sea Urchin Population (MA of 150)\>\""}], "\[IndentingNewLine]", 
       ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"RGBColor", "[", 
         RowBox[{".0", ",", ".25", ",", ".5"}], "]"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], "\[IndentingNewLine]", ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Time (No. Iterations)\>\"", ",", " ", 
          "\"\<No. Individuals\>\""}], "}"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"Prolog", "\[Rule]", " ", "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"RGBColor", "[", 
                RowBox[{".8", ",", " ", ".4", ",", " ", ".4"}], "]"}], ",", 
               "Dashed"}], "}"}], "]"}], ",", " ", "startOfCascadeSard"}], 
           "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"Text", "[", 
             RowBox[{"\"\<\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"590", ",", " ", "75"}], "}"}]}], "]"}], ",", " ", 
            RowBox[{"RGBColor", "[", 
             RowBox[{".4", ",", ".4", ",", ".4"}], "]"}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", " ", 
       RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pShark", " ", "=", " ", 
     RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
      RowBox[{"maSharks", "\[IndentingNewLine]", ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", " ", "\"\<Otter Population (MA of 150)\>\""}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"RGBColor", "[", 
         RowBox[{".0", ",", ".1", ",", ".5"}], "]"}]}], "\[IndentingNewLine]",
        ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], "\[IndentingNewLine]", ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Time (No. Iterations)\>\"", ",", " ", 
          "\"\<No. Individuals\>\""}], "}"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"Prolog", "\[Rule]", " ", "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"RGBColor", "[", 
                RowBox[{".8", ",", " ", ".4", ",", " ", ".4"}], "]"}], ",", 
               "Dashed"}], "}"}], "]"}], ",", " ", "startOfCascadeShark"}], 
           "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"Text", "[", 
             RowBox[{"\"\<\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"590", ",", " ", "10"}], "}"}]}], "]"}], ",", " ", 
            RowBox[{"RGBColor", "[", 
             RowBox[{".4", ",", ".4", ",", ".4"}], "]"}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", " ", 
       RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.829468299130638*^9, 3.8294683408743353`*^9}, {
  3.829468460201519*^9, 3.8294685224420223`*^9}, {3.829468580253697*^9, 
  3.829468599489192*^9}, {3.8294686577471113`*^9, 3.82946887762138*^9}, {
  3.8294689465865707`*^9, 3.8294689593004103`*^9}, {3.829469060299493*^9, 
  3.8294691925571003`*^9}, {3.829470569887842*^9, 3.8294706145900784`*^9}, {
  3.829470655985861*^9, 3.829470974541634*^9}, {3.829471078830984*^9, 
  3.829471176416553*^9}, {3.829471217381658*^9, 3.829471222026548*^9}, {
  3.829471253622349*^9, 3.829471294889234*^9}, {3.829471350305987*^9, 
  3.829471384275051*^9}, {3.829481231661274*^9, 3.829481251636447*^9}, {
  3.829481419706695*^9, 3.829481425393963*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"06195f67-5b51-45d0-a117-daec5e2f664d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Compose", " ", "plots", " ", "in", " ", "grid", " ", "for", " ", 
    "printing"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"GraphicsGrid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", " ", 
       RowBox[{"pShark", ",", " ", "pSard", ",", " ", "pAlg"}], "}"}], "}"}], 
     ",", " ", 
     RowBox[{"Spacings", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "50"}], ",", "0"}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.829481147283085*^9, 3.829481165682198*^9}, {
  3.8294811993125134`*^9, 3.829481224246541*^9}, {3.829481258218184*^9, 
  3.829481285944084*^9}, {3.829481321742487*^9, 3.8294813990568113`*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"a67383ac-047d-4570-9d8c-1f179f43fcd8"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJztnP2TZFdZx1sSZISAoxVllAhNSMIQl9CQQIaQkJtkIRMSkt5kN5kkm2zv
++x7z3vvvN5+f+++3UQcEaxWokxBjE25WlMaiy4IuJRBRwlmigrSYMRREKYo
0EEjOj3n863y3L/AH27/svXJndPnnvO8P6dz3nzo3P1HXxEKhaZ/LhTq/Ws+
m7f+SfLeN2xceK/Df3B+8P3eR9zn/MLO5ya437lx7cQln3iP+HLn4R+Wr/7c
iHjAmbv86Tu/NSu+wtn+8uS9vy0OO8/8ee8jvtKMXxdf5cz0Pv8hvob53wcP
Op/59PbnWvG1zu6dj3iX8w/f2P48Jr6O9xFHnIG7Fz/70m+K32nW86fidzn7
ep+via93Jr/ufOq1PxLf4HzkwK6ffPEXb4bf7UQ++vKhL79D/B7nK89tf+4R
3+h8b8/qG7OnxEPOq1/4ZPyWkvi9zva3NQ88Jb7JjH9O/D7n5PZur/2L+GYz
/tW3wLewH+L3O73lvf5u8a3OmdZXf/amM2LHqX/+x4P767DrOL2/Xvysnt/m
3L/9ut/9Wz2/zdkR7w/1/HbW/36e3+5cv/OBQ3eY/dun53eY/ZvU891mfFPP
d5v9+yM9/wDr1/MPsH49/6BTLGx/+m7l+Qeda7bfrnw1HLrTuWVng/T8Tuf5
7dW3HtDzYaenjm8Y1fNhZ2e7FvX8Lt5Pz+/qvfz2CvT8Q+ivnn/I2TGHNT2/
2znW+3xHz+92/n17tz//Yz2/x/lCb/tf4fD8HuQJhz7s3NczmNfp+YedHfW9
XM/vdXa281f1/F4n1nvdN+n5fc6T29/2wlv0/D7z/m/V86jZz7fBTtTo3y79
fdTY/3VwJ+qM9TY0ovF7jDxv0Pg9xl5v1Pg9xt5u0vg9Zn/fr/H3O73pT9yh
8fc7w9ure/pOjb/fqfTU7W6Nv9/sb1TjHzD7sVfjH8D/aPwDzv4dBdf4B8z+
HND4vc4/9dT9iMbvNftxQuP3Gn08p/F7nR3/OKnx+5ybegY1q/H7nB31W9L4
fc6XtnfzJ1mN34e9a/yDRr41jX/Q2FtD4x8063tC4x90PvZbvY/GP2T06w80
/iFjf3+s8Q8xTuMfcl7XE9hXNH7E+MdvaPyIWe8PNH4E/byN8SPGnn8JDj3s
vG1ng2HnYee/t73fR2+G3YeRl8Y/bPTxsMY/4vSWuyeh8Y8Ye69o/CPOm7Yf
r/6Oxj9i9K+t8Y8a/fmCxj/q7Ljfv9f4R837bWj8o8Ze/0vj92NftzN+v3N4
+/VfvhJ29xPf4M5+9BEOPUZ80fjH0BeNf8y8X1rjHzPv91GNf9y834rGP44/
0fjHjX/+G41/3Lmy9/m2xh8gHmn8AedVOwp5B+MPGH35FbhzwPj/t8OhmHPb
jkOAwzHsCXZi+Ec4FkPf9f0xE1/KcCtm7G9Z88XM+/4e3I2Z+PcZzX/QvP8F
zX/QfP+faf6DfI/mP+j01OGNX9T8B52euA59WfMfNPL8a81/0Kznec1/0PiD
FzX/IfZT8x8y693Q/IfMfv2b5j9E/NP8h8hPNP8h9EvzHzL+4H80/yEn1Uuv
fmY38x82+cqlcPgw8oOdw8YfvgqOHSY+wO5hYy+Xwa3DRl9+Hu74/r7r+/7Q
EeOf/1PrP2Lsa1PrP2Ls9R+1/iMmX3pB6z9i5P9XWv8RY//PaP1HzP79odZ/
xOmZwyWf0P4fNf6oqvmP4j81/1HzPnHNf9TZCQ8HNf9Rkw/u0fxHGaf5j5KP
af6jxp+8UfMfY/80/zH243a+55iJl/8Mx46Z/OGrsHuMeeDWMZN/fRruHDP+
8jfgLn/vwqHj5INw+LizI66HNP9x439v1/zHWY/mP27289c0/3Ejj9do/uPO
Tjj/Cf6ue5x8RP5vlPXA4VHjDzryp6PID46NmnzjY/Kvo8QzuDWKf5C/HSWe
av5R448e1vwnzPgPaf4Txn7ep/lP4K80/wnkp/lPoO+a/4QvXp0g3yKedU8Y
+fyr4t9Jkw98Ew6fNPne3ykenjT28iU4dhL/pPh40tlJx56GWyeNfv6u4u1J
O353Txp7zmv+U9Qjmv8U+bnmP+XsYEzznyKf1vynyO81/yn8ueY/ZfIV5Wfd
U8RrzX/a+MMrNP9pY4+v1fynTb72U/LV2GkTH7+tfPY0/hdunaZ+gTunjX02
4O5p4y9nlP+eIR+Dw2dYD+yc4f01/xnkr/nP2Pl/6wz+mPqgcwb/DXfP8P6q
H84SD+DwWWN/L8DOWfJ5OHbWyO8vVY+cNf7qc3DrrHnfC5r/LPWC5j9Lvan5
z5n3L2j+c+iD5j+Hf9D858g3NP858ivNfw5/ofnPsX+a/xz1oeaPm/h3Jdwf
N/X5G/Q+cbu+i8TZb71fnO+Bo3H8DfVhLE48geNx/I/qybjxJ1+HvTjxG27F
iS9wO27i5bNwJ449wmtx9A/uxskf4c04/kr165jxD1Nw/5jRj0NweMzk43vg
yBj7Cztjpl5+Jxwdwx9r/WPEW61/DH2kfnfH8L+wN2by4VW4NYb9wO0xU4+d
hTtj+AN4bQz/CXfHkC+8OYb81D8YRz70M/rH6b/A4XGz3s/DkXH8HeyMk8/C
0XHqZzg2Tv4Ix8fZT9gd531hb5z6HW6N2/2e9jjvDXfGycfoD62No19wdxz9
gjfH6SeonzSB/cL9E/Qf4PCE8b8tODKBPGDHx1EfxyZM/vRJOD6BvsLuBP0V
2JugvwG3Jkz9cInWP4F+af0T1Cfw2gT9Dbg7gb7AmxP4G/WvJsnPJf9J6g/J
fxJ/KPlP2v0vZ5L4iz5FJ4kvcGySfhwcn6Qel/5P2vrsTZr8cV76P8n7Sv8n
8Z/S/0mjL78v/Z9EftJ/rUf6P2nq8S9K/6fw73D/FP0+ODyF/sCRKfIF2Jmi
XtD6p9gfrX+KeWT/U6Z+fI3835RZz+vl/6bo18j/Tdn+pT1FfJf/4/2j8n9T
xAf5vynyL/k/3m9S/m8ae5X/m2a/5f+m6X/J/02Tv8v/TVO/yv9N03+Q/5vG
vrT+adufu9P4P61/mn6E1j9tx4v2tN1/7PD+P9X6p+341J2mXwZvTtvxLjTD
/ir+zdAvVPyboR+l+DeDfSn+zZC/KP7N+OL1DPkOHJ8x8SCn+D2D/4S9GfRZ
8XzGzifaM+iv4vsM+gqvzdj5TXeG/r3WP2PnR6GEqadfSf7Un8DfKh9L2PlW
JEH+oPwswf7B0YTxbzcpX0sY+d8KxxP4e+VvCbs/6/n+vpVA3+F2An+i/DKB
fOC1BP125ZsJ4g28maC+Uv55Hn+k9Z/35aPnqTe1/vPkB1r/efqHWr+PY77x
cd987nnjXx7R+n3cOk8/U+v3cec88V/rP2+vt3ve7ndvnvetf9Ye3z9rPw/P
2vNFZu33c2bt9URn7f2LzfrWP2vvn+tjz/f3LR+3fX/fmTX+4ZjWP0v9pPXP
kt9p/bPMq/XPEU+0/jnih9Y/h71p/XPUC1r/HP5I65+jn6N6bc6up+JzZn9f
r/ptzuQXYdibs/vzrTnqX7g9Z/ffO3Nmfe+G1+bsfnt3DnuCN+fsfnto3u63
98/b/fbwvInv98GRefRJ9eE89TwcnffVq/NmPce1/nnivdY/b/KXaa1/nnik
9c/b/fP2PP0irZ/3+YjWP488tf55zhu1/nn6F1r/gpGH/r5/wf6+8IKJr57W
v2Dq3aLWv2D82ZzWv2DyY60vtoD+av0Lxt8/qPUv2PvtLdj1e2vBlm97wT6v
6SyQD2r9C9RrWj/f/xqtf4H4qPUvUp9o/Yu2/oYX7fOpiI8dH0cXyVe1/kUj
v1dq/Yv0p7T+Rft8y1sk/mj9i2b/+7X+Rft8rON737VFu1/RXaS+kf0vGv/8
kux/ifxW9r9k23t4ifgr+18in5f9L9nng9El099Nyv8tGf8wLv+35PN/S+Rv
8n9LdnxsLdnnme0l/In83xL9LcX/Jbuf0V2iXlb8X6I/qfjvUq/AfS7+UvmQ
i/+HB1xffuTa/YJB167/I66d3w251I/KH1073xx2sRflky75BDziks8pv3SR
L/n2qEv/QPWGa5+nJ1zOY1R/uMQzuOCSz6gece16eZm//7rqU5f9hFdc+/cF
bdf4i7vgVZfzGNVvLvUD9d5Fl98fqJ51yRfhdZd4rfrWJV7AGy76z+81Nl3q
S3jLRX/1e44k8ob7ksQDuD/J+8IDSZPffnfIcDhp9OEv4MEkvyeAI0n0HR5K
Uq/CThJ9hoeT7MeNhqNJ+tHwSJJ8GY4liffwaJL+DBzn738ZTiSpr99j2E1S
n8CFJPYMe6z3FLycNP7hA3ArSX4Mr7CfP3634XaS+hJeTaKPcCdp/HMZvpjk
vANeSyJveD2Jf4C7SepFeEP7CW8myfdvMLyVpH6FQyn6mXBfivwH7k8RT+GB
FPsGh1PkX/BgivwbjvB974CHUsQn2EnhL643PJyi/oOjKfwXPJLC3uAY39eE
R1PYHxxP4U/gRAr5wW6KfgVcSBG/YC+Fvb/L8HKK38fArRTyg1e0H3A7hb+E
V1P4L7iTQt/fafhiiv4QvJbC/uH1FPkX3E1Rz8IbKfxhxPBmCv2Gt1LYJxxK
k6/DfWnkBfen+Tt4II3/eIfhcNr423vhwTT5BBxJE0+vMzyUNvVmFnbS1HPw
cJr4DkfT1K9vNzySJl7DsTT9Ung0ze8j4Hia+htOpLEn2E3zeyW4kEY+sJdG
P3cZXk6jD3BL88Mrmh9ua354VfPDHc0PX0yT/8BrWv+vG15P07+Eu5IHvJGm
vwNvpvHn8FYafYFDGfQd7svgv6413J/B38MDGewTDmeQBzyY4f3gSIb+MTyU
Yb9gJ0N+BQ9nsC84miFfgEcynKfAsQz9KHg0gz+A4xn0HU74nrsZ4glc8LGX
wb7h5Qz5HdzKIF94JYP9w+0M9Ti8miGfgTsZ4gd8UfKA1zLUl28zvJ4x/uxb
cDdDfIE3tN/wpvYX3tL+waEs/W24L8v+wP1Z1gsPZIlPcDiL/4AHs/QD4IiP
h3x/72TZL3g4y37C0Sz7D49k0Xc4lsW/waNZ7BOOZ7FfOJGl3yr5Z8lHJH+9
r+SfxV9J/llbH1tZW/9XsrY9tbP8ng5ezWL/cEf7C1/Mov/wWhZ5y/6z+Cf8
QzeL/4Q3stg/vJnFPuCtLPoAh3Kc38J9OeaD+3O2/xvI2f4xnCNewIM5zm/h
SI78Dx7KEZ9hJ4e+wcM54jsczaHP8v855Cv/n8M+5P9zxB/iRzxHfQIncvhb
2M0Rn+FCDn8Jez5eztnxqpWjXodXfN/XzqFf8Kr2C+7kyD/gizn8M7zme//1
HPoLd328kcOfwJuSF7zl259Q3t6/vry9v/157AseyOM/JP88/lLyz2Ovkn+e
+k7yz+NvJP+8Hb+H88QPyT9P/Sj5533xP088kvzz1PeK/771JfLYp+Sft/e3
kLfl5eXJbyT/PP5K8s/Tr5L88+iz5K/9kvzz6LPkn8feJH+9H/nTWh79gNfz
xBO4m8ee4I28nZ9t5rFveCtPPgGHCtS3yv8K6JPyvwL9fuV/BeIXHC5Q38KD
BfoFcKTA+RM8VOB9Yadg56PDBfQDjhY4T4JHCnY+G2P+L8OjBepdOM77rMOJ
AucjsFsgv4ELBfwd7Gl/yK+XC+gL3CqYeHAdvML73Qq3eZ898GoB/YE7Bc47
lf8X+L2Q8v8C9aLy/wL1kPL/Av0e5f96f3izYNcbW+zn9XCoyPvBfUX6s3B/
kX4rPFDkvA8OF3kfeLCIPcKRIvUnPFSk/qO+cor0W1T/6X1U/xWJZ6r/iuyP
6r8i/RLVf0X8l+q/Iudb1JuJIvKCXc0HF4r062CP923Cy0W7Pm4V6X/AK0W7
nm4Xyc/g1SLndXCniPzgi0X8AbxW5PwTXi+ir3AXeX0f3ihS/8GbPt7ycahk
j+8r8fsU1f8l+iWq/0v4V9X/JfZb9X/JXm+kRP2n+r+EvFT/lzjvhIdLyBeO
lujXwSMlWz6xEr8vgUdL5G9wvIT/lvxL9E8kf+a/WvIv0S+X/Euc56NPy3z/
i3CrhLzhlRLxDG6XsF94tYR/hjslzifgiyVbv9d4nzK8XqIfAHe1P/BGCX8C
b5Zs+9lCnifgUJl8HO4rk5/C/WXyOXigTL4Dh8vES3iwbPdTImXyGXioTD9R
9l8m3sj+y/TrZP++5yM+jvn+ftTHcd98iTLnJer/lDl/U//Hx56Pl8v4f8nf
930rZfpxkn+Z/F/yL/N7PMm/TLyQ/Mt2f2qtTP4p+fvk0S2j35K/jzd9vFXm
vEHyr9jy7qvY+tBfof8p+Vfs/lq4wu/pJP8K/ULJv4J9S/4V6hvJv8LvcyT/
im1P0Qr5n+Rfsf17rIK/lPwr+CfJv4L/lPx97Pq44BvvVcgXJH/ffC3265uS
v4/bPl6t2P3Njm89FyvkK5J/hXxX8kdeX5P8K+TLkn/F7pduVmx/tFUhfkn+
Vdsf9VVtf9RftfurA1XyAcm/6pN/1fZHkartj4aq5BeSf9XWt+Eq/WPJv0q+
KflXOe+Q/Ks++6/a/dt4lXhG/pGosn+wWyV+wwW+/1OwV+V8TP3fKucl6v9W
yXfV/62a/R5S/7eK/1H/t8r5jPK/Kvqk/K+K/iv/q9JvUP5XtfPDbhV7VP6n
/VT+V8WfwFtV/BEcqpGPwX013k/5f434r/y/xv4p/6+xf8r/a9i78v8a9aHy
/xr6ovyf+RaV/9eIV8r/ayafPa/8v4Z+Kf+voY/K/2v83lf5fw19V/5f4zxJ
+X8N+1H+X8PelP/XiPfwcg15wa0a/gNeqaFvcLtGPxVerfH/l8CdGvmp5F/j
95SSf434IvnXqMck/xr6JvnXiBeSP+t5SPKv2fVHqI4+S/51+l1wfx39hwfq
1GdwuG7r52AdfYAjdc5j4aE6/hB26uSf8HDdto9onfMA7GekbtczsTrxGB6t
0/+A43Xisey/zv7J/uvUH7L/OvmM7L9Ovij7r9P/kf3X8Vey/zrnM7L/OufL
sn/Wf0DnP3X7vOhi3a6/1uq2v1lnfxbhLvtTgjfqxF94s449qv6rU0+r/vNs
/3epRz2tetCz/eVlHvqv+tCjHoEv9+i3qF700H/4Cg/9V/3o8R7466s8+lOK
Jx7nmfAuD/krvnjIG77Bs+PDkEe9B9/s2fmq49n57G7Wf5fikWfXo/d41BeK
Tx7yg/d6dr404nu+3zc+5qEv8BHf/KOenR+e9uz8Me7Z+fakZ+ejCc+ut+c9
Oz66HvUN8sjwvt+RPXj2+WfFw55lHx79LPgJ3u+C7MWz9e/jHvFA9oO8c/CT
Hv1/2ZP2E37K4/fNsi/Ptr8Lnm2vq9of+BnPd/4q/YOf9fDf8see3V95zuP3
y/LPnn1e+zzzrchfe5wHwi961HPy38zvwi9hP+Py5x6/J4W/hz3uk3/37Pj+
I8+OB1ueHS9e9ux4Empw3ghf2rDjUV/Djl+XNex419+w4+XlDfIX5QsN8k/4
igb5pvIH5m/AVzXYD+UTDc6b4F0N+7w60kD+8A0Nuz851KC+h2/WepV/aH30
Q3fzfc/Bww3yQfge9icLRxucb8B7G/gTeKRBfIL3az76vbEG/RL4SIPzD3i0
YZ+Xn9Z8Ot/QeuFJrU/nHQ1+X0D/e75h9/Pdht2/zzToD+g8vGGfj1f0/pwH
eQ37POmJhn3+tNzgPAT+eAP/rvPzBvUQ51tP6vvglQb2Aj8l+et8TeuHL2i/
dd7WsM+zn9F+6/y1YZ/nPdvgvELnsdpv+DmtR+ezDfs88fmG77xW+gS/2LDP
X7sN4jn8UoN4o/PcBv4L/l4D/63z3QbxeNDwjyRfeKvB+R/8coN6AQ41qV/g
S5vER7ivSf8GvqxJPIb7m+zvWw1f3sQfwANN7B++oom+weEmv9+Cr2qSv8KD
TewX3tVEf+BIE/2+xvANTfYbHmqiT/DNTfwx7DQ5f4V3N5E3PNxEv+B7msQP
ONok/7na8N4m+w+PNKmf4f36fjim/YaPaH3waJP+x1WGTzfxD3C8ib7Ck03y
DTjRJF+F5yVP2G2af0Nwpkm8f4vhguaDK9ov2GuSz8BPaL/g5Sb2AX+8iX1c
abglecFPNokP8EoT+4Cf0v7Bba0XvtDEf8GrvufPNPEfcEf6Dz/bJL7CF338
nO/v13zf97z0GV5vks/AL0pecFf2AL+k/YY3pE9waPPW0P/9bEh++gT3dwX3
dwX3dwX3dwX3d5nxwf1dwf1dwf1dwf1dwf1dZv7g/q7g/q7g/q7g/q7g/i4z
f3B/l/me4P4us/7g/q7g/q7g/q7g/q7g/i6z/uD+ruD+ruD+ruD+ruD+LrP+
4P6u4P6u4P6u4P6u4P4us3/B/V3B/V3B/V3B/V36vXxwf1dwf1dwf1dwf1dw
f9cOB/d3Bfd3Bfd3Bfd3Bfd3GQ7u7wru7wru7wru7wru7zIc3N8V3N8V3N8V
3N8V3N9lOLi/K7i/K7i/K7i/K7i/y3Bwf1dwf1dwf1dwf1dwf5fh4P6u4P6u
4P6u4P6u4P4uw8H9XcH9XWbjzb/B/V3/b+/v+l9BL2CD
        "], {{{}, 
          {RGBColor[0., 0.1, 0.5], Opacity[0.2], EdgeForm[None], 
           GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl2GO3GIYSBdAb27Zt27Zt27Zt27Ztm23YxrbRRm/n9cNeM//gnJlEjTtU
bh84ICAgEHuD/jf3BP1v380udrKD7WxjK1vYzCY2soH1rGMta1jNKlayguUs
YylLWMwiFrKA+cxjLnOYzSxmMoPpTGMqU5jMJCYygfGMYyxjGM0oRjKC4Qxj
KEMYzCAGMoD+9KMvfehNL3rSg+50oytd6EwnOtKB9rSjLW1oTSta0oLmNKMp
TWhMIxrSgPrUoy51qE0talKD6lSjKlWoTCUqUoHylKMsZShNKUpSguIUoyhF
KEwhClKA/OQjL3nITS5ykoPsZCMrWchMJjKSgfSkIy1pSE0qUpKC5CQjKUlI
TCISkoD4xCMucYhNLGISg+hEIypRiEwkIhKB8IQjLGEITShCEoLgBCMoQQhM
IAL4FSQg4Cc/+M43/uUfvvKFz3ziIx94zzve8obXvOIlL3jOM57yhMc84iEP
uM897nKH29zib/7iJje4zjWucoU/+YPLXOIiFzjPOc5yhtOc4iQnOM4xjnKE
wxziIAfYzz72sofd7GInO9jONrayhc1sYiMbWM861rKG1axiJStYzjKWsoTF
LGIhC5jPPOYyh9nMYiYzmM40pjKFyUxiIhMYzzjGMobRjGIkIxjOMIYyhMEM
YiAD6E8/+tKH3vSiJz3oTje60oXOdKIjHWhPO9rShta0oiUtaE4zmtKExjSi
IQ2oTz3qUofa1KImNahONapShcpUoiIVKE85ylKG0pSiJCUoTjGKUoTCFKIg
BchPPvKSh9zkIic5yE42spKFzGQiIxlITzrSkobUpCIlKUhOMpKShMQkIiEJ
iE884hKH2MQiJjGITjSiEoXIRCIiEQhPOMIShtCEIiQhCE4wghKEwAQigF9C
8Cc/+M43/uUfvvKFz3ziIx94zzve8obXvOIlL3jOM57yhMc84iEPuM897nKH
29zib/7iJje4zjWucoU/+YPLXOIiFzjPOc5yhtOc4iQnOM4xjnKEwxziIAfY
zz72sofd7GInO9jONrayhc1sYiMbWM861rKG1axiJStYzjKWsoTFLGIhC5jP
POYyh9nMYiYzmM40pjKFyUxiIhMYzzjGMobRjGIkIxjOMIYyhMEMYiAD6E8/
+tKH3vSiJz3oTje60oXOdKIjHfhdpNrRlja0phUtaUFzmtGUJjSmEQ1pQH3q
UZc61KYWNalBdapRlSpUphIVqUB5ylGWMpSmFCUpQXGKUZQiFKYQBSlAfvKR
lzzkJhc5yUF2spGVLGQmExnJQHrSkZY0pCYVKUlBcpKRlCQkJhEJSUB84hGX
OMQmFjGJQXSiEZUoRCYSEYlAeMIRljCEJhQhCUFwghGUIAQmEAH8Unx/8oPv
fONf/uErX/jMJz7ygfe84y1veM0rXvKC5zzjKU94zCMe8oD73OMud7jNLf7m
L25yg+tc4ypX+JM/uMwlLnKB85zjLGc4zSlOcoLjHOMoRzjMIQ5ygP3sYy97
2M0udrKD7WxjK1vYzCY2soH1rGMta1jNKlayguUsYylLWMwiFrKA+cxjLnOY
zSxmMoPpTGMqU5jMJCYygfGMYyxjGM0oRjKC4QxjKEMYzCAGMoD+9KMvfehN
L3rSg+50oytd6EwnOtKB9rSjLW1oTSta0oLmNKMpTWhMIxrSgPrUoy51qE0t
alKD6lSjKlWoTCUqUoHylKMsZShNKUpSguIUoyhFKEwhClKA/OQjL3nITS5y
koPsZCMrWchMJjKSgfSkIy1pSE0qUpKC5CQjKUlITCISkoD4xCMucYhNLGIS
g+hEIypRiEwkIhKB8IQjLGEITShCEoLgBCMoQQhMoED/Hb+/jJ/84Dvf+Jd/
+MoXPvOJj3zgPe94yxte84qXvOA5z3jKEx7ziIc84D73uMsdbnOLv/mLm9zg
Ote4yhX+5A8uc4mLXOA85zjLGU5zipOc4DjHOMoRDnOIgxxgP/t+/wF+/wDY
zS52soPtbGMrW9jMJjaygfWsYy1rWM0qVrKC5SxjKUtYzCIWsoD5zGMuc5jN
LGYyg+lMYypTmMwkJjKB8YxjLGMYzShGMoLhDGMoQxjMIAYygP70oy996E0v
etKD7nSjK13oTCc60oH2tKMtbWhNK1rSguY0oylNaEwjGtKA+tSjLnWoTS1q
UoPqVKMqVahMJSpSgfKUoyxlKE0pSlKC4hSjKEUoTCEKUoD85CMvechNLnKS
g+xkIytZyEwmMpKB9KQjLWlITSpSkoLkJCMpSUhMIhKSgPjEIy5xiE0sYhKD
6EQjKlGITCQiEoHwhCMsYQhNKEISguAEC/j/uf+78v+O/YD/AWsLTu4=
             "]]]}, {}, {}}, {{}, {}, 
          {RGBColor[0., 0.1, 0.5], PointSize[0.006944444444444445], 
           AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
ZwMb2cRmtrCVbWxnBzuD/P/P9T+3BU1r
            "]]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox["\"No. Individuals\"", TraditionalForm], None}, {
         FormBox["\"Time (No. Iterations)\"", TraditionalForm], None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{34.1484375, 3.390857475344319}, {34.5, 
       14.750000000000057`}},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"Otter Population (MA of 150)\"", TraditionalForm],
      PlotRange->{{0., 1210.}, {0, 40.12}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Prolog->{{
         Directive[{
           RGBColor[0.8, 0.4, 0.4], 
           Dashing[{Small, Small}]}], 
         LineBox[{{350, 0}, {350, 1000}}]}, 
        StyleBox[
         InsetBox[
          FormBox["\"\"", TraditionalForm], {590, 10}], {
          RGBColor[0.4, 0.4, 0.4]}, StripOnInput -> False]},
      Ticks->{Automatic, Automatic}], {155, -111.24611797498106}, 
     ImageScaled[{0.5, 0.5}], {360, 222.49223594996212}], InsetBox[
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJztXPmXnFWZLlkDKNM6GW2RkRYBo2awBYQGWS4aoFmEykoHAql0Oklnr973
7q/2ravqq5KD0cGxZY2CnGZOGDMYDiWbraDTI8yQUfS0DGgcEVtEJzA4M108
z5Nz7v0L/OHrX3Ke3Lrf/d773Pe973K/+5H23Ss2HRUKhfpPCIXq/+Jv/rID
31n4++lqw/8wl9/3nt6fhNYQLzK/GF784FXvEm4wkaVvPlX9P/1+sYMbzfhD
L3/g2v8VPtWsKz/+xyVvCzeZkYXH/eIt4dPN2tcLZz52WPgMc/vb7d//1J+E
zzL1nw+/IbzEnFv/+4PwJ8yK/R9O/eb3wktN/eeLXxM+23z/UwtP/LVws1lW
/3tZ+NPm5z+r/wmfYwbqfy8In2vq4oz/q/B55sQX7ope8gPhz5i7o5ec+MIT
wudjPh4TvsD8xCxM6CPCLaa3/h/7hC80k2c+1vb6/cIXmeMv2jn13L3CnzUL
rYUzvyZ8samLu3yP8CWmuT5hZeFLzULrwk+ELzP1xx03LGxMnY51u4k9Y47+
6vmzWzeq/XLzlS8v/K1V++Wma0G8u8Jq/5x5urp+6ZtXqP1z5s8LdN1+sdo/
b54/bmHEc9X+ebOtPsDH1b7MxK//0KF9H1H7MszPKWq/AvOzWO1XmN+9tvB3
stqvNNfWF9hJar8S73Os2q8yC9JetDOk9qvw/LdWsb2V64nYa8XzX1P71ebQ
vtjCG6r9avw7p/ZrsF4Pqv0avO/zar8W8/svar/WfLyuADNqv85srC/Ix9V+
HfTjgNq/YP60ZOF/Hlb7F0ydvou+pfbroZ9Tar/ePFx/3dvUfoPJZet/ar/B
fKgu0Ijaw2Z26wIhUWITxvrdqN+HoX9riGth8HW5+i+HfJ9S/+XmtHcWnPov
h/6drP7LoV9/Xsn+K6ivxGYF55vYW8H5Jq6twHr8D/VfyflX/5XmgrpA/67+
K83q+t+/qb+DQ6vA//Pqvwrr9Tn1X0V9V/9VWP+z6r8a8ydsVpv31v/0e281
5DvSf7X54sLyfOrH6r8GfB0Zf41prC/oF9R/jS1vbQ309yfqfyP4/Kn634j1
rXbPwbUbnflrc+avDfZE2HNwzfl9aK0932atLZ+31txQf8Efqf9a82rdHD2j
/jeB7xn1vwn2+En1vwn6W1P/m7BfPKL+N4PPh9X/Zsz/Q+p/M/VF/W+Gvf6m
+q/D+HvVfx3trfqvgz25R/3XmVcWlsNDd6v/Leb0+t+d6n8L7N8d6n8L9Od2
9b8F+lJW/1thD3PqfyvsQVz9bzX15RYdU/9bsT4G1H891muP+q+nPqv/esi7
Tf3XU7/VP2Lq5v7oW4ibItjvbtTzInhemDgSMT98duHvOj0/gve7hHgqQnug
8SLYTz5KPBfB+j1F42+Afr1X428w939z4e9Ejb+B/gDtQGTDO6vZ/IrY28D1
STy1wWyu/z1NXOPzH5Id2cD9kzjUburb8/pJ4qZ2U4dLh4hNO/jfpPHbTf11
2lZo/HY87zKN347942yN3057qPHboQ8na/yNWC9vL+f4G6EfvyE2bH+ROLLR
nFzfYH5I7G2kf0E8tRH25iHi2kbM133Ecxvhj/0DcaiD61Pjd8BelzR+B9ZL
QuN3cP1pfP5+l8bvgL+xSeN3QP5bNX4H+L9J42/i/qLxN2E9r9T4mzjfGn8T
7Iuwtwn6vlzjb4L8wrVNsO+rNP4m+jMaf7N5x9+9WeNvhj63a/zNmL8tGn8z
5n+nxt+M/blP42/G/I5r/M1Yj2mNv5n+mcbfAn/hNo2/Bevvyxp/C/bbr2v8
LfAf9mr8LbR3Gn8L7aPG30J7qvG3QH+f1fid3P80fif3B43fCXl+rvE76S9r
/E74q1qvU52Q5w2N30l/X+Oz/zFa/1vpn0n/tjJ+0Phb+Tvp31bom9o9p//U
VtijP2v8rdhf9T5zW7Ef/Fbyb6M9kfzbzBN18/ySxt8G+/Wfkt9p97ZhvQhP
bbPnp7YN+8kvNf42Z/ztjG80/nZzVl3AY2V/tmN/fb/k325a6wHYx2R/tsP+
tUj+7VgfrbI/22nPZX+20/5r/nfQ/9f872B8oPF3cD/S+Dtgnwoafwf0raLx
d5j6bnDilzT+Du6HGn8H+JrS+DuhH/dq/J3cjzW+gyMO9nZSHzS+017byf1c
4+8EP3dr/F2IZ7+u8XfZ72d20V5q/F2wF3+v8XfBv/qKxndwbRfmU3jO6R/a
bc9P027sx1/V+Lvt/SqyG+vvTo2/G/b2Ho2/25HfwXO7EQ8Ih6KIh79B3BDF
fviA3icK+/4gcXMU9u9bej/n9+Eo4rH79b5Rm59o1H5fL8r4hdiP2vJPReHf
ar6mo9BvtdeiNl+zUejrXZI3Cn25j3g+Cvun9w11cb+U/F3Qx3+S/F20p5K/
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
Py7+E8zXiP8EzxeI/wTrceI/wXyP+E9gv/62+Of7HhD/Ceb3xH8C9vlJ8Z+A
/XtK/CeY/xP/5O8J8Z9gPVz8k78Z8Z9k/ln8J5lfFv9J6M9z4j/JfLP4d/CS
JPOH4j/JfJz4TzKfJ/6TsGd/EP9JyHvMjcBhPm8xcVsS/t9HiSNJ2nfiziTP
nxFHk9h/riQeTDI+JfY4/kribJLxNrHP560j3pPkuMRTSdRj2on38v02Ek8n
mY8h3p9kPoK4lqR9J55Jwl/cTjxLfnYSH0xCn3YRz5GvKPGhJPbTbuL5JPNz
xIcdHErZv1+Ugn52ETek7Oc3puzxm1KshxMvSTF/T9ycYn6GuCXFfBGxSdH/
I25NYT13iH8Ht6Xs+Y2kaC/Ffwrra4P4T9l8DaaYvxD/KZvfbIr7sfhP0Z8V
/ynmf8R/ivkf8Z+ifRf/KfrH4j9F/0D8p7g/iP8U42nxn6K/Lf45f63iP8X9
RvxzvpaJ/xTswefFf4r+jPhPkwfxn4Z/eKn4T9v61JhmfCD+08g/XSj+0zgP
8Rnxn4Z9OE/8p7G+pK8mjfXVLP7T9N/Efxrr5xPiP414aYn4T0P+s8R/2rYP
0TTsaZP4TzM+Ev9pxoPiPw3/6MPi38F7nN9PcX5OFf9pxP8fEv9O+35n/Jrz
fjNprOfTxX8afJ4h/tOMT8V/mv6K+E/Dvmt+5tM8byv+04z/xH8G/t9S8Z9h
fkn8Z3ieS/xn4P+Jv6YMz/eK/4zDfwb6cb74d7BxcGuG+Snxn4G+Cbc5v49k
6M+L/wzs2zniP8P8mPh35PUyjB/Ef4b5OPGfsdfTnozNz1SG8yD+M/b6mM5A
X04R/xn6n+Kf7/s+8c/5/ivxn2G+U/xn6P+K/wzPP4v/DPg+QfxnsN8cL/4z
zF+K/6y93y7KMr8i/rPY344S/1nmW8V/ludvxH+W+VLx7/y+xcEmy/cQ/1nG
l/L/svB3XpH/l2X9Uf5flvGv/L+s7T9Fszw/Lf8va/tzXtb2D7NZ8FGV/5fl
+Wn5f1nWi+T/ZVlvk/+Xtf3zac7nRvl/Wdvfr2VZD5D/l4X+KV6YzYK/q+T/
ZeG/K96Yy1L/5P9Rvo/L/8vSfsn/yzLelv+XY3wu/y8He/6m4r8c6lG/U/zH
3/9S8V+O+U3FfznI96LivxzPMyv+y7GerPgvx/PPiv9z9B8V/zvtbTnWXxX/
5yDPjxX/5+i/Kv538GCO+VvF/zmez1D8n+P5SsX/OejbM4r/c6zvKv7P2d9z
7M1h/fyj4v8c8z+K/3M8P6z4Pwf78BXF/znGV4r/OV/9iv/Zv0PxP+Vfofg/
x/qK4v+cnR85nIM+/I3i/zz1W/F/nvld5X/yPG+u/E+e57WV/8kzHlL+J8/4
TvmfPM/TKv+Xx/xtUP4vD39X+cTWPONr5f/4fqcr/5dnfUX5vzzzTcwXd+a5
XpVvztv598E84xnln/OMj4izefv8hp+Hv/sg8Z48zy8pP53n+STivZJf+fq8
fb57f96uH9fy9vnuGc2X8vl5ux5/kPJ3Kb+ft+vBh/J2vXY+T3+Y+HDerm+G
CnZ9cFGB52FVD3DaGwtOfbRg1wOXFMiv6gUFxkfELU67cdpbC3Z9Nlyw60Vt
BbueHSmAf43f6bxftGDXbwcLdj3VK0AfVJ/KFnheWPwXqF/iv0D/XfwX7PPx
ex08XYC9uUH8F+x6Wa0A//Ya8V+gfy/+C1hvV4j/AvhUPW6uQH9d/Bfs81bz
Bazni8R/AfmgFvE/SX9N/E9yPxH/k5D/HPE/Sf9d/E/Sfxf/Dm52cIvT3zjj
tU5i/s8T/w5um2Q8If6d/p2OPNFJ+o/if9Kud3qTjF/Ev9PuO/33TNI+iX9n
vL3O+04787d/kvGN+J+0690zk9yvxT/H/4D4n2R+U/xPYr9YJP4n6Y+J/0nw
/xbr2Yed9lDRrl8vKoIf1a8bipgf1d8bi6yXif8i4w/xX7Tr081Fm6+Wol1f
NkXGq+K/CP9J5wfCRft8RVvRtheRon0+prNon6+JFu3zRIOUNy/+i7a9zhaZ
Hxf/Rfv7oD1F7u/iv4h47lHxX7TPg00X+f2o+C/a9dlaEfqh+ulMkXyJf77/
u1T/KTI/rvpPkfGA6j9Ffh+p+k/R3i8POzhU4vc3qv+UmC/X/l9i/k37fwn+
ruqNTSWuT+3/JdjXRu3/Ja4f7f8lxsfa/0uMj7X/lyCf6q/hEuM17f8lxnfa
//k+F6j+VwJ/l6r+VwJ/rar/lbgfqP5Xor+u+l+J/r3qfyXob1X1vxK/p1H9
j89TvW5viectVf8rsT6i+l+JfKv+V7L9rxnKp3rYbIn6JP+P418l/6/EeZD/
x/kYkP9X4nlB+X8c7075f2XWH+X/le3vlxvKtj/eWMb5iJfk/5exfvS99ZKy
/X13cxn7l+o5LWW7PmPK/N5X+V8+/3TFf2XmKxT/8X3OU/xXZn5K8V+Z9kTx
Xxn6fo3ivzL3Y8V/ZeZ/Ff+Vmd9T/FemP6T4j++n+sxUmflNxX+cD9Vjpsv8
PkjxX5n+neI/Pn9E8V+Z/qDiv7Idbx4s87yh4j/ypXrNoTLWR0bxX9mu1xzm
fKheE/IR/6g+c4yP+fii4kEf9lT1l3f7dn2lwbfrKYt91sdVL/B5npX4VAc3
+fweg/gMH/LcpXqCg5c6/ZsdfJ7P8/9abz79deKLfX4PovXn8/sT4mU+4zOt
R+f9rnNw2Bl/lY9/p7ReHbzOwRGf3z8Qdzjz1+m8/w6f+5HWt8/vWYl7fcRT
qk8N+ow/iUd9u17lkf8HiZM+zydIH3zud8STPu8rkH44+Dbfrnft8e38yx0+
z7tLf3zsF/uJ7/YZT0uffOjDo8QP+NgPvyv98u162D4f9uIZ6RvXs+pXB3ye
z5L+kb+XiJ/kfP6X9NHn9+nEz/L93pJ+cr0pX/Y851/5uIM+8y3EL/rcD5W/
43pQ/vBln/uf8nnkS/nwV307nz7v058ifsO38/uHfbs+8Dblu0b5vwr9LeJj
KvAfVI9YVOF5PuJ3V/j9pfKDFZ7/JF5csesljRV+X0x8agX/qh7TVGF8R3xG
hfGr8okVnvclXlrh+SDlFyuMf4nPc3BLxa5HXVyhv6j8Y4XfSxMvq2B+e5WP
pHz9xNdVWE9XfrrC893Eqyr0N5Wvpjxp4nV8n4Ly15xfn7iD49+mfHYF+9GX
iHdU+H2Z8tsc/w7i3gr80a8q313h91HEoxXu/8p/c/7vIk5WaG+UD6/Q3yGe
pDz3Kj/utN9WoX1Svpz8fYP4DvJ3v/LnnA/huyu0R8qnV/i9DvEDFdoT5dc5
H48Q7+N6e1T59gq/jyY+UIF9fVz59wrr58RPVqB/TykfT/m+R/ws5X9a+fkK
z8dI/53+B53+L1Z4X4z0n/I/I/2n/D+S/nN9zEr/K/THpP8V5sOl/xV+ryL9
53r4mfS/wu9tpP9Vft8q/a/yPJj0vwp5XpH+V/m9mPS/yvOj0v8q/A3hxirt
qfS/iv3oVel/lfetSP+rvK9H+u/gpVWeR5P+V+HP/U767+AWB19cZX5Q+u+0
L3Oe3+q873VVfu8s/a/yfKz032lvq8Ieqf8653kRR74OZz46nffdUeV5W+m/
097r4EFHvlEHe87vk87zs1XEi7+X/ld5nkv6X2W9RvrvtO+poj73R+l/lecF
pf9VngeT/lf5/bb0v4p/Q23494Eq9uujiKe5Xo8h3sf1eizxfq7X44kPcL0f
TVxznv+kM/5MlfdTSf+rPK8s/a/y+23pf5XnWaT/zny8WIU/IDxXpX8h/Xd+
f6jK+4mkr/OX7fvWijvv+H34SLuFg/u7gvu7gvu7gvu7gvu72D+4vyu4vyu4
vyu4vyu4vwvjB/d3Bfd3Bfd3Bfd3Bfd3Yfzg/q7g/q7g/q7g/i7JH9zfFdzf
FdzfFdzfJfmD+7uC+7uC+7uC+7skf3B/V3B/V3B/V3B/V3B/F+YvuL8ruL8r
uL8ruL9L5+WD+7uC+7uC+7uC+7t0Pja4vyu4vyu4vyu4v0v8B/d3Bfd3Bfd3
Bfd3yf8L7u8K7u8K7u8K7u9ivji4vyu4vyu4vyu4vyu4vws4uL8ruL8ruL8r
uL8ruL8LOLi/K7i/K7i/K7i/K7i/Czi4vyu4vyu4vyu4vyu4vws4uL8ruL/r
L/T+rv8HN+xniA==
        "], {{{}, 
          {RGBColor[0., 0.25, 0.5], Opacity[0.2], EdgeForm[None], 
           GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl2GO3GIYSBdAb27Zt27Zt27Zt27Ztm23YxrbRRm/n9cNeM//gnJlEjTtU
bh84ICAgEHuD/jf3BP1v380udrKD7WxjK1vYzCY2soH1rGMta1jNKlayguUs
YylLWMwiFrKA+cxjLnOYzSxmMoPpTGMqU5jMJCYygfGMYyxjGM0oRjKC4Qxj
KEMYzCAGMoD+9KMvfehNL3rSg+50oytd6EwnOtKB9rSjLW1oTSta0oLmNKMp
TWhMIxrSgPrUoy51qE0talKD6lSjKlWoTCUqUoHylKMsZShNKUpSguIUoyhF
KEwhClKA/OQjL3nITS5ykoPsZCMrWchMJjKSgfSkIy1pSE0qUpKC5CQjKUlI
TCISkoD4xCMucYhNLGISg+hEIypRiEwkIhKB8IQjLGEITShCEoLgBCMoQQhM
IAL4FSQg4Cc/+M43/uUfvvKFz3ziIx94zzve8obXvOIlL3jOM57yhMc84iEP
uM897nKH29zib/7iJje4zjWucoU/+YPLXOIiFzjPOc5yhtOc4iQnOM4xjnKE
wxziIAfYzz72sofd7GInO9jONrayhc1sYiMbWM861rKG1axiJStYzjKWsoTF
LGIhC5jPPOYyh9nMYiYzmM40pjKFyUxiIhMYzzjGMobRjGIkIxjOMIYyhMEM
YiAD6E8/+tKH3vSiJz3oTje60oXOdKIjHWhPO9rShta0oiUtaE4zmtKExjSi
IQ2oTz3qUofa1KImNahONapShcpUoiIVKE85ylKG0pSiJCUoTjGKUoTCFKIg
BchPPvKSh9zkIic5yE42spKFzGQiIxlITzrSkobUpCIlKUhOMpKShMQkIiEJ
iE884hKH2MQiJjGITjSiEoXIRCIiEQhPOMIShtCEIiQhCE4wghKEwAQigF9C
8Cc/+M43/uUfvvKFz3ziIx94zzve8obXvOIlL3jOM57yhMc84iEPuM897nKH
29zib/7iJje4zjWucoU/+YPLXOIiFzjPOc5yhtOc4iQnOM4xjnKEwxziIAfY
zz72sofd7GInO9jONrayhc1sYiMbWM861rKG1axiJStYzjKWsoTFLGIhC5jP
POYyh9nMYiYzmM40pjKFyUxiIhMYzzjGMobRjGIkIxjOMIYyhMEMYiAD6E8/
+tKH3vSiJz3oTje60oXOdKIjHfhdpNrRlja0phUtaUFzmtGUJjSmEQ1pQH3q
UZc61KYWNalBdapRlSpUphIVqUB5ylGWMpSmFCUpQXGKUZQiFKYQBSlAfvKR
lzzkJhc5yUF2spGVLGQmExnJQHrSkZY0pCYVKUlBcpKRlCQkJhEJSUB84hGX
OMQmFjGJQXSiEZUoRCYSEYlAeMIRljCEJhQhCUFwghGUIAQmEAH8Unx/8oPv
fONf/uErX/jMJz7ygfe84y1veM0rXvKC5zzjKU94zCMe8oD73OMud7jNLf7m
L25yg+tc4ypX+JM/uMwlLnKB85zjLGc4zSlOcoLjHOMoRzjMIQ5ygP3sYy97
2M0udrKD7WxjK1vYzCY2soH1rGMta1jNKlayguUsYylLWMwiFrKA+cxjLnOY
zSxmMoPpTGMqU5jMJCYygfGMYyxjGM0oRjKC4QxjKEMYzCAGMoD+9KMvfehN
L3rSg+50oytd6EwnOtKB9rSjLW1oTSta0oLmNKMpTWhMIxrSgPrUoy51qE0t
alKD6lSjKlWoTCUqUoHylKMsZShNKUpSguIUoyhFKEwhClKA/OQjL3nITS5y
koPsZCMrWchMJjKSgfSkIy1pSE0qUpKC5CQjKUlITCISkoD4xCMucYhNLGIS
g+hEIypRiEwkIhKB8IQjLGEITShCEoLgBCMoQQhMoED/Hb+/jJ/84Dvf+Jd/
+MoXPvOJj3zgPe94yxte84qXvOA5z3jKEx7ziIc84D73uMsdbnOLv/mLm9zg
Ote4yhX+5A8uc4mLXOA85zjLGU5zipOc4DjHOMoRDnOIgxxgP/t+/wF+/wDY
zS52soPtbGMrW9jMJjaygfWsYy1rWM0qVrKC5SxjKUtYzCIWsoD5zGMuc5jN
LGYyg+lMYypTmMwkJjKB8YxjLGMYzShGMoLhDGMoQxjMIAYygP70oy996E0v
etKD7nSjK13oTCc60oH2tKMtbWhNK1rSguY0oylNaEwjGtKA+tSjLnWoTS1q
UoPqVKMqVahMJSpSgfKUoyxlKE0pSlKC4hSjKEUoTCEKUoD85CMvechNLnKS
g+xkIytZyEwmMpKB9KQjLWlITSpSkoLkJCMpSUhMIhKSgPjEIy5xiE0sYhKD
6EQjKlGITCQiEoHwhCMsYQhNKEISguAEC/j/uf+78v+O/YD/AWsLTu4=
             "]]]}, {}, {}}, {{}, {}, 
          {RGBColor[0., 0.25, 0.5], PointSize[0.006944444444444445], 
           AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
ZwMb2cRmtrCVbWxnBzuD/P/P9T+3BU1r
            "]]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 67.7751851851852},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox["\"No. Individuals\"", TraditionalForm], None}, {
         FormBox["\"Time (No. Iterations)\"", TraditionalForm], None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{34.14843750000001, 3.390857475344319}, {34.5, 
       14.750000000000057`}},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"Sea Urchin Population (MA of 150)\"", TraditionalForm],
      PlotRange->{{0., 1210.}, {67.7751851851852, 96.11333333333333}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Prolog->{{
         Directive[{
           RGBColor[0.8, 0.4, 0.4], 
           Dashing[{Small, Small}]}], 
         LineBox[{{350, 0}, {350, 1000}}]}, 
        StyleBox[
         InsetBox[
          FormBox["\"\"", TraditionalForm], {590, 75}], {
          RGBColor[0.4, 0.4, 0.4]}, StripOnInput -> False]},
      Ticks->{Automatic, Automatic}], {465, -111.24611797498106}, 
     ImageScaled[{0.5, 0.5}], {360, 222.49223594996212}], InsetBox[
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJztXPt7nGWZHkEhIuKgVYKcRuQQsMoABUIt8gGFBlrK0ANNz9M0bZO2aSfn
yfmbycxkjplvBmSjgpuVXktWkQ1adqNWiBw0SGUHAYmIOGjFqKCjAhvktDO9
7zvXNfkL9odvfpnrzjvv+7zP+XkPeT9Tt3/VjmMcDkfHhx2O0jc+hat/drj0
6TH4B+OrXyl+PtBLXGGcXPpcLOw0FjeNPnNcnfAC48HAytNm7hCuNCbODP/5
1inh043O0ud9YZex+9i7L89d2Ud8trEp/cgbVW3C5xhvVhX/8m3h84wrco3H
3v2KcJVRgpe7+okvNGYOFidQK7zQWHD/spe7k8JfwHwfEXYb93607QXjf4Uv
NrY/cdGd71w4QHyJUeq+YIvwpcZf/1L8DAsvMrwL33o8+7DwZcYDR05Z3v83
4cuNtaXPySbxFcbZpc+FwtXGj7NbF751jfCVRpHa/cvWCy823He+U/fEfuEv
GiV4UUR4iXFScfr33i18lfHscUUOvyv8JcjvCeGrjZ6SQF4SNoxbTitK7O/E
pmGc93Dt3xMfCrD9GqPE3tZKYvMa6KdK7dfCPi5T+7XGWUV1T1yr9uuM5f1F
idyi9usgn/VqX2qsKhnINrUvNV76dfHTqPbrjRdKGmpR+/Xgr0ftN4D/sNpv
MK464fl7fBm1LzNK6qy7W+3LjNL0zvwPtdeAn4NqrwG9h9R+I+xrSu03wr5z
ar8J9vMrtd9kxKLFzxG1LzeO+lNB7cuNkjiWv6f2FdDvR4JsXwH9fprYcbOx
/u+Jcx+uUvvNRvLcooKuUPtK/P4Gta+Ev61R+y3GNaUJetV+C+yrSe0eyK+L
2PBAfmH93mNUlhSYJp70oP9X1P9W49APip971P9W+Mv96n8r5j+h/rcaJfM6
91H1X2WUzG/lk+q/Cvp/Wv1XwZ+n1X8V7OXX6r8a/vWy+q+GPo+o/2r48yvq
vxrymFH/NcbtRfd7/E/qvwb6flX910DfwpNr4K+vqf9ao7kksIL6rzVeLZpX
+B/qv9YoRrfGY99Q/7XwtzfV/zboa1b9b4N9vqX+t4Ff4cnbEG/eVv918Nd3
1X+dUVMS//vqvw70jhlk/3XQ34eIHbXwxw8TG7Wwp5OIzVrE55PVvxbx/5Pq
vx7+fYr6r4d9CpvrIZ9K9V8PfZ2q/hvK240NxrtF8ncKmxuMknl+dK7/BqMY
vRc3CTs2Ql4az9gI+xE2N8I/T1P/jYgfwo5N4OcM9d9kHF9KEGeq/ybjW98s
fs5W/02I3+ep/2b47+fUf7NRMvfaS9R/M+Lvleq/GfHlWvXfgvFvUv8t+F6j
/lsg/83qv8XYefSj/lvx7VP/rdBHp/pvRTzuV/+tsJ8h9fcyXhK7vKD3FY3n
xfy+Qez1wl++qfG9yCffIR71Ir59X/S8iB+PEue98J+fif425I9fiv422PPv
RX8b4tPfRH8b5Pmu6G8zLi19PhIi/W3wt1OJJ7cZpXCw6Xzi/Dbk/8uJHXVG
CS6+nthVZ/y+6A4PrCE26hBP6om9dcbS0qeN2KyDvQ+Kfh3o3S76dcg//yb6
dYgv46K/3Sil14U/FP3tiJdTor/dKGrnqhOeEf3tsM8XRH877PG3or8d/jEj
+tshz9dEfzvrE9GvR/sbol9vlMzhqn+Kfj30/Z7o18N+jg2Tfj3keQLxaD3s
72PEk/WQ3wLifD30eSqxYwfquTOJXTsQvz5LbOxg/iP27gC9L4j+DsT3S0R/
B+Z7uejvQL22WPR3gN+rRH8n9He16O8E/9eK/k7wc53o78T3UtHfifh8vejv
RL6oEf2diHc3i/5OxONVor8L9rJO9HcZF5QEtkn0d0He20V/F+TXKPq7EM/2
i/4u2Eun6O+CP/aL/i7wFxH9BuTrYdFvQDy7XfQbEI9HRL8B8eSrot+A/HWX
6DfAnu8W/QbkW7XnG+Bvanc0lvd3NYKfr4l+I+OR6DciH2g+ZiPq+ztEvxH8
ZEW/EfpLi34j/C8p+ruRf6Kiv5v+LPq7Ud8MiP5u40BRvM/3iP5ujOcX/d3g
p030d6Me9In+btSDe0V/D+Qlfbr2wF52iP4e5Ottor8H/rFR9Pcgfq4V/T3Q
l0f092A+K0R/D+LFTaK/F/lxmejvRf66QfT3sr4U/b2Ml6K/F/TkD6N7MV+1
T+5FvBfO70U8FHY0QT7q72pCfSh/M5oQbw3Rb4L9fkn0m5C/5M+jTYgXS0S/
CfY/5/9NrJ9Ffx/me5no70O8UDwxiBVvvPswX8Ujcx/8+WzR3wf/PV309yEe
fUr098EfnKK/H/nmRNHfj/4Vor8f8fE40d9vBIvh5eCHRH8/9CE8Oq99cj/s
/3jR349vje/wQR5qd/pQb6vd5YN9fpjY7UN9JWz4wJ/iv8eH+Qp7fcajxfCW
Fvb5kA/Er+mDPIUtH+qxj4ofH+xL7eM+2IPw5Lzxcj7UGx8Rvz7Yt3DBh3pF
83E0wz6Enc2wL2FXczk/7mbIW/MzmmGvyneeZtj3yeK/uVzfvmbMV9hsRrxV
f6sZ9dZJ4r8Z6wm1jzcjXqn/ZDPsRTjXjHgonG9GPFX/QjP41/iOFuhT/Dhb
MH9hVwv8Q9jdgvphjv952NOCfKzxvS2IN8K+FsQr/d5sQXya039Lub5GW5Bf
ZW/jLahvZJ+TLdifEM61IF7JX/It5f5RaEG9qPrF0Yp87RD/rfCH91UPtUL/
qn/crfCHd1UftcK/3ib2tCJfvaV6qRX+PUvsa0X++F/Vb63wjzeJrVbIS3i0
Ff6g+my8Ffp9XfVdK/KPcK4V8hDOt3L9SVwgPxrf0YZ8qvk552FXG+Sh+brb
yudvzMOeNvir+nvboK85/tsQX4TNeb+32uAvwqNt8GeNP95mlMTbKDzZBn8R
P7k2fM/xT/oF8d8G+1M97GiH//1Z/LfDn1Q/u9qxP/EH8d+O+PCK+J+HPe3w
l9+L/3bkD9XnvnbEu7z4b0d+/LX4b8d8XxT/7eBP9f54O+qHafHfjnrgefHf
jnj2C/HP+Twn/snfs+K/A/ar9YWzA/z+j/jvgH8eFv8diEc/Ef8d8M8fif8O
2OMh8d+B+f23+O+A/r4r/juwnr1f/Hfge0z8d6De/Ib474C8vy7+O7gfJf47
sL7Oiv8O2H9K/JOfqPjvhL+ExH8n6seg+O9EPOsX/53gr1f8d6Je6hb/nagX
O8V/J+Jpu/jvRL3QIv47Ee/2i/9OxKsm8U96e8U/++8W/53wj13ivxP61Xo1
34n18jbxz/luEf9+rD82in8//K9W/PvRf6349yO+rhL/fujzFvHP9pXi3496
5Gbx70f8WiH+/bCn5eJ/3u9H/VjvarxxP+xT9Cb9yIce8e+H/jS/PMdfLf79
kI/W944uxGvx5+xCfLxN/HfBfteJ/y74r+RjsP968d8Fe9kg/ruwP7VZ/HfB
X4TNLvi/sNUFf9wq/rugX+HxLuRb6XOS89su/rsQT+f03wX73yH+u5BPhB3d
GF/9nd3wrzrx3416xSv+u6EfzdfoRvyX/Xi6Yb+Sh7cb9YXk6+tGvSR9mN3w
P+nP4u/n9N8Nf5J9jLP9RvHfjfWwcK4b+Vk43436Z5n47+Z6Rvz3QF/Xiv8e
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
39rfz1P+5xIfsZDvzyGesRBPzyN+1eL9BOIC5aXxXqd+db4wa5WfH7xjIR7o
/MCRgTyFPzgPV2QwX51nnJhB/ah257zfL8igPhauzKAeFD49A341H1eG9y+I
z8kgfwlXZcC/+i/MwJ7V7s5wf5x4UQb8Sp7VGfB7NvGSDOLnmcQG56v3FpZm
sH46lbgmA3v/FPGKTPn5mCeDeK7z9DUZ+LPaazNYD6r/pgz8X+dpXspT9Osz
iDenEzdk+P+xxHszyOcuYl8G9aLO39o4nuzDn0G+kz30ZpC/JD8zU26vIepL
51tRylfnSckM6hXZu5VB/XYx8R0Z+JvOm0YysH/5y12Uv873RjPl53UHaG/C
Y6QvfF8G+5s67xunfOWfB2mPwhMZrI++SHwog/iq+xmTGf4/IfFj1Oec/1Mf
ut9xOIN6QzjH+Qg/S/0KT2d4v4n4xQzOi0UvP6/9CO1f53Ez9BfhV+fxU6D8
hF+nvYr/2Qy+xe87GeRT0Xdky++vfDCL8XX+V5GFvlUPnUisesqZRX2l+mdB
tvy+TWWW7/EQn56F/jcQu7Ll9ds5WdjLZuKqLPgXXpiFflUfubPgR3hRFvFb
9VR1lvfRiZdkIZ/biA3yr/dSlmZhH+KnJgv7UL5YkYW8VQ96ssjHNxKvmSev
2iz0q/pyUxbxSPnGS/ktJa7Pop6T/BuyvB9IvDdbbr++LOpjnYe3ZWFf8i9/
Fvao8/XeLOKn/NXMIl7N+X+2PJ9Es1j/Kn4ms+Xn/1YW34pnd2RRLysejmQR
T04ivovy0P2i0Szir+4XHchivXEs8VgW8Ur3Ge7Lwh8dxOPU77u8/3CQ/P9T
9y0o31niQ1nER92fmOT4up/0WBb7L8JTWcTH14kPU99qz2VRn2m8Z6kP3X+a
ziJe637Ui+RX7//k6Q/HkJ8jWdRDksdMFus9yctRuPof7ff0vPeb7rn2Mmy/
32W/32W/32W/36X9Ffv9Lvv9Lvv9Lvv9Lvv9LtK33++y3+9y2O932e93kb79
fpf9fpf9fpf9fpf4t9/vst/vst/vst/vEv/2+132+132+132+13i336/y36/
y36/y36/S/zb73fZ73fZ73fZ73cR2+932e932e932e932e93Advvd9nvd9nv
d9nvd9nvdwHb73fZ73fZ73fZ73fZ73cB2+932e932e932e932e93Advvd9nv
d9nvd9nvd9nvdwHb73fZ73fZ73fZ73fZ73cB2+932e932e932e932e93Advv
d9nvd9nvd9nvd9nvdwHb73f9v32/6/8AZ8e5CQ==
        "], {{{}, 
          {RGBColor[0.11, 0.6, 0.11], Opacity[0.2], EdgeForm[None], 
           GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl2GO3GIYSBdAb27Zt27Zt27Zt27Ztm23YxrbRRm/n9cNeM//gnJlEjTtU
bh84ICAgEHuD/jf3BP1v380udrKD7WxjK1vYzCY2soH1rGMta1jNKlayguUs
YylLWMwiFrKA+cxjLnOYzSxmMoPpTGMqU5jMJCYygfGMYyxjGM0oRjKC4Qxj
KEMYzCAGMoD+9KMvfehNL3rSg+50oytd6EwnOtKB9rSjLW1oTSta0oLmNKMp
TWhMIxrSgPrUoy51qE0talKD6lSjKlWoTCUqUoHylKMsZShNKUpSguIUoyhF
KEwhClKA/OQjL3nITS5ykoPsZCMrWchMJjKSgfSkIy1pSE0qUpKC5CQjKUlI
TCISkoD4xCMucYhNLGISg+hEIypRiEwkIhKB8IQjLGEITShCEoLgBCMoQQhM
IAL4FSQg4Cc/+M43/uUfvvKFz3ziIx94zzve8obXvOIlL3jOM57yhMc84iEP
uM897nKH29zib/7iJje4zjWucoU/+YPLXOIiFzjPOc5yhtOc4iQnOM4xjnKE
wxziIAfYzz72sofd7GInO9jONrayhc1sYiMbWM861rKG1axiJStYzjKWsoTF
LGIhC5jPPOYyh9nMYiYzmM40pjKFyUxiIhMYzzjGMobRjGIkIxjOMIYyhMEM
YiAD6E8/+tKH3vSiJz3oTje60oXOdKIjHWhPO9rShta0oiUtaE4zmtKExjSi
IQ2oTz3qUofa1KImNahONapShcpUoiIVKE85ylKG0pSiJCUoTjGKUoTCFKIg
BchPPvKSh9zkIic5yE42spKFzGQiIxlITzrSkobUpCIlKUhOMpKShMQkIiEJ
iE884hKH2MQiJjGITjSiEoXIRCIiEQhPOMIShtCEIiQhCE4wghKEwAQigF9C
8Cc/+M43/uUfvvKFz3ziIx94zzve8obXvOIlL3jOM57yhMc84iEPuM897nKH
29zib/7iJje4zjWucoU/+YPLXOIiFzjPOc5yhtOc4iQnOM4xjnKEwxziIAfY
zz72sofd7GInO9jONrayhc1sYiMbWM861rKG1axiJStYzjKWsoTFLGIhC5jP
POYyh9nMYiYzmM40pjKFyUxiIhMYzzjGMobRjGIkIxjOMIYyhMEMYiAD6E8/
+tKH3vSiJz3oTje60oXOdKIjHfhdpNrRlja0phUtaUFzmtGUJjSmEQ1pQH3q
UZc61KYWNalBdapRlSpUphIVqUB5ylGWMpSmFCUpQXGKUZQiFKYQBSlAfvKR
lzzkJhc5yUF2spGVLGQmExnJQHrSkZY0pCYVKUlBcpKRlCQkJhEJSUB84hGX
OMQmFjGJQXSiEZUoRCYSEYlAeMIRljCEJhQhCUFwghGUIAQmEAH8Unx/8oPv
fONf/uErX/jMJz7ygfe84y1veM0rXvKC5zzjKU94zCMe8oD73OMud7jNLf7m
L25yg+tc4ypX+JM/uMwlLnKB85zjLGc4zSlOcoLjHOMoRzjMIQ5ygP3sYy97
2M0udrKD7WxjK1vYzCY2soH1rGMta1jNKlayguUsYylLWMwiFrKA+cxjLnOY
zSxmMoPpTGMqU5jMJCYygfGMYyxjGM0oRjKC4QxjKEMYzCAGMoD+9KMvfehN
L3rSg+50oytd6EwnOtKB9rSjLW1oTSta0oLmNKMpTWhMIxrSgPrUoy51qE0t
alKD6lSjKlWoTCUqUoHylKMsZShNKUpSguIUoyhFKEwhClKA/OQjL3nITS5y
koPsZCMrWchMJjKSgfSkIy1pSE0qUpKC5CQjKUlITCISkoD4xCMucYhNLGIS
g+hEIypRiEwkIhKB8IQjLGEITShCEoLgBCMoQQhMoED/Hb+/jJ/84Dvf+Jd/
+MoXPvOJj3zgPe94yxte84qXvOA5z3jKEx7ziIc84D73uMsdbnOLv/mLm9zg
Ote4yhX+5A8uc4mLXOA85zjLGU5zipOc4DjHOMoRDnOIgxxgP/t+/wF+/wDY
zS52soPtbGMrW9jMJjaygfWsYy1rWM0qVrKC5SxjKUtYzCIWsoD5zGMuc5jN
LGYyg+lMYypTmMwkJjKB8YxjLGMYzShGMoLhDGMoQxjMIAYygP70oy996E0v
etKD7nSjK13oTCc60oH2tKMtbWhNK1rSguY0oylNaEwjGtKA+tSjLnWoTS1q
UoPqVKMqVahMJSpSgfKUoyxlKE0pSlKC4hSjKEUoTCEKUoD85CMvechNLnKS
g+xkIytZyEwmMpKB9KQjLWlITSpSkoLkJCMpSUhMIhKSgPjEIy5xiE0sYhKD
6EQjKlGITCQiEoHwhCMsYQhNKEISguAEC/j/uf+78v+O/YD/AWsLTu4=
             "]]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.11, 0.6, 0.11], PointSize[0.006944444444444445], 
           AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
ZwMb2cRmtrCVbWxnBzuD/P/P9T+3BU1r
            "]]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 429.9996296296296},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox["\"No. Individuals\"", TraditionalForm], None}, {
         FormBox["\"Time (No. Iterations)\"", TraditionalForm], None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{40.34765625, 3.5690020032732264`}, {34.5, 
       14.750000000000057`}},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"Kelp Population (MA of 150)\"", TraditionalForm],
      PlotRange->{{0., 1210.}, {429.9996296296296, 711.2066666666667}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Prolog->{{
         Directive[{
           RGBColor[0.8, 0.4, 0.4], 
           Dashing[{Small, Small}]}], 
         LineBox[{{350, 0}, {350, 1000}}]}, 
        StyleBox[
         InsetBox[
          FormBox["\"\"", TraditionalForm], {590, 500}], {
          RGBColor[0.4, 0.4, 0.4]}, StripOnInput -> False]},
      Ticks->{Automatic, Automatic}], {775, -111.24611797498106}, 
     ImageScaled[{0.5, 0.5}], {360, 222.49223594996212}]}, {}},
  ImageSize->{
    UpTo[600], 
    UpTo[223]},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.8294812639479837`*^9, 3.829481279359725*^9}, {
   3.8294813222048483`*^9, 3.829481400324122*^9}, 3.829481431097031*^9, 
   3.8295965294149027`*^9},
 CellLabel->
  "Out[122]=",ExpressionUUID->"cddb8058-2afb-4b03-88a3-c9af3f59c105"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", "CLOC", " ", "*)"}], "\[IndentingNewLine]", 
  "$Line"}]], "Input",
 CellChangeTimes->{{3.829478799288967*^9, 3.829478832440735*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"1e542598-c51a-40ec-8d10-f72b09d9b259"],

Cell[BoxData["123"], "Output",
 CellChangeTimes->{{3.8294787923668737`*^9, 3.829478801943925*^9}, 
   3.8295965295384207`*^9},
 CellLabel->
  "Out[123]=",ExpressionUUID->"c8b8275a-c7e3-47c9-9f06-e3147f5677b5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["OVERFISHING", "Section",
 CellChangeTimes->{{3.829596426234593*^9, 
  3.8295964274270153`*^9}},ExpressionUUID->"8e0392a3-bf51-471a-8273-\
f002405e9e9c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"data", "[", "\"\<tSpawnRate\>\"", "]"}], " ", "=", " ", 
   "5"}]}]], "Input",
 CellChangeTimes->{{3.8295965097459097`*^9, 3.8295965187417717`*^9}},
 CellLabel->
  "In[124]:=",ExpressionUUID->"a27748ce-06a9-40c8-99b0-d7d774ced19e"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{{3.829596519920804*^9, 3.82959652955641*^9}},
 CellLabel->
  "Out[124]=",ExpressionUUID->"0d5243c1-2001-482f-81eb-ceb6407360ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"checkExploitationRange", "[", 
  RowBox[{
  "data", ",", " ", "10", ",", " ", "600", ",", " ", "1", ",", " ", "True"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8295964322877398`*^9, 3.82959643236653*^9}, {
  3.829596479072155*^9, 3.829596507446732*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"b592ae11-9469-4f48-a18c-c67b76005b37"],

Cell[CellGroupData[{

Cell[BoxData["0"], "Print",
 CellChangeTimes->{
  3.829596529577029*^9, {3.8295965692537947`*^9, 3.8295965736476507`*^9}, 
   3.829596692561493*^9},
 CellLabel->
  "During evaluation of \
In[144]:=",ExpressionUUID->"6c885d3a-9eec-41ab-98ca-cf7d1c144d5a"],

Cell[BoxData["1"], "Print",
 CellChangeTimes->{
  3.829596529577029*^9, {3.8295965692537947`*^9, 3.8295965736476507`*^9}, 
   3.8295967791719646`*^9},
 CellLabel->
  "During evaluation of \
In[144]:=",ExpressionUUID->"15938805-d915-46d5-a48d-ae84e29e9f7a"],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{
  3.829596529577029*^9, {3.8295965692537947`*^9, 3.8295965736476507`*^9}, 
   3.829596883355508*^9},
 CellLabel->
  "During evaluation of \
In[144]:=",ExpressionUUID->"8ba70cf5-7114-4e43-9e86-24aca0c422f2"],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{
  3.829596529577029*^9, {3.8295965692537947`*^9, 3.8295965736476507`*^9}, 
   3.829596916723495*^9},
 CellLabel->
  "During evaluation of \
In[144]:=",ExpressionUUID->"46082510-d11e-4651-8059-f80751fe6025"],

Cell[BoxData["4"], "Print",
 CellChangeTimes->{
  3.829596529577029*^9, {3.8295965692537947`*^9, 3.8295965736476507`*^9}, 
   3.829597013049512*^9},
 CellLabel->
  "During evaluation of \
In[144]:=",ExpressionUUID->"5db10c74-6e90-4836-bf56-c9f9b8e6aeb8"],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{
  3.829596529577029*^9, {3.8295965692537947`*^9, 3.8295965736476507`*^9}, 
   3.82959712532271*^9},
 CellLabel->
  "During evaluation of \
In[144]:=",ExpressionUUID->"f4c81a6b-2332-42b1-afd4-ad51e9381acc"],

Cell[BoxData["6"], "Print",
 CellChangeTimes->{
  3.829596529577029*^9, {3.8295965692537947`*^9, 3.8295965736476507`*^9}, 
   3.8295972253050632`*^9},
 CellLabel->
  "During evaluation of \
In[144]:=",ExpressionUUID->"a8181b48-cf33-4668-99f0-fb20f5d59cf7"],

Cell[BoxData["7"], "Print",
 CellChangeTimes->{
  3.829596529577029*^9, {3.8295965692537947`*^9, 3.8295965736476507`*^9}, 
   3.829597250937125*^9},
 CellLabel->
  "During evaluation of \
In[144]:=",ExpressionUUID->"41845e6c-322f-44ae-ada1-051975389dc5"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8295966229068213`*^9, 3.829596639889723*^9}, 
   3.829596690408904*^9},ExpressionUUID->"c69b91f3-80dd-412c-8b7e-\
75a03584cd88"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.829468243487492*^9, 3.829468248963098*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"abfe100f-a3ff-400d-a696-44d99ea9e812"]
}, Open  ]],

Cell[CellGroupData[{

Cell["HI THERE!!!", "Section",
 CellChangeTimes->{{3.829331732639469*^9, 
  3.82933173445043*^9}},ExpressionUUID->"2cf5eb10-109f-4a10-bedd-\
f9454ddeb818"],

Cell[BoxData[
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
GEeYjyUe6Pw/XOYm6g==
     "], {{0, 240.}, {320., 0}}, {0, 1},
     ColorFunction->GrayLevel],
    BoxForm`ImageTag[
    "Bit", ColorSpace -> Automatic, Interleaving -> None, MetaInformation -> 
     Association[
      "Exif" -> Association[
        "DateTime" -> 
         DateObject[{2021, 5, 7, 0, 15, 56.83400011062622}, "Instant", 
           "Gregorian", 1.], "PixelXDimension" -> 320, "PixelYDimension" -> 
         240, "TimeZoneOffset" -> 1., "Software" -> 
         "Created with the Wolfram Language for Students - Personal Use Only \
: www.wolfram.com"]]],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{324.7916666666663, Automatic},
   ImageSizeRaw->{320., 240.},
   PlotRange->{{0, 320.}, {0, 240.}}], ";"}]], "Input",
 CellChangeTimes->{3.829401975712905*^9},
 CellLabel->
  "In[127]:=",ExpressionUUID->"c94de38c-6007-4925-958d-61b0d24a39cb"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.829401977214044*^9, 3.82940197807586*^9}},
 CellLabel->
  "In[128]:=",ExpressionUUID->"a387c076-6ed4-4860-b638-a55909b44f45"],

Cell["", "Subsubsection",
 CellChangeTimes->{{3.829322438891089*^9, 3.82932244144032*^9}, {
  3.829331699887501*^9, 
  3.829331714666013*^9}},ExpressionUUID->"6a9ead70-275a-4521-a370-\
1f3d97d2d92a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["I CAN SEE YOU!!!", "Section",
 CellChangeTimes->{3.8293317213699627`*^9, 
  3.829468125877742*^9},ExpressionUUID->"eccaaac5-1439-4fec-8e22-\
e09d1cd4ea7b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EdgeDetect", "[", 
  RowBox[{"CurrentImage", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.829331706074465*^9, 3.829331707710116*^9}, 
   3.829331738512082*^9},
 CellLabel->
  "In[129]:=",ExpressionUUID->"d8ff6fe4-c917-4737-9a48-8e6da2362533"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzdmE2SNFuPlI8YsQ12wRCGTJsVdJs1PQOzD8wwds0S6O4KyR+XFJFR9dZl
0HHvW5kZcY5+XC7XyfwP//A//u6//btzzv/89//85+/+/n//57/97e//z3/9
lw//5b//r3/8p3/823/8h395/H//+d9/iqMrrv/jenfaw3bHntSDiK+ttT7q
YfgWtxDb3dj8tXiPvH1FPmLG3fY4/tVHYO91T2lF/WnZtE9XFIH1M5Y1nYiI
vjRj/rJ2PY9a3g0cpeF2d4+WAPc2G+U1gnfoN2pVBDxW7f71ZuFnyHQ0I2hx
4NcJ+ZCX4m73Heq4qr1A+s6PXuttB9DIZYhZz8RG3SofC1k4fO0JGMFTfbBs
3wLYP8fgKLN6aXXsjUaryHbEfdLjAs937dTMuNPqUhjfIhWoqsV4/JYmaKcd
OFj9EfVuOrvzyrOO7U7YU3pIP5spylmRgyQZ6H6PKakld+vB9Z9w71UEXXCK
frbovvMXi/1J8HMQte4sm+JtC9+yCgL7G8g914d0yOE4VWm1UYrgsEWYbsBc
434smlqwPmXxgErNYWnwXAJHNwhbUkyGskeGX50g2w+dNmxRvYcc+DTUX7wz
6b+jn3H6DsGMAEzQdfhSR4HyPSvURnlJEBbUy03VI/m0lWq5wW48x0uHtJhu
s4OBHvjUYN+6sxjD2XIXb2sx8CXqCObP/AZN6EA3MHFDzeEI0OxUgbstIVK8
t6SjcOfTpgdjPKKR3EuLLlee7SoJfqWcHT+P0rL0DXcTBXu0zHkjSFXlMcgC
toUhXSQBmKkQLeI6uQMFI9+2HAa3ZzoqK7pz8M+gRcMruol5FrGxBG2FydH7
mVqYEQNLtBnImdrkEnI7i5omBzcsKKTvYyi0lZRHeGqkq5pBFhttQwRQ1ZzF
2SQGhvHncEW+aYQVo4VDmLvbRnRWtkgmDgnFfOAeNoFXoPIHYE5CpQu1SC0W
6nLjAbI5ot+4yX5p6679fWfC2pvIzS3EjVpqM3mJ0PG9OqSarXDJz0VFJb1R
tgKsVuv5URAf4SPM24pb8a8ZUzS2hF0tOn76PmqD4gN+4lJjRVMX1ObGIuhp
dlrkURXr8HrQH7737lchVb1Es47mgxEU7tNqEA1Ioj9DnM7RdjzZHh1KcI7F
YpyMQtJVPbWyzHVf96jaMMv6r6P2dncgXnv3cFldRpGEIdq7AtQaSbQbC+9b
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
B+24ZMYIAwFKK8NNxYDvUwNHfz96c8FvAIhzgvXfYwtTSj3TfE1SaQzYt8J0
fNBIPcSaY5Gw2dfpsOVmxOsildzBsDdk/IrAQLB1Tr5mRXY9c4vsrAo/xLdV
picULbDj6sZ1An6JfcCXiexnE/vxIxNS8ZbkWxupQ2oHeXgH4KB/B5DVuBGO
2azCKlUykuzNYPsKaRP/jowLBTW5Z2+29Q1/65NoG9dQmKR+e5p6KQRky0nB
0Ecl+uBN6+h9yg6TGXQ+inRPxfbvICCYtVnLc7txbXo+8lxUYAChFWqNmJkJ
IJUSgTuFGtN6OZh/86JHD/AB5LERMfVNtfk0gakAN6dG9CBUmhTXQuPFXoc0
kvt5vgOxTdkv23arGHaD39O1EbfzeL638KdAZ9eM3Qg7fEPSDHgovEV+WgJy
atuX5xejOeKZyD0M42KJLMlbM2FZA6KYi+PqF4q1cCtN8NwvCMmlXX4koVb9
KkG5aGKXCDareVC8yXu7yI42+v2jaYWxZpw/3OmkWDVa+CYEgnqiOL60V5g4
9CA3EMuBW4jbvLfLiTFm4BIcPvb4vyL1s8J2cFvQDcczZK5Y0n45GNRBGUMc
zjtiHPTQ8fsA1Xqhey2f6/1mW4EXW+ocUh2BcxfOKpVg81Z56qzswjKPKo2L
jKrqF55f5I8UgU3RTX4LxactXbMQ7dg2GoGaTC6GcjW2Va5uuU4/PcQ4Lbo2
d02SXTnMRlfN78Cno6vBYB+q7vORbWvdhDU63YEOaikvArM+VQCTumx0xwm7
UweinvfA1C4UhW/iB1ZXYOieU8OxTzdgU35Lpir/EhyBFFouBPVEXgwb4y8r
BVDNWOfyOEjsdFFgzxePO4xuOcOwRx7w0xKXuwwpew0qZ6thrkiL+oq0xeKG
QBy4AskqCcvoFhiicbuIhMhwDKBRrnpFddjbRmWTq1TQQOacMK2WoTXH/l2B
90pWexwYDtnddOkePqfR20WlD7cuoihAYFpUZ7udnHGa5VLUiypVFK4uPwY5
Cy3jpHScvnJGegvNW/j8iPrgw1XKmhwh1gmm7ktIi3vodEgr4I6KDIhW5xbD
YMPUDcn1tBckb7B5vjpox+N0S72jAxMhn/fW85gD6YMprFccwoTvCMapAo8q
kB7G4irXzPz38MOttG09DHYEFhiLII7NrNIR1UhjG9apyXEMgjaXNJY905pV
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

    "], {{0, 240.}, {320., 0}}, {0, 1},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag[
   "Bit", ColorSpace -> Automatic, Interleaving -> None, MetaInformation -> 
    Association[
     "Exif" -> Association[
       "DateTime" -> 
        DateObject[{2021, 5, 10, 1, 48, 50.747000217437744`}, "Instant", 
          "Gregorian", 1.], "PixelXDimension" -> 320, "PixelYDimension" -> 
        240, "TimeZoneOffset" -> 1., "Software" -> 
        "Created with the Wolfram Language for Students - Personal Use Only : \
www.wolfram.com"]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{320., 240.},
  PlotRange->{{0, 320.}, {0, 240.}}]], "Output",
 CellChangeTimes->{3.8293317833991747`*^9, 3.8294019632074738`*^9, 
  3.8294122375571327`*^9, 3.8294128572768297`*^9, 3.829413801224121*^9, 
  3.829414397088785*^9, 3.82942200313116*^9, 3.829476509416478*^9, 
  3.829596530929792*^9},
 CellLabel->
  "Out[129]=",ExpressionUUID->"47ee8987-ce88-4d22-a861-6dc569d803bc"]
}, Open  ]]
}, Open  ]]
},
Editable->True,
Saveable->False,
ScreenStyleEnvironment->"Working",
CellInsertionPointCell->None,
WindowSize->{715.5, 783.75},
WindowMargins->{{3, Automatic}, {3, Automatic}},
WindowElements->{
 "StatusArea", "MemoryMonitor", "MagnificationPopUp", "VerticalScrollBar", 
  "MenuBar"},
WindowTitle->"Predator-Prey Ecosystem: A Real-Time Agent-Based Simulation - \
Source",
DockedCells->{},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
CellContext->Notebook,
Magnification:>1.1 Inherited,
FrontEndVersion->"12.2 for Linux x86 (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"7dd96ac7-2143-4251-8621-d0446a6ee7f7"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[637, 22, 241, 5, 110, "Section",ExpressionUUID->"8e21f89b-a20a-4716-b126-7254b94ec7d6"],
Cell[881, 29, 3758, 65, 52, "Section",ExpressionUUID->"0234164f-36a2-441c-b2a5-019692ee3694"],
Cell[CellGroupData[{
Cell[4664, 98, 172, 3, 58, "Section",ExpressionUUID->"42dcad2d-3e92-4bc1-8be6-842c5a1d5631"],
Cell[CellGroupData[{
Cell[4861, 105, 9395, 210, 1020, "Input",ExpressionUUID->"15ace6c3-205f-4ecf-af72-e5511b9c3e56",
 Magnification->1.,
 CellID->12186613],
Cell[14259, 317, 5818, 106, 70, "Output",ExpressionUUID->"49f58ad1-56fc-4320-be25-dc984d94838b"]
}, Open  ]],
Cell[20092, 426, 169, 2, 33, "Input",ExpressionUUID->"c263055b-22dc-43a7-96fe-28c695a0c2ce"],
Cell[CellGroupData[{
Cell[20286, 432, 349, 8, 33, "Input",ExpressionUUID->"5162efa2-433c-48c4-8f7a-4666aeaa3363"],
Cell[20638, 442, 629, 13, 25, "Message",ExpressionUUID->"6bb3deb9-210b-4d13-a3ad-58ac4101d44d"],
Cell[21270, 457, 392, 6, 37, "Output",ExpressionUUID->"826256ce-aee9-4367-ad02-b1de479a3637"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[21711, 469, 174, 3, 74, "Section",ExpressionUUID->"de8f6474-47fd-49b2-b9d5-dc298ed14ee6"],
Cell[21888, 474, 3031, 67, 360, "Input",ExpressionUUID->"b717d418-0b9e-4482-bf06-fae1005ea559",
 Magnification->1.,
 CellID->179304614]
}, Open  ]],
Cell[CellGroupData[{
Cell[24956, 546, 238, 4, 74, "Section",ExpressionUUID->"cae4598f-4ffd-434f-92b5-cddff5873856"],
Cell[25197, 552, 13083, 285, 1218, "Input",ExpressionUUID->"94fb4a4c-2de3-41f0-9779-58b1a0ad9bde",
 CellID->581179032]
}, Open  ]],
Cell[CellGroupData[{
Cell[38317, 842, 164, 3, 74, "Section",ExpressionUUID->"8c4e5bb6-94de-42d4-8caf-2a2d427afeb8"],
Cell[38484, 847, 10734, 225, 1112, "Input",ExpressionUUID->"052fd585-afce-467d-ba95-51e37a546043"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49255, 1077, 211, 4, 74, "Section",ExpressionUUID->"8b0c757c-ca58-499f-8de4-113eb5b5646e"],
Cell[49469, 1083, 38483, 776, 3435, "Input",ExpressionUUID->"81ae9bd9-68b6-4442-9f89-7c3efd90c9e2",
 CellID->323996531]
}, Open  ]],
Cell[CellGroupData[{
Cell[87989, 1864, 185, 3, 74, "Section",ExpressionUUID->"d7c8d256-4a2a-4482-9d83-475bdb981ac4"],
Cell[88177, 1869, 11171, 244, 1791, "Input",ExpressionUUID->"58007741-eefc-4e44-a9c4-db4af26cca35"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99385, 2118, 177, 3, 74, "Section",ExpressionUUID->"6174aa7f-e3fc-494f-b57f-27424df6b8c1"],
Cell[99565, 2123, 197, 3, 33, "Input",ExpressionUUID->"b939bdc1-a4e9-4e2b-b0b4-317c3f8d452d"],
Cell[CellGroupData[{
Cell[99787, 2130, 30519, 644, 2284, "Input",ExpressionUUID->"0176965e-3757-4de0-9628-1820fc087e4d",
 CellID->428012851],
Cell[130309, 2776, 53519, 1027, 952, "Output",ExpressionUUID->"59074502-ce57-4d66-a15f-7719b2495109"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183865, 3808, 237, 4, 33, "Input",ExpressionUUID->"4aa8cdd1-7b86-4e41-9b2c-4e48f06ed98e"],
Cell[184105, 3814, 337, 4, 37, "Output",ExpressionUUID->"13a8e417-f446-4aa3-a578-5e6025f0a0ca"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[184491, 3824, 171, 3, 74, "Section",ExpressionUUID->"6db92528-9b70-4ce0-859d-2a79742d1385"],
Cell[CellGroupData[{
Cell[184687, 3831, 12725, 259, 1229, "Input",ExpressionUUID->"21b9d45d-84a6-40fb-8cde-5a5766de8c1d"],
Cell[197415, 4092, 11063, 219, 376, "Output",ExpressionUUID->"5aeea5b0-b4af-4110-b4d7-52dc37e3c1c1"]
}, Open  ]],
Cell[208493, 4314, 171, 2, 33, "Input",ExpressionUUID->"980d8f2b-3861-44f9-98ef-44df88dd5542"]
}, Open  ]],
Cell[CellGroupData[{
Cell[208701, 4321, 162, 3, 74, "Section",ExpressionUUID->"c325450c-cde8-4f9d-b255-790548e8fffe"],
Cell[208866, 4326, 34549, 801, 3321, "Input",ExpressionUUID->"e0ad99f2-2ed3-4b98-946d-4101ad5203ca"],
Cell[243418, 5129, 173, 2, 33, "Input",ExpressionUUID->"9e0633c5-f7cc-42f8-bedc-673fa548f486"],
Cell[CellGroupData[{
Cell[243616, 5135, 226, 4, 58, "Subsection",ExpressionUUID->"831ee00f-1629-4240-aac3-f51ac296a4ea"],
Cell[243845, 5141, 2025, 53, 502, "Input",ExpressionUUID->"fd06d3ab-a6f0-4ad7-b89a-0e7ceee05080"],
Cell[245873, 5196, 4017, 105, 760, "Input",ExpressionUUID->"b6059314-b2bc-46d7-a658-404ce0097246"],
Cell[249893, 5303, 425, 9, 35, "Input",ExpressionUUID->"efeae2b2-0262-43eb-baf2-8d5a6b833083"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[250367, 5318, 179, 3, 74, "Section",ExpressionUUID->"e351e90a-a2e4-43c1-9c69-a6a85f9bfb40"],
Cell[250549, 5323, 278, 6, 33, "Input",ExpressionUUID->"2c31b801-cc88-43a4-9345-978d6e2b72bb"],
Cell[CellGroupData[{
Cell[250852, 5333, 4200, 112, 526, "Input",ExpressionUUID->"34b38085-8506-49b1-86bd-cbe77231c94e"],
Cell[255055, 5447, 206, 3, 37, "Output",ExpressionUUID->"5a4a83a2-989d-44ae-8214-da4a20c00f54"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255298, 5455, 1199, 26, 151, "Input",ExpressionUUID->"6c10e259-ed50-4f36-b44a-0cd12dbdea92"],
Cell[256500, 5483, 465, 6, 37, "Output",ExpressionUUID->"8ada76e5-af52-4ece-b849-a910e69d575f"],
Cell[256968, 5491, 837, 17, 25, "Message",ExpressionUUID->"fd177267-d643-4dfe-9543-fcfd9e22f94c"],
Cell[257808, 5510, 466, 6, 37, "Output",ExpressionUUID->"48b42f6b-a3f0-450c-bdbe-cbb2cf6b4325"],
Cell[258277, 5518, 471, 7, 37, "Output",ExpressionUUID->"ae5e5ef8-ea75-49d5-8924-5963c6c48de3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[258785, 5530, 5881, 156, 526, "Input",ExpressionUUID->"19fee037-d4dc-47b7-bca7-a1fb4e9bc0dc"],
Cell[264669, 5688, 395, 11, 37, "Output",ExpressionUUID->"60c88f49-572d-4181-beab-d843db2a7b72"],
Cell[265067, 5701, 393, 11, 37, "Output",ExpressionUUID->"6f440684-39ae-4014-acb0-67d01cfc896d"],
Cell[265463, 5714, 395, 11, 37, "Output",ExpressionUUID->"9f27438e-04bc-4097-a8c5-7d4e62b70db6"],
Cell[265861, 5727, 27483, 607, 289, "Output",ExpressionUUID->"1a9b1bda-7e5d-4200-a1f3-bccc44f0eb15"]
}, Open  ]],
Cell[CellGroupData[{
Cell[293381, 6339, 772, 19, 127, "Input",ExpressionUUID->"b5b6fa0b-ada2-4e82-a2a5-0b2a87e6cd1d"],
Cell[294156, 6360, 321, 5, 37, "Output",ExpressionUUID->"a6b358e0-2be8-4d5d-b1cd-f8338490d5d4"],
Cell[294480, 6367, 320, 5, 37, "Output",ExpressionUUID->"6a549b2f-c9b0-4853-b125-104cc0b12937"],
Cell[294803, 6374, 321, 5, 37, "Output",ExpressionUUID->"9b389e60-da50-4fcf-ab9a-bc861b429914"]
}, Open  ]],
Cell[CellGroupData[{
Cell[295161, 6384, 787, 19, 104, "Input",ExpressionUUID->"d564ccc5-3146-45dd-bd29-4d079e7c31b1"],
Cell[295951, 6405, 228, 4, 37, "Output",ExpressionUUID->"dc20340e-7fe9-42d8-9aa4-c2a5b9f28468"]
}, Open  ]],
Cell[296194, 6412, 2320, 60, 244, "Input",ExpressionUUID->"a1e727b4-fddb-46f0-ac83-d1b0f63c9e2a"],
Cell[298517, 6474, 7193, 165, 1088, "Input",ExpressionUUID->"06195f67-5b51-45d0-a117-daec5e2f664d"],
Cell[CellGroupData[{
Cell[305735, 6643, 866, 22, 104, "Input",ExpressionUUID->"a67383ac-047d-4570-9d8c-1f179f43fcd8"],
Cell[306604, 6667, 48746, 858, 175, "Output",ExpressionUUID->"cddb8058-2afb-4b03-88a3-c9af3f59c105"]
}, Open  ]],
Cell[CellGroupData[{
Cell[355387, 7530, 284, 6, 80, "Input",ExpressionUUID->"1e542598-c51a-40ec-8d10-f72b09d9b259"],
Cell[355674, 7538, 209, 4, 37, "Output",ExpressionUUID->"c8b8275a-c7e3-47c9-9f06-e3147f5677b5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[355932, 7548, 158, 3, 74, "Section",ExpressionUUID->"8e0392a3-bf51-471a-8273-f002405e9e9c"],
Cell[CellGroupData[{
Cell[356115, 7555, 301, 7, 57, "Input",ExpressionUUID->"a27748ce-06a9-40c8-99b0-d7d774ced19e"],
Cell[356419, 7564, 176, 3, 37, "Output",ExpressionUUID->"0d5243c1-2001-482f-81eb-ceb6407360ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[356632, 7572, 362, 8, 33, "Input",ExpressionUUID->"b592ae11-9469-4f48-a18c-c67b76005b37"],
Cell[CellGroupData[{
Cell[357019, 7584, 254, 6, 25, "Print",ExpressionUUID->"6c885d3a-9eec-41ab-98ca-cf7d1c144d5a"],
Cell[357276, 7592, 256, 6, 25, "Print",ExpressionUUID->"15938805-d915-46d5-a48d-ae84e29e9f7a"],
Cell[357535, 7600, 254, 6, 25, "Print",ExpressionUUID->"8ba70cf5-7114-4e43-9e86-24aca0c422f2"],
Cell[357792, 7608, 254, 6, 25, "Print",ExpressionUUID->"46082510-d11e-4651-8059-f80751fe6025"],
Cell[358049, 7616, 254, 6, 25, "Print",ExpressionUUID->"5db10c74-6e90-4836-bf56-c9f9b8e6aeb8"],
Cell[358306, 7624, 253, 6, 25, "Print",ExpressionUUID->"f4c81a6b-2332-42b1-afd4-ad51e9381acc"],
Cell[358562, 7632, 256, 6, 25, "Print",ExpressionUUID->"a8181b48-cf33-4668-99f0-fb20f5d59cf7"],
Cell[358821, 7640, 254, 6, 25, "Print",ExpressionUUID->"41845e6c-322f-44ae-ada1-051975389dc5"]
}, Open  ]]
}, Open  ]],
Cell[359102, 7650, 177, 3, 33, "Input",ExpressionUUID->"c69b91f3-80dd-412c-8b7e-75a03584cd88"],
Cell[359282, 7655, 175, 3, 33, "Input",ExpressionUUID->"abfe100f-a3ff-400d-a696-44d99ea9e812"]
}, Open  ]],
Cell[CellGroupData[{
Cell[359494, 7663, 155, 3, 74, "Section",ExpressionUUID->"2cf5eb10-109f-4a10-bedd-f9454ddeb818"],
Cell[359652, 7668, 8834, 153, 284, "Input",ExpressionUUID->"c94de38c-6007-4925-958d-61b0d24a39cb"],
Cell[368489, 7823, 174, 3, 33, "Input",ExpressionUUID->"a387c076-6ed4-4860-b638-a55909b44f45"],
Cell[368666, 7828, 199, 4, 49, "Subsubsection",ExpressionUUID->"6a9ead70-275a-4521-a370-1f3d97d2d92a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[368902, 7837, 161, 3, 74, "Section",ExpressionUUID->"eccaaac5-1439-4fec-8e22-e09d1cd4ea7b"],
Cell[CellGroupData[{
Cell[369088, 7844, 272, 6, 33, "Input",ExpressionUUID->"d8ff6fe4-c917-4737-9a48-8e6da2362533"],
Cell[369363, 7852, 14871, 252, 282, "Output",ExpressionUUID->"47ee8987-ce88-4d22-a861-6dc569d803bc"]
}, Open  ]]
}, Open  ]]
}
]
*)

